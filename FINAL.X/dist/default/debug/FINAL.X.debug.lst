

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 02 20:32:56 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 25/07/2024 GMT
    40                           ; 
    41                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4520 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000FE0                     bsr             equ	4064
    74   000FE9                     fsr0            equ	4073
    75   000FEA                     fsr0h           equ	4074
    76   000FE9                     fsr0l           equ	4073
    77   000FE1                     fsr1            equ	4065
    78   000FE2                     fsr1h           equ	4066
    79   000FE1                     fsr1l           equ	4065
    80   000FD9                     fsr2            equ	4057
    81   000FDA                     fsr2h           equ	4058
    82   000FD9                     fsr2l           equ	4057
    83   000FEF                     indf0           equ	4079
    84   000FE7                     indf1           equ	4071
    85   000FDF                     indf2           equ	4063
    86   000FF2                     intcon          equ	4082
    87   000000                     nvmcon          equ	0
    88   000FF9                     pcl             equ	4089
    89   000FFA                     pclath          equ	4090
    90   000FFB                     pclatu          equ	4091
    91   000FEB                     plusw0          equ	4075
    92   000FE3                     plusw1          equ	4067
    93   000FDB                     plusw2          equ	4059
    94   000FED                     postdec0        equ	4077
    95   000FE5                     postdec1        equ	4069
    96   000FDD                     postdec2        equ	4061
    97   000FEE                     postinc0        equ	4078
    98   000FE6                     postinc1        equ	4070
    99   000FDE                     postinc2        equ	4062
   100   000FEC                     preinc0         equ	4076
   101   000FE4                     preinc1         equ	4068
   102   000FDC                     preinc2         equ	4060
   103   000FF3                     prod            equ	4083
   104   000FF4                     prodh           equ	4084
   105   000FF3                     prodl           equ	4083
   106   000FD8                     status          equ	4056
   107   000FF5                     tablat          equ	4085
   108   000FF6                     tblptr          equ	4086
   109   000FF7                     tblptrh         equ	4087
   110   000FF6                     tblptrl         equ	4086
   111   000FF8                     tblptru         equ	4088
   112   000FFD                     tosl            equ	4093
   113   000FE8                     wreg            equ	4072
   114   000F80                     PORTA           equ	3968	;# 
   115   000F81                     PORTB           equ	3969	;# 
   116   000F82                     PORTC           equ	3970	;# 
   117   000F83                     PORTD           equ	3971	;# 
   118   000F84                     PORTE           equ	3972	;# 
   119   000F89                     LATA            equ	3977	;# 
   120   000F8A                     LATB            equ	3978	;# 
   121   000F8B                     LATC            equ	3979	;# 
   122   000F8C                     LATD            equ	3980	;# 
   123   000F8D                     LATE            equ	3981	;# 
   124   000F92                     TRISA           equ	3986	;# 
   125   000F92                     DDRA            equ	3986	;# 
   126   000F93                     TRISB           equ	3987	;# 
   127   000F93                     DDRB            equ	3987	;# 
   128   000F94                     TRISC           equ	3988	;# 
   129   000F94                     DDRC            equ	3988	;# 
   130   000F95                     TRISD           equ	3989	;# 
   131   000F95                     DDRD            equ	3989	;# 
   132   000F96                     TRISE           equ	3990	;# 
   133   000F96                     DDRE            equ	3990	;# 
   134   000F9B                     OSCTUNE         equ	3995	;# 
   135   000F9D                     PIE1            equ	3997	;# 
   136   000F9E                     PIR1            equ	3998	;# 
   137   000F9F                     IPR1            equ	3999	;# 
   138   000FA0                     PIE2            equ	4000	;# 
   139   000FA1                     PIR2            equ	4001	;# 
   140   000FA2                     IPR2            equ	4002	;# 
   141   000FA6                     EECON1          equ	4006	;# 
   142   000FA7                     EECON2          equ	4007	;# 
   143   000FA8                     EEDATA          equ	4008	;# 
   144   000FA9                     EEADR           equ	4009	;# 
   145   000FAB                     RCSTA           equ	4011	;# 
   146   000FAB                     RCSTA1          equ	4011	;# 
   147   000FAC                     TXSTA           equ	4012	;# 
   148   000FAC                     TXSTA1          equ	4012	;# 
   149   000FAD                     TXREG           equ	4013	;# 
   150   000FAD                     TXREG1          equ	4013	;# 
   151   000FAE                     RCREG           equ	4014	;# 
   152   000FAE                     RCREG1          equ	4014	;# 
   153   000FAF                     SPBRG           equ	4015	;# 
   154   000FAF                     SPBRG1          equ	4015	;# 
   155   000FB0                     SPBRGH          equ	4016	;# 
   156   000FB1                     T3CON           equ	4017	;# 
   157   000FB2                     TMR3            equ	4018	;# 
   158   000FB2                     TMR3L           equ	4018	;# 
   159   000FB3                     TMR3H           equ	4019	;# 
   160   000FB4                     CMCON           equ	4020	;# 
   161   000FB5                     CVRCON          equ	4021	;# 
   162   000FB6                     ECCP1AS         equ	4022	;# 
   163   000FB6                     ECCPAS          equ	4022	;# 
   164   000FB7                     PWM1CON         equ	4023	;# 
   165   000FB7                     ECCP1DEL        equ	4023	;# 
   166   000FB8                     BAUDCON         equ	4024	;# 
   167   000FB8                     BAUDCTL         equ	4024	;# 
   168   000FBA                     CCP2CON         equ	4026	;# 
   169   000FBB                     CCPR2           equ	4027	;# 
   170   000FBB                     CCPR2L          equ	4027	;# 
   171   000FBC                     CCPR2H          equ	4028	;# 
   172   000FBD                     CCP1CON         equ	4029	;# 
   173   000FBE                     CCPR1           equ	4030	;# 
   174   000FBE                     CCPR1L          equ	4030	;# 
   175   000FBF                     CCPR1H          equ	4031	;# 
   176   000FC0                     ADCON2          equ	4032	;# 
   177   000FC1                     ADCON1          equ	4033	;# 
   178   000FC2                     ADCON0          equ	4034	;# 
   179   000FC3                     ADRES           equ	4035	;# 
   180   000FC3                     ADRESL          equ	4035	;# 
   181   000FC4                     ADRESH          equ	4036	;# 
   182   000FC5                     SSPCON2         equ	4037	;# 
   183   000FC6                     SSPCON1         equ	4038	;# 
   184   000FC7                     SSPSTAT         equ	4039	;# 
   185   000FC8                     SSPADD          equ	4040	;# 
   186   000FC9                     SSPBUF          equ	4041	;# 
   187   000FCA                     T2CON           equ	4042	;# 
   188   000FCB                     PR2             equ	4043	;# 
   189   000FCB                     MEMCON          equ	4043	;# 
   190   000FCC                     TMR2            equ	4044	;# 
   191   000FCD                     T1CON           equ	4045	;# 
   192   000FCE                     TMR1            equ	4046	;# 
   193   000FCE                     TMR1L           equ	4046	;# 
   194   000FCF                     TMR1H           equ	4047	;# 
   195   000FD0                     RCON            equ	4048	;# 
   196   000FD1                     WDTCON          equ	4049	;# 
   197   000FD2                     HLVDCON         equ	4050	;# 
   198   000FD2                     LVDCON          equ	4050	;# 
   199   000FD3                     OSCCON          equ	4051	;# 
   200   000FD5                     T0CON           equ	4053	;# 
   201   000FD6                     TMR0            equ	4054	;# 
   202   000FD6                     TMR0L           equ	4054	;# 
   203   000FD7                     TMR0H           equ	4055	;# 
   204   000FD8                     STATUS          equ	4056	;# 
   205   000FD9                     FSR2            equ	4057	;# 
   206   000FD9                     FSR2L           equ	4057	;# 
   207   000FDA                     FSR2H           equ	4058	;# 
   208   000FDB                     PLUSW2          equ	4059	;# 
   209   000FDC                     PREINC2         equ	4060	;# 
   210   000FDD                     POSTDEC2        equ	4061	;# 
   211   000FDE                     POSTINC2        equ	4062	;# 
   212   000FDF                     INDF2           equ	4063	;# 
   213   000FE0                     BSR             equ	4064	;# 
   214   000FE1                     FSR1            equ	4065	;# 
   215   000FE1                     FSR1L           equ	4065	;# 
   216   000FE2                     FSR1H           equ	4066	;# 
   217   000FE3                     PLUSW1          equ	4067	;# 
   218   000FE4                     PREINC1         equ	4068	;# 
   219   000FE5                     POSTDEC1        equ	4069	;# 
   220   000FE6                     POSTINC1        equ	4070	;# 
   221   000FE7                     INDF1           equ	4071	;# 
   222   000FE8                     WREG            equ	4072	;# 
   223   000FE9                     FSR0            equ	4073	;# 
   224   000FE9                     FSR0L           equ	4073	;# 
   225   000FEA                     FSR0H           equ	4074	;# 
   226   000FEB                     PLUSW0          equ	4075	;# 
   227   000FEC                     PREINC0         equ	4076	;# 
   228   000FED                     POSTDEC0        equ	4077	;# 
   229   000FEE                     POSTINC0        equ	4078	;# 
   230   000FEF                     INDF0           equ	4079	;# 
   231   000FF0                     INTCON3         equ	4080	;# 
   232   000FF1                     INTCON2         equ	4081	;# 
   233   000FF2                     INTCON          equ	4082	;# 
   234   000FF3                     PROD            equ	4083	;# 
   235   000FF3                     PRODL           equ	4083	;# 
   236   000FF4                     PRODH           equ	4084	;# 
   237   000FF5                     TABLAT          equ	4085	;# 
   238   000FF6                     TBLPTR          equ	4086	;# 
   239   000FF6                     TBLPTRL         equ	4086	;# 
   240   000FF7                     TBLPTRH         equ	4087	;# 
   241   000FF8                     TBLPTRU         equ	4088	;# 
   242   000FF9                     PCLAT           equ	4089	;# 
   243   000FF9                     PC              equ	4089	;# 
   244   000FF9                     PCL             equ	4089	;# 
   245   000FFA                     PCLATH          equ	4090	;# 
   246   000FFB                     PCLATU          equ	4091	;# 
   247   000FFC                     STKPTR          equ	4092	;# 
   248   000FFD                     TOS             equ	4093	;# 
   249   000FFD                     TOSL            equ	4093	;# 
   250   000FFE                     TOSH            equ	4094	;# 
   251   000FFF                     TOSU            equ	4095	;# 
   252   007D5C                     _CREN           set	32092
   253   007CF5                     _RCIF           set	31989
   254   000F8B                     _LATC           set	3979
   255   000F89                     _LATA           set	3977
   256   000F94                     _TRISC          set	3988
   257   000F93                     _TRISB          set	3987
   258   000F92                     _TRISA          set	3986
   259   000F94                     _TRISCbits      set	3988
   260   000F92                     _TRISAbits      set	3986
   261   000FC3                     _ADRESL         set	4035
   262   000FC4                     _ADRESH         set	4036
   263   000FBE                     _CCPR1L         set	4030
   264   000F9F                     _IPR1bits       set	3999
   265   000FAF                     _SPBRG          set	4015
   266   000FB8                     _BAUDCONbits    set	4024
   267   000FD0                     _RCONbits       set	4048
   268   000F9E                     _PIR1bits       set	3998
   269   000F9D                     _PIE1bits       set	3997
   270   000FCB                     _PR2            set	4043
   271   000FBD                     _CCP1CONbits    set	4029
   272   000FCA                     _T2CONbits      set	4042
   273   000FC0                     _ADCON2bits     set	4032
   274   000FC2                     _ADCON0bits     set	4034
   275   000FC1                     _ADCON1bits     set	4033
   276   000FD3                     _OSCCONbits     set	4051
   277   000FAB                     _RCSTAbits      set	4011
   278   000FAE                     _RCREG          set	4014
   279   000FAD                     _TXREG          set	4013
   280   000FAC                     _TXSTAbits      set	4012
   281   000FF2                     _INTCONbits     set	4082
   282                           
   283                           	psect	smallconst
   284   000600                     __psmallconst:
   285                           	callstack 0
   286   000600  00                 	db	0
   287   000601                     STR_4:
   288   000601  44                 	db	68	;'D'
   289   000602  44                 	db	68	;'D'
   290   000603  44                 	db	68	;'D'
   291   000604  0A                 	db	10
   292   000605  00                 	db	0
   293   000606                     STR_5:
   294   000606  4C                 	db	76	;'L'
   295   000607  44                 	db	68	;'D'
   296   000608  44                 	db	68	;'D'
   297   000609  0A                 	db	10
   298   00060A  00                 	db	0
   299   00060B                     STR_6:
   300   00060B  4C                 	db	76	;'L'
   301   00060C  4C                 	db	76	;'L'
   302   00060D  44                 	db	68	;'D'
   303   00060E  0A                 	db	10
   304   00060F  00                 	db	0
   305   000610                     STR_3:
   306   000610  44                 	db	68	;'D'
   307   000611  44                 	db	68	;'D'
   308   000612  4C                 	db	76	;'L'
   309   000613  0A                 	db	10
   310   000614  00                 	db	0
   311   000615                     STR_2:
   312   000615  44                 	db	68	;'D'
   313   000616  4C                 	db	76	;'L'
   314   000617  4C                 	db	76	;'L'
   315   000618  0A                 	db	10
   316   000619  00                 	db	0
   317   00061A                     STR_1:
   318   00061A  4C                 	db	76	;'L'
   319   00061B  4C                 	db	76	;'L'
   320   00061C  4C                 	db	76	;'L'
   321   00061D  0A                 	db	10
   322   00061E  00                 	db	0
   323   00061A                     STR_7           equ	STR_1
   324   00061F  00                 	db	0	; dummy byte at the end
   325   000001                     __activetblptr  equ	1
   326                           
   327                           ; #config settings
   328                           
   329                           	psect	cinit
   330   00102C                     __pcinit:
   331                           	callstack 0
   332   00102C                     start_initialization:
   333                           	callstack 0
   334   00102C                     __initialization:
   335                           	callstack 0
   336                           
   337                           ; Clear objects allocated to BANK1 (100 bytes)
   338   00102C  EE01  F000         	lfsr	0,__pbssBANK1
   339   001030  0E64               	movlw	100
   340   001032                     clear_0:
   341   001032  6AEE               	clrf	postinc0,c
   342   001034  06E8               	decf	wreg,f,c
   343   001036  E1FD               	bnz	clear_0
   344                           
   345                           ; Clear objects allocated to COMRAM (59 bytes)
   346   001038  EE00  F001         	lfsr	0,__pbssCOMRAM
   347   00103C  0E3B               	movlw	59
   348   00103E                     clear_1:
   349   00103E  6AEE               	clrf	postinc0,c
   350   001040  06E8               	decf	wreg,f,c
   351   001042  E1FD               	bnz	clear_1
   352   001044                     end_of_initialization:
   353                           	callstack 0
   354   001044                     __end_of__initialization:
   355                           	callstack 0
   356   001044  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   357   001046  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   358   001048  0E00               	movlw	low (__Lsmallconst shr (0+16))
   359   00104A  6EF8               	movwf	tblptru,c
   360   00104C  0E06               	movlw	high __Lsmallconst
   361   00104E  6EF7               	movwf	tblptrh,c
   362   001050  0100               	movlb	0
   363   001052  EF7D  F007         	goto	_main	;jump to C main() function
   364                           
   365                           	psect	bssCOMRAM
   366   000001                     __pbssCOMRAM:
   367                           	callstack 0
   368   000001                     	ds	32
   369   000021                     _width:
   370                           	callstack 0
   371   000021                     	ds	2
   372   000023                     _prec:
   373                           	callstack 0
   374   000023                     	ds	2
   375   000025                     _x:
   376                           	callstack 0
   377   000025                     	ds	2
   378   000027                     _a7:
   379                           	callstack 0
   380   000027                     	ds	2
   381   000029                     _a6:
   382                           	callstack 0
   383   000029                     	ds	2
   384   00002B                     _a5:
   385                           	callstack 0
   386   00002B                     	ds	2
   387   00002D                     _a4:
   388                           	callstack 0
   389   00002D                     	ds	2
   390   00002F                     _a3:
   391                           	callstack 0
   392   00002F                     	ds	2
   393   000031                     _a2:
   394                           	callstack 0
   395   000031                     	ds	2
   396   000033                     _a1:
   397                           	callstack 0
   398   000033                     	ds	2
   399   000035                     _a0:
   400                           	callstack 0
   401   000035                     	ds	2
   402   000037                     _current_servo_angle:
   403                           	callstack 0
   404   000037                     	ds	2
   405   000039                     _buffer_size:
   406                           	callstack 0
   407   000039                     	ds	2
   408   00003B                     _flags:
   409                           	callstack 0
   410   00003B                     	ds	1
   411                           
   412                           	psect	bssBANK1
   413   000100                     __pbssBANK1:
   414                           	callstack 0
   415   000100                     _buffer:
   416                           	callstack 0
   417   000100                     	ds	100
   418                           
   419                           	psect	cstackBANK0
   420   000080                     __pcstackBANK0:
   421                           	callstack 0
   422   000080                     putch@data:
   423                           	callstack 0
   424   000080                     
   425                           ; 1 bytes @ 0x0
   426   000080                     	ds	1
   427   000081                     ??_MyusartRead:
   428                           
   429                           ; 1 bytes @ 0x1
   430   000081                     	ds	1
   431   000082                     MyusartRead@data:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x2
   435   000082                     	ds	1
   436   000083                     ??_Lo_ISR:
   437                           
   438                           ; 1 bytes @ 0x3
   439   000083                     	ds	5
   440   000088                     keyboard_input@str:
   441                           	callstack 0
   442   000088                     strcpy@dest:
   443                           	callstack 0
   444   000088                     ClearBuffer@i:
   445                           	callstack 0
   446   000088                     
   447                           ; 1 bytes @ 0x8
   448   000088                     	ds	1
   449   000089                     strcpy@src:
   450                           	callstack 0
   451   000089                     ??_keyboard_input:
   452                           
   453                           ; 1 bytes @ 0x9
   454   000089                     	ds	2
   455   00008B                     strcpy@d:
   456                           	callstack 0
   457   00008B                     
   458                           ; 1 bytes @ 0xB
   459   00008B                     	ds	1
   460   00008C                     ?_GetString:
   461                           	callstack 0
   462   00008C                     GetString@str:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0xC
   466   00008C                     	ds	2
   467   00008E                     
   468                           ; 1 bytes @ 0xE
   469   00008E                     	ds	1
   470   00008F                     main@str:
   471                           	callstack 0
   472   00008F                     
   473                           ; 1 bytes @ 0xF
   474   00008F                     	ds	100
   475                           
   476                           	psect	cstackCOMRAM
   477   00003C                     __pcstackCOMRAM:
   478                           	callstack 0
   479   00003C                     ?___awdiv:
   480                           	callstack 0
   481   00003C                     ?___awmod:
   482                           	callstack 0
   483   00003C                     i2putch@data:
   484                           	callstack 0
   485   00003C                     set_LED_separately@a:
   486                           	callstack 0
   487   00003C                     ___awdiv@dividend:
   488                           	callstack 0
   489   00003C                     ___awmod@dividend:
   490                           	callstack 0
   491   00003C                     i2ClearBuffer@i:
   492                           	callstack 0
   493   00003C                     
   494                           ; 1 bytes @ 0x0
   495   00003C                     	ds	1
   496   00003D                     fputc@c:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x1
   500   00003D                     	ds	1
   501   00003E                     set_LED_separately@b:
   502                           	callstack 0
   503   00003E                     ___awdiv@divisor:
   504                           	callstack 0
   505   00003E                     ___awmod@divisor:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x2
   509   00003E                     	ds	1
   510   00003F                     fputc@fp:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x3
   514   00003F                     	ds	1
   515   000040                     ___awdiv@counter:
   516                           	callstack 0
   517   000040                     ___awmod@counter:
   518                           	callstack 0
   519   000040                     set_LED_separately@c:
   520                           	callstack 0
   521   000040                     
   522                           ; 1 bytes @ 0x4
   523   000040                     	ds	1
   524   000041                     ___awdiv@sign:
   525                           	callstack 0
   526   000041                     ___awmod@sign:
   527                           	callstack 0
   528   000041                     ??_fputc:
   529                           
   530                           ; 1 bytes @ 0x5
   531   000041                     	ds	1
   532   000042                     ___awdiv@quotient:
   533                           	callstack 0
   534   000042                     ??_set_LED_separately:
   535                           
   536                           ; 1 bytes @ 0x6
   537   000042                     	ds	4
   538   000046                     vfpfcnvrt@fp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0xA
   542   000046                     	ds	2
   543   000048                     vfpfcnvrt@fmt:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0xC
   547   000048                     	ds	1
   548   000049                     vfpfcnvrt@ap:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0xD
   552   000049                     	ds	1
   553   00004A                     ?_vfprintf:
   554                           	callstack 0
   555   00004A                     vfprintf@fp:
   556                           	callstack 0
   557   00004A                     
   558                           ; 1 bytes @ 0xE
   559   00004A                     	ds	2
   560   00004C                     vfprintf@fmt:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x10
   564   00004C                     	ds	1
   565   00004D                     vfprintf@ap:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x11
   569   00004D                     	ds	1
   570   00004E                     vfprintf@cfmt:
   571                           	callstack 0
   572   00004E                     
   573                           ; 1 bytes @ 0x12
   574   00004E                     	ds	1
   575   00004F                     ?_printf:
   576                           	callstack 0
   577   00004F                     printf@fmt:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x13
   581   00004F                     	ds	1
   582   000050                     printf@ap:
   583                           	callstack 0
   584   000050                     
   585                           ; 1 bytes @ 0x14
   586   000050                     	ds	1
   587   000051                     variable_register_changed@value:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x15
   591   000051                     	ds	2
   592   000053                     ??_H_ISR:
   593                           
   594                           ; 1 bytes @ 0x17
   595   000053                     	ds	12
   596   00005F                     H_ISR@value:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x23
   600   00005F                     	ds	2
   601                           
   602 ;;
   603 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   604 ;;
   605 ;; *************** function _main *****************
   606 ;; Defined at:
   607 ;;		line 432 in file "3b.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  str           100   15[BANK0 ] unsigned char [100]
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   621 ;;      Params:         0       0       0       0       0       0       0
   622 ;;      Locals:         0     100       0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0       0       0
   624 ;;      Totals:         0     100       0       0       0       0       0
   625 ;;Total ram usage:      100 bytes
   626 ;; Hardware stack levels required when called: 12
   627 ;; This function calls:
   628 ;;		_GetString
   629 ;;		_Initialize
   630 ;;		_keyboard_input
   631 ;; This function is called by:
   632 ;;		Startup code after reset
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text0
   637   000EFA                     __ptext0:
   638                           	callstack 0
   639   000EFA                     _main:
   640                           	callstack 19
   641   000EFA  EC47  F006         	call	_Initialize	;wreg free
   642   000EFE                     l2157:
   643   000EFE  0E8F               	movlw	low main@str
   644   000F00  0100               	movlb	0	; () banked
   645   000F02  6F8C               	movwf	GetString@str& (0+255),b
   646   000F04  EC89  F006         	call	_GetString	;wreg free
   647   000F08  0100               	movlb	0	; () banked
   648   000F0A  518C               	movf	?_GetString& (0+255),w,b
   649   000F0C  118D               	iorwf	(?_GetString+1)& (0+255),w,b
   650   000F0E  B4D8               	btfsc	status,2,c
   651   000F10  EF8C  F007         	goto	u1231
   652   000F14  EF8E  F007         	goto	u1230
   653   000F18                     u1231:
   654   000F18  EF92  F007         	goto	l2161
   655   000F1C                     u1230:
   656   000F1C                     
   657                           ; BSR set to: 0
   658   000F1C  0E8F               	movlw	low main@str
   659   000F1E  6F88               	movwf	keyboard_input@str& (0+255),b
   660   000F20  EC3A  F008         	call	_keyboard_input	;wreg free
   661   000F24                     l2161:
   662   000F24  B2C2               	btfsc	194,1,c	;volatile
   663   000F26  EF97  F007         	goto	u1241
   664   000F2A  EF99  F007         	goto	u1240
   665   000F2E                     u1241:
   666   000F2E  EF7F  F007         	goto	l2157
   667   000F32                     u1240:
   668   000F32  82C2               	bsf	194,1,c	;volatile
   669   000F34  EF7F  F007         	goto	l2157
   670   000F38  EF36  F000         	goto	start
   671   000F3C                     __end_of_main:
   672                           	callstack 0
   673                           
   674 ;; *************** function _keyboard_input *****************
   675 ;; Defined at:
   676 ;;		line 417 in file "3b.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  str             1    8[BANK0 ] PTR unsigned char 
   679 ;;		 -> main@str(100), 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   691 ;;      Params:         0       1       0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0
   693 ;;      Temps:          0       1       0       0       0       0       0
   694 ;;      Totals:         0       2       0       0       0       0       0
   695 ;;Total ram usage:        2 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 10
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text1
   706   001074                     __ptext1:
   707                           	callstack 0
   708   001074                     _keyboard_input:
   709                           	callstack 20
   710   001074  0100               	movlb	0	; () banked
   711   001076  5188               	movf	keyboard_input@str& (0+255),w,b
   712   001078  6ED9               	movwf	fsr2l,c
   713   00107A  6ADA               	clrf	fsr2h,c
   714   00107C  50DF               	movf	indf2,w,c
   715   00107E  6F89               	movwf	??_keyboard_input& (0+255),b
   716   001080  0ED0               	movlw	208
   717   001082  2589               	addwf	??_keyboard_input& (0+255),w,b
   718   001084  6E25               	movwf	_x^0,c
   719   001086  6A26               	clrf	(_x+1)^0,c
   720   001088  0EFF               	movlw	255
   721   00108A  2226               	addwfc	(_x+1)^0,f,c
   722   00108C                     
   723                           ; BSR set to: 0
   724   00108C  0012               	return		;funcret
   725   00108E                     __end_of_keyboard_input:
   726                           	callstack 0
   727                           
   728 ;; *************** function _Initialize *****************
   729 ;; Defined at:
   730 ;;		line 126 in file "3b.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   744 ;;      Params:         0       0       0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 10
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text2
   759   000C8E                     __ptext2:
   760                           	callstack 0
   761   000C8E                     _Initialize:
   762                           	callstack 20
   763   000C8E  50D3               	movf	211,w,c	;volatile
   764   000C90  0B8F               	andlw	-113
   765   000C92  0960               	iorlw	96
   766   000C94  6ED3               	movwf	211,c	;volatile
   767   000C96  8092               	bsf	146,0,c	;volatile
   768   000C98  50C1               	movf	193,w,c	;volatile
   769   000C9A  0BF0               	andlw	-16
   770   000C9C  090E               	iorlw	14
   771   000C9E  6EC1               	movwf	193,c	;volatile
   772   000CA0  0EC3               	movlw	-61
   773   000CA2  16C2               	andwf	194,f,c	;volatile
   774   000CA4  98C1               	bcf	193,4,c	;volatile
   775   000CA6  9AC1               	bcf	193,5,c	;volatile
   776   000CA8  0EF8               	movlw	-8
   777   000CAA  16C0               	andwf	192,f,c	;volatile
   778   000CAC  50C0               	movf	192,w,c	;volatile
   779   000CAE  0BC7               	andlw	-57
   780   000CB0  0908               	iorlw	8
   781   000CB2  6EC0               	movwf	192,c	;volatile
   782   000CB4  80C2               	bsf	194,0,c	;volatile
   783   000CB6  8EC0               	bsf	192,7,c	;volatile
   784   000CB8  84CA               	bsf	202,2,c	;volatile
   785   000CBA  0E03               	movlw	3
   786   000CBC  12CA               	iorwf	202,f,c	;volatile
   787   000CBE  50BD               	movf	189,w,c	;volatile
   788   000CC0  0BF0               	andlw	-16
   789   000CC2  090C               	iorlw	12
   790   000CC4  6EBD               	movwf	189,c	;volatile
   791   000CC6  0E9B               	movlw	155
   792   000CC8  6ECB               	movwf	203,c	;volatile
   793   000CCA  9494               	bcf	148,2,c	;volatile
   794   000CCC  0EF1               	movlw	241
   795   000CCE  1692               	andwf	146,f,c	;volatile
   796   000CD0  0E01               	movlw	1
   797   000CD2  6E93               	movwf	147,c	;volatile
   798   000CD4  6A94               	clrf	148,c	;volatile
   799   000CD6  0EF1               	movlw	241
   800   000CD8  1689               	andwf	137,f,c	;volatile
   801   000CDA  6A8B               	clrf	139,c	;volatile
   802   000CDC  92F2               	bcf	242,1,c	;volatile
   803   000CDE  88F2               	bsf	242,4,c	;volatile
   804   000CE0  8C9D               	bsf	157,6,c	;volatile
   805   000CE2  9C9E               	bcf	158,6,c	;volatile
   806   000CE4  8CF2               	bsf	242,6,c	;volatile
   807   000CE6  8EF2               	bsf	242,7,c	;volatile
   808   000CE8  8ED0               	bsf	208,7,c	;volatile
   809   000CEA  8EF2               	bsf	242,7,c	;volatile
   810   000CEC  8CF2               	bsf	242,6,c	;volatile
   811   000CEE  8C94               	bsf	148,6,c	;volatile
   812   000CF0  8E94               	bsf	148,7,c	;volatile
   813   000CF2  98AC               	bcf	172,4,c	;volatile
   814   000CF4  96B8               	bcf	184,3,c	;volatile
   815   000CF6  94AC               	bcf	172,2,c	;volatile
   816   000CF8  0E33               	movlw	51
   817   000CFA  6EAF               	movwf	175,c	;volatile
   818   000CFC  8EAB               	bsf	171,7,c	;volatile
   819   000CFE  989E               	bcf	158,4,c	;volatile
   820   000D00  9A9E               	bcf	158,5,c	;volatile
   821   000D02  8AAC               	bsf	172,5,c	;volatile
   822   000D04  88AB               	bsf	171,4,c	;volatile
   823   000D06  989D               	bcf	157,4,c	;volatile
   824   000D08  989F               	bcf	159,4,c	;volatile
   825   000D0A  8A9D               	bsf	157,5,c	;volatile
   826   000D0C  9A9F               	bcf	159,5,c	;volatile
   827   000D0E  82C2               	bsf	194,1,c	;volatile
   828   000D10  0012               	return		;funcret
   829   000D12                     __end_of_Initialize:
   830                           	callstack 0
   831                           
   832 ;; *************** function _GetString *****************
   833 ;; Defined at:
   834 ;;		line 97 in file "3b.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  str             1   12[BANK0 ] PTR unsigned char 
   837 ;;		 -> main@str(100), 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  2   12[BANK0 ] int 
   842 ;; Registers used:
   843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   849 ;;      Params:         0       2       0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0       0       0
   851 ;;      Temps:          0       1       0       0       0       0       0
   852 ;;      Totals:         0       3       0       0       0       0       0
   853 ;;Total ram usage:        3 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 11
   856 ;; This function calls:
   857 ;;		_ClearBuffer
   858 ;;		_strcpy
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text3
   865   000D12                     __ptext3:
   866                           	callstack 0
   867   000D12                     _GetString:
   868                           	callstack 19
   869   000D12  0EFF               	movlw	low (_buffer+65535)
   870   000D14  2439               	addwf	_buffer_size^0,w,c
   871   000D16  6ED9               	movwf	fsr2l,c
   872   000D18  0E00               	movlw	high (_buffer+65535)
   873   000D1A  203A               	addwfc	(_buffer_size+1)^0,w,c
   874   000D1C  6EDA               	movwf	fsr2h,c
   875   000D1E  0E0D               	movlw	13
   876   000D20  18DE               	xorwf	postinc2,w,c
   877   000D22  A4D8               	btfss	status,2,c
   878   000D24  EF96  F006         	goto	u1201
   879   000D28  EF98  F006         	goto	u1200
   880   000D2C                     u1201:
   881   000D2C  EFB4  F006         	goto	l2063
   882   000D30                     u1200:
   883   000D30  0639               	decf	_buffer_size^0,f,c
   884   000D32  A0D8               	btfss	status,0,c
   885   000D34  063A               	decf	(_buffer_size+1)^0,f,c
   886   000D36  0E00               	movlw	low _buffer
   887   000D38  2439               	addwf	_buffer_size^0,w,c
   888   000D3A  6ED9               	movwf	fsr2l,c
   889   000D3C  0E01               	movlw	high _buffer
   890   000D3E  203A               	addwfc	(_buffer_size+1)^0,w,c
   891   000D40  6EDA               	movwf	fsr2h,c
   892   000D42  6ADF               	clrf	indf2,c
   893   000D44  C08C  F088         	movff	GetString@str,strcpy@dest
   894   000D48  0E00               	movlw	low _buffer
   895   000D4A  0100               	movlb	0	; () banked
   896   000D4C  6F89               	movwf	strcpy@src& (0+255),b
   897   000D4E  0E01               	movlw	high _buffer
   898   000D50  6F8A               	movwf	(strcpy@src+1)& (0+255),b
   899   000D52  ECFE  F007         	call	_strcpy	;wreg free
   900   000D56  EC9E  F007         	call	_ClearBuffer	;wreg free
   901   000D5A  0E00               	movlw	0
   902   000D5C  0100               	movlb	0	; () banked
   903   000D5E  6F8D               	movwf	(?_GetString+1)& (0+255),b
   904   000D60  0E01               	movlw	1
   905   000D62  6F8C               	movwf	?_GetString& (0+255),b
   906   000D64  EFBD  F006         	goto	l105
   907   000D68                     l2063:
   908   000D68  0100               	movlb	0	; () banked
   909   000D6A  518C               	movf	GetString@str& (0+255),w,b
   910   000D6C  6ED9               	movwf	fsr2l,c
   911   000D6E  6ADA               	clrf	fsr2h,c
   912   000D70  6ADF               	clrf	indf2,c
   913   000D72                     
   914                           ; BSR set to: 0
   915   000D72  0E00               	movlw	0
   916   000D74  6F8D               	movwf	(?_GetString+1)& (0+255),b
   917   000D76  0E00               	movlw	0
   918   000D78  6F8C               	movwf	?_GetString& (0+255),b
   919   000D7A                     l105:
   920                           
   921                           ; BSR set to: 0
   922   000D7A  0012               	return		;funcret
   923   000D7C                     __end_of_GetString:
   924                           	callstack 0
   925                           
   926 ;; *************** function _strcpy *****************
   927 ;; Defined at:
   928 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  dest            1    8[BANK0 ] PTR unsigned char 
   931 ;;		 -> main@str(100), 
   932 ;;  src             2    9[BANK0 ] PTR const unsigned char 
   933 ;;		 -> buffer(100), 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  d               1   11[BANK0 ] PTR unsigned char 
   936 ;;		 -> main@str(100), 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    8[BANK0 ] PTR unsigned char 
   939 ;; Registers used:
   940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   946 ;;      Params:         0       3       0       0       0       0       0
   947 ;;      Locals:         0       1       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0
   949 ;;      Totals:         0       4       0       0       0       0       0
   950 ;;Total ram usage:        4 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; Hardware stack levels required when called: 10
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_GetString
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text4
   961   000FFC                     __ptext4:
   962                           	callstack 0
   963   000FFC                     _strcpy:
   964                           	callstack 19
   965   000FFC  C088  F08B         	movff	strcpy@dest,strcpy@d
   966   001000                     l2033:
   967   001000  C089  FFD9         	movff	strcpy@src,fsr2l
   968   001004  C08A  FFDA         	movff	strcpy@src+1,fsr2h
   969   001008  0100               	movlb	0	; () banked
   970   00100A  4B89               	infsnz	strcpy@src& (0+255),f,b
   971   00100C  2B8A               	incf	(strcpy@src+1)& (0+255),f,b
   972   00100E  2B8B               	incf	strcpy@d& (0+255),f,b
   973   001010  058B               	decf	strcpy@d& (0+255),w,b
   974   001012  6EE1               	movwf	fsr1l,c
   975   001014  6AE2               	clrf	fsr1h,c
   976   001016  CFDF FFE7          	movff	indf2,indf1
   977   00101A  50E7               	movf	indf1,w,c
   978   00101C  A4D8               	btfss	status,2,c
   979   00101E  EF13  F008         	goto	u1171
   980   001022  EF15  F008         	goto	u1170
   981   001026                     u1171:
   982   001026  EF00  F008         	goto	l2033
   983   00102A                     u1170:
   984   00102A                     
   985                           ; BSR set to: 0
   986   00102A  0012               	return		;funcret
   987   00102C                     __end_of_strcpy:
   988                           	callstack 0
   989                           
   990 ;; *************** function _ClearBuffer *****************
   991 ;; Defined at:
   992 ;;		line 84 in file "3b.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  i               2    8[BANK0 ] int 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1006 ;;      Params:         0       0       0       0       0       0       0
  1007 ;;      Locals:         0       2       0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0
  1009 ;;      Totals:         0       2       0       0       0       0       0
  1010 ;;Total ram usage:        2 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 10
  1013 ;; This function calls:
  1014 ;;		Nothing
  1015 ;; This function is called by:
  1016 ;;		_GetString
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text5
  1021   000F3C                     __ptext5:
  1022                           	callstack 0
  1023   000F3C                     _ClearBuffer:
  1024                           	callstack 19
  1025   000F3C  0E00               	movlw	0
  1026   000F3E  0100               	movlb	0	; () banked
  1027   000F40  6F89               	movwf	(ClearBuffer@i+1)& (0+255),b
  1028   000F42  0E00               	movlw	0
  1029   000F44  6F88               	movwf	ClearBuffer@i& (0+255),b
  1030   000F46                     l2023:
  1031                           
  1032                           ; BSR set to: 0
  1033   000F46  0E00               	movlw	low _buffer
  1034   000F48  2588               	addwf	ClearBuffer@i& (0+255),w,b
  1035   000F4A  6ED9               	movwf	fsr2l,c
  1036   000F4C  0E01               	movlw	high _buffer
  1037   000F4E  2189               	addwfc	(ClearBuffer@i+1)& (0+255),w,b
  1038   000F50  6EDA               	movwf	fsr2h,c
  1039   000F52  6ADF               	clrf	indf2,c
  1040   000F54                     
  1041                           ; BSR set to: 0
  1042   000F54  4B88               	infsnz	ClearBuffer@i& (0+255),f,b
  1043   000F56  2B89               	incf	(ClearBuffer@i+1)& (0+255),f,b
  1044   000F58                     
  1045                           ; BSR set to: 0
  1046   000F58  BF89               	btfsc	(ClearBuffer@i+1)& (0+255),7,b
  1047   000F5A  EFB8  F007         	goto	u1161
  1048   000F5E  5189               	movf	(ClearBuffer@i+1)& (0+255),w,b
  1049   000F60  E109               	bnz	u1160
  1050   000F62  0E64               	movlw	100
  1051   000F64  5D88               	subwf	ClearBuffer@i& (0+255),w,b
  1052   000F66  A0D8               	btfss	status,0,c
  1053   000F68  EFB8  F007         	goto	u1161
  1054   000F6C  EFBA  F007         	goto	u1160
  1055   000F70                     u1161:
  1056   000F70  EFA3  F007         	goto	l2023
  1057   000F74                     u1160:
  1058   000F74                     
  1059                           ; BSR set to: 0
  1060   000F74  0E00               	movlw	0
  1061   000F76  6E3A               	movwf	(_buffer_size+1)^0,c
  1062   000F78  0E00               	movlw	0
  1063   000F7A  6E39               	movwf	_buffer_size^0,c
  1064   000F7C                     
  1065                           ; BSR set to: 0
  1066   000F7C  0012               	return		;funcret
  1067   000F7E                     __end_of_ClearBuffer:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function _Lo_ISR *****************
  1071 ;; Defined at:
  1072 ;;		line 109 in file "3b.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1086 ;;      Params:         0       0       0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0       0       0
  1088 ;;      Temps:          0       5       0       0       0       0       0
  1089 ;;      Totals:         0       5       0       0       0       0       0
  1090 ;;Total ram usage:        5 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 9
  1093 ;; This function calls:
  1094 ;;		_MyusartRead
  1095 ;; This function is called by:
  1096 ;;		Interrupt level 1
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	intcodelo
  1101   000018                     __pintcodelo:
  1102                           	callstack 0
  1103   000018                     _Lo_ISR:
  1104                           	callstack 19
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;incstack = 0
  1108   000018  8061               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1109   00001A  CFD8 F083          	movff	status,??_Lo_ISR
  1110   00001E  CFE8 F084          	movff	wreg,??_Lo_ISR+1
  1111   000022  CFE0 F085          	movff	bsr,??_Lo_ISR+2
  1112   000026  CFD9 F086          	movff	fsr2l,??_Lo_ISR+3
  1113   00002A  CFDA F087          	movff	fsr2h,??_Lo_ISR+4
  1114   00002E  AA9E               	btfss	3998,5,c	;volatile
  1115   000030  EF1C  F000         	goto	i1u121_21
  1116   000034  EF1E  F000         	goto	i1u121_20
  1117   000038                     i1u121_21:
  1118   000038  EF2A  F000         	goto	i1l113
  1119   00003C                     i1u121_20:
  1120   00003C  A2AB               	btfss	171,1,c	;volatile
  1121   00003E  EF23  F000         	goto	i1u122_21
  1122   000042  EF25  F000         	goto	i1u122_20
  1123   000046                     i1u122_21:
  1124   000046  EF28  F000         	goto	i1l2151
  1125   00004A                     i1u122_20:
  1126   00004A  98AB               	bcf	4011,4,c	;volatile
  1127   00004C  0000               	nop	
  1128   00004E  88AB               	bsf	4011,4,c	;volatile
  1129   000050                     i1l2151:
  1130   000050  EC55  F007         	call	_MyusartRead	;wreg free
  1131   000054                     i1l113:
  1132   000054  C087  FFDA         	movff	??_Lo_ISR+4,fsr2h
  1133   000058  C086  FFD9         	movff	??_Lo_ISR+3,fsr2l
  1134   00005C  C085  FFE0         	movff	??_Lo_ISR+2,bsr
  1135   000060  C084  FFE8         	movff	??_Lo_ISR+1,wreg
  1136   000064  C083  FFD8         	movff	??_Lo_ISR,status
  1137   000068  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1138   00006A  0010               	retfie	
  1139   00006C                     __end_of_Lo_ISR:
  1140                           	callstack 0
  1141                           
  1142 ;; *************** function _MyusartRead *****************
  1143 ;; Defined at:
  1144 ;;		line 90 in file "3b.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  data            1    2[BANK0 ] unsigned char 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1158 ;;      Params:         0       0       0       0       0       0       0
  1159 ;;      Locals:         0       1       0       0       0       0       0
  1160 ;;      Temps:          0       1       0       0       0       0       0
  1161 ;;      Totals:         0       2       0       0       0       0       0
  1162 ;;Total ram usage:        2 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 8
  1165 ;; This function calls:
  1166 ;;		_putch
  1167 ;; This function is called by:
  1168 ;;		_Lo_ISR
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text7
  1173   000EAA                     __ptext7:
  1174                           	callstack 0
  1175   000EAA                     _MyusartRead:
  1176                           	callstack 19
  1177   000EAA  CFAE F082          	movff	4014,MyusartRead@data	;volatile
  1178   000EAE  C082  F081         	movff	MyusartRead@data,??_MyusartRead
  1179   000EB2  0EE0               	movlw	224
  1180   000EB4  0100               	movlb	0	; () banked
  1181   000EB6  2781               	addwf	??_MyusartRead& (0+255),f,b
  1182   000EB8  0E5E               	movlw	94
  1183   000EBA  6581               	cpfsgt	??_MyusartRead& (0+255),b
  1184   000EBC  EF62  F007         	goto	i1u118_21
  1185   000EC0  EF64  F007         	goto	i1u118_20
  1186   000EC4                     i1u118_21:
  1187   000EC4  EF6F  F007         	goto	i1l2043
  1188   000EC8                     i1u118_20:
  1189   000EC8                     
  1190                           ; BSR set to: 0
  1191   000EC8  0E0D               	movlw	13
  1192   000ECA  1982               	xorwf	MyusartRead@data& (0+255),w,b
  1193   000ECC  B4D8               	btfsc	status,2,c
  1194   000ECE  EF6B  F007         	goto	i1u119_21
  1195   000ED2  EF6D  F007         	goto	i1u119_20
  1196   000ED6                     i1u119_21:
  1197   000ED6  EF6F  F007         	goto	i1l2043
  1198   000EDA                     i1u119_20:
  1199   000EDA  EF7C  F007         	goto	i1l101
  1200   000EDE                     i1l2043:
  1201                           
  1202                           ; BSR set to: 0
  1203   000EDE  0E00               	movlw	low _buffer
  1204   000EE0  2439               	addwf	_buffer_size^0,w,c
  1205   000EE2  6ED9               	movwf	fsr2l,c
  1206   000EE4  0E01               	movlw	high _buffer
  1207   000EE6  203A               	addwfc	(_buffer_size+1)^0,w,c
  1208   000EE8  6EDA               	movwf	fsr2h,c
  1209   000EEA  C082  FFDF         	movff	MyusartRead@data,indf2
  1210   000EEE                     
  1211                           ; BSR set to: 0
  1212   000EEE  4A39               	infsnz	_buffer_size^0,f,c
  1213   000EF0  2A3A               	incf	(_buffer_size+1)^0,f,c
  1214   000EF2                     
  1215                           ; BSR set to: 0
  1216   000EF2  5182               	movf	MyusartRead@data& (0+255),w,b
  1217   000EF4  ECBE  F006         	call	_putch
  1218   000EF8                     i1l101:
  1219   000EF8  0012               	return		;funcret
  1220   000EFA                     __end_of_MyusartRead:
  1221                           	callstack 0
  1222                           
  1223 ;; *************** function _putch *****************
  1224 ;; Defined at:
  1225 ;;		line 72 in file "3b.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  data            1    wreg     unsigned char 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  data            1    0[BANK0 ] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1239 ;;      Params:         0       0       0       0       0       0       0
  1240 ;;      Locals:         0       1       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0
  1242 ;;      Totals:         0       1       0       0       0       0       0
  1243 ;;Total ram usage:        1 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; Hardware stack levels required when called: 7
  1246 ;; This function calls:
  1247 ;;		Nothing
  1248 ;; This function is called by:
  1249 ;;		_MyusartRead
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text8
  1254   000D7C                     __ptext8:
  1255                           	callstack 0
  1256   000D7C                     _putch:
  1257                           	callstack 19
  1258                           
  1259                           ;incstack = 0
  1260                           ;putch@data stored from wreg
  1261   000D7C  0100               	movlb	0	; () banked
  1262   000D7E  6F80               	movwf	putch@data& (0+255),b
  1263   000D80  0E0A               	movlw	10
  1264   000D82  0100               	movlb	0	; () banked
  1265   000D84  1980               	xorwf	putch@data& (0+255),w,b
  1266   000D86  B4D8               	btfsc	status,2,c
  1267   000D88  EFC8  F006         	goto	i1u111_21
  1268   000D8C  EFCA  F006         	goto	i1u111_20
  1269   000D90                     i1u111_21:
  1270   000D90  EFD3  F006         	goto	i1l82
  1271   000D94                     i1u111_20:
  1272   000D94                     
  1273                           ; BSR set to: 0
  1274   000D94  0E0D               	movlw	13
  1275   000D96  1980               	xorwf	putch@data& (0+255),w,b
  1276   000D98  A4D8               	btfss	status,2,c
  1277   000D9A  EFD1  F006         	goto	i1u112_21
  1278   000D9E  EFD3  F006         	goto	i1u112_20
  1279   000DA2                     i1u112_21:
  1280   000DA2  EFE7  F006         	goto	i1l89
  1281   000DA6                     i1u112_20:
  1282   000DA6                     i1l82:
  1283   000DA6  A2AC               	btfss	172,1,c	;volatile
  1284   000DA8  EFD8  F006         	goto	i1u113_21
  1285   000DAC  EFDA  F006         	goto	i1u113_20
  1286   000DB0                     i1u113_21:
  1287   000DB0  EFD3  F006         	goto	i1l82
  1288   000DB4                     i1u113_20:
  1289   000DB4  0E0D               	movlw	13
  1290   000DB6  6EAD               	movwf	173,c	;volatile
  1291   000DB8                     i1l85:
  1292   000DB8  A2AC               	btfss	172,1,c	;volatile
  1293   000DBA  EFE1  F006         	goto	i1u114_21
  1294   000DBE  EFE3  F006         	goto	i1u114_20
  1295   000DC2                     i1u114_21:
  1296   000DC2  EFDC  F006         	goto	i1l85
  1297   000DC6                     i1u114_20:
  1298   000DC6  0E0A               	movlw	10
  1299   000DC8  6EAD               	movwf	173,c	;volatile
  1300   000DCA  EFF0  F006         	goto	i1l92
  1301   000DCE                     i1l89:
  1302   000DCE  A2AC               	btfss	172,1,c	;volatile
  1303   000DD0  EFEC  F006         	goto	i1u115_21
  1304   000DD4  EFEE  F006         	goto	i1u115_20
  1305   000DD8                     i1u115_21:
  1306   000DD8  EFE7  F006         	goto	i1l89
  1307   000DDC                     i1u115_20:
  1308   000DDC  C080  FFAD         	movff	putch@data,4013	;volatile
  1309   000DE0                     i1l92:
  1310   000DE0  0012               	return		;funcret
  1311   000DE2                     __end_of_putch:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function _H_ISR *****************
  1315 ;; Defined at:
  1316 ;;		line 264 in file "3b.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  value           2   35[COMRAM] int 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1330 ;;      Params:         0       0       0       0       0       0       0
  1331 ;;      Locals:         2       0       0       0       0       0       0
  1332 ;;      Temps:         12       0       0       0       0       0       0
  1333 ;;      Totals:        14       0       0       0       0       0       0
  1334 ;;Total ram usage:       14 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; Hardware stack levels required when called: 6
  1337 ;; This function calls:
  1338 ;;		_button_pressed
  1339 ;;		_variable_register_changed
  1340 ;; This function is called by:
  1341 ;;		Interrupt level 2
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	intcode
  1346   000008                     __pintcode:
  1347                           	callstack 0
  1348   000008                     _H_ISR:
  1349                           	callstack 19
  1350                           
  1351                           ;incstack = 0
  1352   000008  8261               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1353   00000A  ED94  F005         	call	int_func,f	;refresh shadow registers
  1354                           
  1355                           	psect	intcode_body
  1356   000B28                     __pintcode_body:
  1357                           	callstack 19
  1358   000B28                     int_func:
  1359                           	callstack 19
  1360   000B28  0006               	pop		; remove dummy address from shadow register refresh
  1361   000B2A  CFE1 F055          	movff	fsr1l,??_H_ISR+2
  1362   000B2E  CFE2 F056          	movff	fsr1h,??_H_ISR+3
  1363   000B32  CFD9 F057          	movff	fsr2l,??_H_ISR+4
  1364   000B36  CFDA F058          	movff	fsr2h,??_H_ISR+5
  1365   000B3A  CFF3 F059          	movff	prodl,??_H_ISR+6
  1366   000B3E  CFF4 F05A          	movff	prodh,??_H_ISR+7
  1367   000B42  CFF6 F05B          	movff	tblptrl,??_H_ISR+8
  1368   000B46  CFF7 F05C          	movff	tblptrh,??_H_ISR+9
  1369   000B4A  CFF8 F05D          	movff	tblptru,??_H_ISR+10
  1370   000B4E  CFF5 F05E          	movff	tablat,??_H_ISR+11
  1371   000B52  AC9E               	btfss	158,6,c	;volatile
  1372   000B54  EFAE  F005         	goto	i2u107_41
  1373   000B58  EFB0  F005         	goto	i2u107_40
  1374   000B5C                     i2u107_41:
  1375   000B5C  EFC8  F005         	goto	i2l1991
  1376   000B60                     i2u107_40:
  1377   000B60  50C4               	movf	196,w,c	;volatile
  1378   000B62  6E54               	movwf	(??_H_ISR+1)^0,c
  1379   000B64  6A53               	clrf	??_H_ISR^0,c
  1380   000B66  50C3               	movf	195,w,c	;volatile
  1381   000B68  2453               	addwf	??_H_ISR^0,w,c
  1382   000B6A  6E5F               	movwf	H_ISR@value^0,c
  1383   000B6C  0E00               	movlw	0
  1384   000B6E  2054               	addwfc	(??_H_ISR+1)^0,w,c
  1385   000B70  6E60               	movwf	(H_ISR@value+1)^0,c
  1386   000B72  C05F  F051         	movff	H_ISR@value,variable_register_changed@value
  1387   000B76  C060  F052         	movff	H_ISR@value+1,variable_register_changed@value+1
  1388   000B7A  EC10  F003         	call	_variable_register_changed	;wreg free
  1389   000B7E  9C9E               	bcf	158,6,c	;volatile
  1390   000B80  0E07               	movlw	7
  1391   000B82  6E53               	movwf	??_H_ISR^0,c
  1392   000B84  0E7D               	movlw	125
  1393   000B86                     i2u125_47:
  1394   000B86  2EE8               	decfsz	wreg,f,c
  1395   000B88  D7FE               	bra	i2u125_47
  1396   000B8A  2E53               	decfsz	??_H_ISR^0,f,c
  1397   000B8C  D7FC               	bra	i2u125_47
  1398   000B8E  0000               	nop	
  1399   000B90                     i2l1991:
  1400   000B90  A2F2               	btfss	242,1,c	;volatile
  1401   000B92  EFCD  F005         	goto	i2u108_41
  1402   000B96  EFCF  F005         	goto	i2u108_40
  1403   000B9A                     i2u108_41:
  1404   000B9A  EFDA  F005         	goto	i2l154
  1405   000B9E                     i2u108_40:
  1406   000B9E  EC54  F008         	call	_button_pressed	;wreg free
  1407   000BA2  0E41               	movlw	65
  1408   000BA4  6E53               	movwf	??_H_ISR^0,c
  1409   000BA6  0EEE               	movlw	238
  1410   000BA8                     i2u126_47:
  1411   000BA8  2EE8               	decfsz	wreg,f,c
  1412   000BAA  D7FE               	bra	i2u126_47
  1413   000BAC  2E53               	decfsz	??_H_ISR^0,f,c
  1414   000BAE  D7FC               	bra	i2u126_47
  1415   000BB0  D000               	nop2	
  1416   000BB2  92F2               	bcf	242,1,c	;volatile
  1417   000BB4                     i2l154:
  1418   000BB4  C05E  FFF5         	movff	??_H_ISR+11,tablat
  1419   000BB8  C05D  FFF8         	movff	??_H_ISR+10,tblptru
  1420   000BBC  C05C  FFF7         	movff	??_H_ISR+9,tblptrh
  1421   000BC0  C05B  FFF6         	movff	??_H_ISR+8,tblptrl
  1422   000BC4  C05A  FFF4         	movff	??_H_ISR+7,prodh
  1423   000BC8  C059  FFF3         	movff	??_H_ISR+6,prodl
  1424   000BCC  C058  FFDA         	movff	??_H_ISR+5,fsr2h
  1425   000BD0  C057  FFD9         	movff	??_H_ISR+4,fsr2l
  1426   000BD4  C056  FFE2         	movff	??_H_ISR+3,fsr1h
  1427   000BD8  C055  FFE1         	movff	??_H_ISR+2,fsr1l
  1428   000BDC  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1429   000BDE  0011               	retfie		f
  1430   000BE0                     __end_of_H_ISR:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _variable_register_changed *****************
  1434 ;; Defined at:
  1435 ;;		line 298 in file "3b.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  value           2   21[COMRAM] int 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1449 ;;      Params:         2       0       0       0       0       0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0       0       0
  1452 ;;      Totals:         2       0       0       0       0       0       0
  1453 ;;Total ram usage:        2 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; Hardware stack levels required when called: 5
  1456 ;; This function calls:
  1457 ;;		___awdiv
  1458 ;;		___awmod
  1459 ;;		_printf
  1460 ;;		_set_LED_separately
  1461 ;;		i2_ClearBuffer
  1462 ;; This function is called by:
  1463 ;;		_H_ISR
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text10
  1468   000620                     __ptext10:
  1469                           	callstack 0
  1470   000620                     _variable_register_changed:
  1471                           	callstack 19
  1472   000620  C051  F03C         	movff	variable_register_changed@value,___awdiv@dividend
  1473   000624  C052  F03D         	movff	variable_register_changed@value+1,___awdiv@dividend+1
  1474   000628  0E00               	movlw	0
  1475   00062A  6E3F               	movwf	(___awdiv@divisor+1)^0,c
  1476   00062C  0E95               	movlw	149
  1477   00062E  6E3E               	movwf	___awdiv@divisor^0,c
  1478   000630  EC33  F005         	call	___awdiv	;wreg free
  1479   000634  C03C  F051         	movff	?___awdiv,variable_register_changed@value
  1480   000638  C03D  F052         	movff	?___awdiv+1,variable_register_changed@value+1
  1481   00063C  5025               	movf	_x^0,w,c
  1482   00063E  2651               	addwf	variable_register_changed@value^0,f,c
  1483   000640  5026               	movf	(_x+1)^0,w,c
  1484   000642  2252               	addwfc	(variable_register_changed@value+1)^0,f,c
  1485   000644  C051  F03C         	movff	variable_register_changed@value,___awmod@dividend
  1486   000648  C052  F03D         	movff	variable_register_changed@value+1,___awmod@dividend+1
  1487   00064C  0E00               	movlw	0
  1488   00064E  6E3F               	movwf	(___awmod@divisor+1)^0,c
  1489   000650  0E07               	movlw	7
  1490   000652  6E3E               	movwf	___awmod@divisor^0,c
  1491   000654  ECF0  F005         	call	___awmod	;wreg free
  1492   000658  C03C  F051         	movff	?___awmod,variable_register_changed@value
  1493   00065C  C03D  F052         	movff	?___awmod+1,variable_register_changed@value+1
  1494   000660  5051               	movf	variable_register_changed@value^0,w,c
  1495   000662  1052               	iorwf	(variable_register_changed@value+1)^0,w,c
  1496   000664  A4D8               	btfss	status,2,c
  1497   000666  EF37  F003         	goto	i2u91_41
  1498   00066A  EF39  F003         	goto	i2u91_40
  1499   00066E                     i2u91_41:
  1500   00066E  EF78  F003         	goto	i2l1813
  1501   000672                     i2u91_40:
  1502   000672  0E00               	movlw	0
  1503   000674  6E3D               	movwf	(set_LED_separately@a+1)^0,c
  1504   000676  0E01               	movlw	1
  1505   000678  6E3C               	movwf	set_LED_separately@a^0,c
  1506   00067A  0E00               	movlw	0
  1507   00067C  6E3F               	movwf	(set_LED_separately@b+1)^0,c
  1508   00067E  0E01               	movlw	1
  1509   000680  6E3E               	movwf	set_LED_separately@b^0,c
  1510   000682  0E00               	movlw	0
  1511   000684  6E41               	movwf	(set_LED_separately@c+1)^0,c
  1512   000686  0E01               	movlw	1
  1513   000688  6E40               	movwf	set_LED_separately@c^0,c
  1514   00068A  EC2B  F008         	call	_set_LED_separately	;wreg free
  1515   00068E  5035               	movf	_a0^0,w,c
  1516   000690  1036               	iorwf	(_a0+1)^0,w,c
  1517   000692  A4D8               	btfss	status,2,c
  1518   000694  EF4E  F003         	goto	i2u92_41
  1519   000698  EF50  F003         	goto	i2u92_40
  1520   00069C                     i2u92_41:
  1521   00069C  EFCD  F004         	goto	i2l198
  1522   0006A0                     i2u92_40:
  1523   0006A0  0E1A               	movlw	low STR_1
  1524   0006A2  6E4F               	movwf	printf@fmt^0,c
  1525   0006A4  EC47  F008         	call	_printf	;wreg free
  1526   0006A8  0E00               	movlw	0
  1527   0006AA  6E36               	movwf	(_a0+1)^0,c
  1528   0006AC  0E01               	movlw	1
  1529   0006AE  6E35               	movwf	_a0^0,c
  1530   0006B0  0E00               	movlw	0
  1531   0006B2  6E34               	movwf	(_a1+1)^0,c
  1532   0006B4  0E00               	movlw	0
  1533   0006B6  6E33               	movwf	_a1^0,c
  1534   0006B8                     i2l1799:
  1535   0006B8  0E00               	movlw	0
  1536   0006BA  6E32               	movwf	(_a2+1)^0,c
  1537   0006BC  0E00               	movlw	0
  1538   0006BE  6E31               	movwf	_a2^0,c
  1539   0006C0                     i2l1801:
  1540   0006C0  0E00               	movlw	0
  1541   0006C2  6E30               	movwf	(_a3+1)^0,c
  1542   0006C4  0E00               	movlw	0
  1543   0006C6  6E2F               	movwf	_a3^0,c
  1544   0006C8                     i2l1803:
  1545   0006C8  0E00               	movlw	0
  1546   0006CA  6E2E               	movwf	(_a4+1)^0,c
  1547   0006CC  0E00               	movlw	0
  1548   0006CE  6E2D               	movwf	_a4^0,c
  1549   0006D0                     i2l1805:
  1550   0006D0  0E00               	movlw	0
  1551   0006D2  6E2C               	movwf	(_a5+1)^0,c
  1552   0006D4  0E00               	movlw	0
  1553   0006D6  6E2B               	movwf	_a5^0,c
  1554   0006D8                     i2l1807:
  1555   0006D8  0E00               	movlw	0
  1556   0006DA  6E2A               	movwf	(_a6+1)^0,c
  1557   0006DC  0E00               	movlw	0
  1558   0006DE  6E29               	movwf	_a6^0,c
  1559   0006E0                     i2l1809:
  1560   0006E0  0E00               	movlw	0
  1561   0006E2  6E28               	movwf	(_a7+1)^0,c
  1562   0006E4  0E00               	movlw	0
  1563   0006E6  6E27               	movwf	_a7^0,c
  1564   0006E8  ECBF  F007         	call	i2_ClearBuffer	;wreg free
  1565   0006EC  EFCD  F004         	goto	i2l198
  1566   0006F0                     i2l1813:
  1567   0006F0  0451               	decf	variable_register_changed@value^0,w,c
  1568   0006F2  1052               	iorwf	(variable_register_changed@value+1)^0,w,c
  1569   0006F4  A4D8               	btfss	status,2,c
  1570   0006F6  EF7F  F003         	goto	i2u93_41
  1571   0006FA  EF81  F003         	goto	i2u93_40
  1572   0006FE                     i2u93_41:
  1573   0006FE  EFA6  F003         	goto	i2l1839
  1574   000702                     i2u93_40:
  1575   000702  0E00               	movlw	0
  1576   000704  6E3D               	movwf	(set_LED_separately@a+1)^0,c
  1577   000706  0E00               	movlw	0
  1578   000708  6E3C               	movwf	set_LED_separately@a^0,c
  1579   00070A  0E00               	movlw	0
  1580   00070C  6E3F               	movwf	(set_LED_separately@b+1)^0,c
  1581   00070E  0E01               	movlw	1
  1582   000710  6E3E               	movwf	set_LED_separately@b^0,c
  1583   000712  0E00               	movlw	0
  1584   000714  6E41               	movwf	(set_LED_separately@c+1)^0,c
  1585   000716  0E01               	movlw	1
  1586   000718  6E40               	movwf	set_LED_separately@c^0,c
  1587   00071A  EC2B  F008         	call	_set_LED_separately	;wreg free
  1588   00071E  5033               	movf	_a1^0,w,c
  1589   000720  1034               	iorwf	(_a1+1)^0,w,c
  1590   000722  A4D8               	btfss	status,2,c
  1591   000724  EF96  F003         	goto	i2u94_41
  1592   000728  EF98  F003         	goto	i2u94_40
  1593   00072C                     i2u94_41:
  1594   00072C  EFCD  F004         	goto	i2l198
  1595   000730                     i2u94_40:
  1596   000730  0E15               	movlw	low STR_2
  1597   000732  6E4F               	movwf	printf@fmt^0,c
  1598   000734  EC47  F008         	call	_printf	;wreg free
  1599   000738  0E00               	movlw	0
  1600   00073A  6E36               	movwf	(_a0+1)^0,c
  1601   00073C  0E00               	movlw	0
  1602   00073E  6E35               	movwf	_a0^0,c
  1603   000740  0E00               	movlw	0
  1604   000742  6E34               	movwf	(_a1+1)^0,c
  1605   000744  0E01               	movlw	1
  1606   000746  6E33               	movwf	_a1^0,c
  1607   000748  EF5C  F003         	goto	i2l1799
  1608   00074C                     i2l1839:
  1609   00074C  0E02               	movlw	2
  1610   00074E  1851               	xorwf	variable_register_changed@value^0,w,c
  1611   000750  1052               	iorwf	(variable_register_changed@value+1)^0,w,c
  1612   000752  A4D8               	btfss	status,2,c
  1613   000754  EFAE  F003         	goto	i2u95_41
  1614   000758  EFB0  F003         	goto	i2u95_40
  1615   00075C                     i2u95_41:
  1616   00075C  EFD9  F003         	goto	i2l1865
  1617   000760                     i2u95_40:
  1618   000760  0E00               	movlw	0
  1619   000762  6E3D               	movwf	(set_LED_separately@a+1)^0,c
  1620   000764  0E00               	movlw	0
  1621   000766  6E3C               	movwf	set_LED_separately@a^0,c
  1622   000768  0E00               	movlw	0
  1623   00076A  6E3F               	movwf	(set_LED_separately@b+1)^0,c
  1624   00076C  0E00               	movlw	0
  1625   00076E  6E3E               	movwf	set_LED_separately@b^0,c
  1626   000770  0E00               	movlw	0
  1627   000772  6E41               	movwf	(set_LED_separately@c+1)^0,c
  1628   000774  0E01               	movlw	1
  1629   000776  6E40               	movwf	set_LED_separately@c^0,c
  1630   000778  EC2B  F008         	call	_set_LED_separately	;wreg free
  1631   00077C  5031               	movf	_a2^0,w,c
  1632   00077E  1032               	iorwf	(_a2+1)^0,w,c
  1633   000780  A4D8               	btfss	status,2,c
  1634   000782  EFC5  F003         	goto	i2u96_41
  1635   000786  EFC7  F003         	goto	i2u96_40
  1636   00078A                     i2u96_41:
  1637   00078A  EFCD  F004         	goto	i2l198
  1638   00078E                     i2u96_40:
  1639   00078E  0E10               	movlw	low STR_3
  1640   000790  6E4F               	movwf	printf@fmt^0,c
  1641   000792  EC47  F008         	call	_printf	;wreg free
  1642   000796  0E00               	movlw	0
  1643   000798  6E36               	movwf	(_a0+1)^0,c
  1644   00079A  0E00               	movlw	0
  1645   00079C  6E35               	movwf	_a0^0,c
  1646   00079E  0E00               	movlw	0
  1647   0007A0  6E34               	movwf	(_a1+1)^0,c
  1648   0007A2  0E00               	movlw	0
  1649   0007A4  6E33               	movwf	_a1^0,c
  1650   0007A6  0E00               	movlw	0
  1651   0007A8  6E32               	movwf	(_a2+1)^0,c
  1652   0007AA  0E01               	movlw	1
  1653   0007AC  6E31               	movwf	_a2^0,c
  1654   0007AE  EF60  F003         	goto	i2l1801
  1655   0007B2                     i2l1865:
  1656   0007B2  0E03               	movlw	3
  1657   0007B4  1851               	xorwf	variable_register_changed@value^0,w,c
  1658   0007B6  1052               	iorwf	(variable_register_changed@value+1)^0,w,c
  1659   0007B8  A4D8               	btfss	status,2,c
  1660   0007BA  EFE1  F003         	goto	i2u97_41
  1661   0007BE  EFE3  F003         	goto	i2u97_40
  1662   0007C2                     i2u97_41:
  1663   0007C2  EF10  F004         	goto	i2l1891
  1664   0007C6                     i2u97_40:
  1665   0007C6  0E00               	movlw	0
  1666   0007C8  6E3D               	movwf	(set_LED_separately@a+1)^0,c
  1667   0007CA  0E00               	movlw	0
  1668   0007CC  6E3C               	movwf	set_LED_separately@a^0,c
  1669   0007CE  0E00               	movlw	0
  1670   0007D0  6E3F               	movwf	(set_LED_separately@b+1)^0,c
  1671   0007D2  0E00               	movlw	0
  1672   0007D4  6E3E               	movwf	set_LED_separately@b^0,c
  1673   0007D6  0E00               	movlw	0
  1674   0007D8  6E41               	movwf	(set_LED_separately@c+1)^0,c
  1675   0007DA  0E00               	movlw	0
  1676   0007DC  6E40               	movwf	set_LED_separately@c^0,c
  1677   0007DE  EC2B  F008         	call	_set_LED_separately	;wreg free
  1678   0007E2  502F               	movf	_a3^0,w,c
  1679   0007E4  1030               	iorwf	(_a3+1)^0,w,c
  1680   0007E6  A4D8               	btfss	status,2,c
  1681   0007E8  EFF8  F003         	goto	i2u98_41
  1682   0007EC  EFFA  F003         	goto	i2u98_40
  1683   0007F0                     i2u98_41:
  1684   0007F0  EFCD  F004         	goto	i2l198
  1685   0007F4                     i2u98_40:
  1686   0007F4  0E01               	movlw	low STR_4
  1687   0007F6  6E4F               	movwf	printf@fmt^0,c
  1688   0007F8  EC47  F008         	call	_printf	;wreg free
  1689   0007FC  0E00               	movlw	0
  1690   0007FE  6E36               	movwf	(_a0+1)^0,c
  1691   000800  0E00               	movlw	0
  1692   000802  6E35               	movwf	_a0^0,c
  1693   000804  0E00               	movlw	0
  1694   000806  6E34               	movwf	(_a1+1)^0,c
  1695   000808  0E00               	movlw	0
  1696   00080A  6E33               	movwf	_a1^0,c
  1697   00080C  0E00               	movlw	0
  1698   00080E  6E32               	movwf	(_a2+1)^0,c
  1699   000810  0E00               	movlw	0
  1700   000812  6E31               	movwf	_a2^0,c
  1701   000814  0E00               	movlw	0
  1702   000816  6E30               	movwf	(_a3+1)^0,c
  1703   000818  0E01               	movlw	1
  1704   00081A  6E2F               	movwf	_a3^0,c
  1705   00081C  EF64  F003         	goto	i2l1803
  1706   000820                     i2l1891:
  1707   000820  0E04               	movlw	4
  1708   000822  1851               	xorwf	variable_register_changed@value^0,w,c
  1709   000824  1052               	iorwf	(variable_register_changed@value+1)^0,w,c
  1710   000826  A4D8               	btfss	status,2,c
  1711   000828  EF18  F004         	goto	i2u99_41
  1712   00082C  EF1A  F004         	goto	i2u99_40
  1713   000830                     i2u99_41:
  1714   000830  EF4B  F004         	goto	i2l1917
  1715   000834                     i2u99_40:
  1716   000834  0E00               	movlw	0
  1717   000836  6E3D               	movwf	(set_LED_separately@a+1)^0,c
  1718   000838  0E01               	movlw	1
  1719   00083A  6E3C               	movwf	set_LED_separately@a^0,c
  1720   00083C  0E00               	movlw	0
  1721   00083E  6E3F               	movwf	(set_LED_separately@b+1)^0,c
  1722   000840  0E00               	movlw	0
  1723   000842  6E3E               	movwf	set_LED_separately@b^0,c
  1724   000844  0E00               	movlw	0
  1725   000846  6E41               	movwf	(set_LED_separately@c+1)^0,c
  1726   000848  0E00               	movlw	0
  1727   00084A  6E40               	movwf	set_LED_separately@c^0,c
  1728   00084C  EC2B  F008         	call	_set_LED_separately	;wreg free
  1729   000850  502D               	movf	_a4^0,w,c
  1730   000852  102E               	iorwf	(_a4+1)^0,w,c
  1731   000854  A4D8               	btfss	status,2,c
  1732   000856  EF2F  F004         	goto	i2u100_41
  1733   00085A  EF31  F004         	goto	i2u100_40
  1734   00085E                     i2u100_41:
  1735   00085E  EFCD  F004         	goto	i2l198
  1736   000862                     i2u100_40:
  1737   000862  0E06               	movlw	low STR_5
  1738   000864  6E4F               	movwf	printf@fmt^0,c
  1739   000866  EC47  F008         	call	_printf	;wreg free
  1740   00086A  0E00               	movlw	0
  1741   00086C  6E36               	movwf	(_a0+1)^0,c
  1742   00086E  0E00               	movlw	0
  1743   000870  6E35               	movwf	_a0^0,c
  1744   000872  0E00               	movlw	0
  1745   000874  6E34               	movwf	(_a1+1)^0,c
  1746   000876  0E00               	movlw	0
  1747   000878  6E33               	movwf	_a1^0,c
  1748   00087A  0E00               	movlw	0
  1749   00087C  6E32               	movwf	(_a2+1)^0,c
  1750   00087E  0E00               	movlw	0
  1751   000880  6E31               	movwf	_a2^0,c
  1752   000882  0E00               	movlw	0
  1753   000884  6E30               	movwf	(_a3+1)^0,c
  1754   000886  0E00               	movlw	0
  1755   000888  6E2F               	movwf	_a3^0,c
  1756   00088A  0E00               	movlw	0
  1757   00088C  6E2E               	movwf	(_a4+1)^0,c
  1758   00088E  0E01               	movlw	1
  1759   000890  6E2D               	movwf	_a4^0,c
  1760   000892  EF68  F003         	goto	i2l1805
  1761   000896                     i2l1917:
  1762   000896  0E05               	movlw	5
  1763   000898  1851               	xorwf	variable_register_changed@value^0,w,c
  1764   00089A  1052               	iorwf	(variable_register_changed@value+1)^0,w,c
  1765   00089C  A4D8               	btfss	status,2,c
  1766   00089E  EF53  F004         	goto	i2u101_41
  1767   0008A2  EF55  F004         	goto	i2u101_40
  1768   0008A6                     i2u101_41:
  1769   0008A6  EF8A  F004         	goto	i2l1943
  1770   0008AA                     i2u101_40:
  1771   0008AA  0E00               	movlw	0
  1772   0008AC  6E3D               	movwf	(set_LED_separately@a+1)^0,c
  1773   0008AE  0E01               	movlw	1
  1774   0008B0  6E3C               	movwf	set_LED_separately@a^0,c
  1775   0008B2  0E00               	movlw	0
  1776   0008B4  6E3F               	movwf	(set_LED_separately@b+1)^0,c
  1777   0008B6  0E01               	movlw	1
  1778   0008B8  6E3E               	movwf	set_LED_separately@b^0,c
  1779   0008BA  0E00               	movlw	0
  1780   0008BC  6E41               	movwf	(set_LED_separately@c+1)^0,c
  1781   0008BE  0E00               	movlw	0
  1782   0008C0  6E40               	movwf	set_LED_separately@c^0,c
  1783   0008C2  EC2B  F008         	call	_set_LED_separately	;wreg free
  1784   0008C6  502B               	movf	_a5^0,w,c
  1785   0008C8  102C               	iorwf	(_a5+1)^0,w,c
  1786   0008CA  A4D8               	btfss	status,2,c
  1787   0008CC  EF6A  F004         	goto	i2u102_41
  1788   0008D0  EF6C  F004         	goto	i2u102_40
  1789   0008D4                     i2u102_41:
  1790   0008D4  EFCD  F004         	goto	i2l198
  1791   0008D8                     i2u102_40:
  1792   0008D8  0E0B               	movlw	low STR_6
  1793   0008DA  6E4F               	movwf	printf@fmt^0,c
  1794   0008DC  EC47  F008         	call	_printf	;wreg free
  1795   0008E0  0E00               	movlw	0
  1796   0008E2  6E36               	movwf	(_a0+1)^0,c
  1797   0008E4  0E00               	movlw	0
  1798   0008E6  6E35               	movwf	_a0^0,c
  1799   0008E8  0E00               	movlw	0
  1800   0008EA  6E34               	movwf	(_a1+1)^0,c
  1801   0008EC  0E00               	movlw	0
  1802   0008EE  6E33               	movwf	_a1^0,c
  1803   0008F0  0E00               	movlw	0
  1804   0008F2  6E32               	movwf	(_a2+1)^0,c
  1805   0008F4  0E00               	movlw	0
  1806   0008F6  6E31               	movwf	_a2^0,c
  1807   0008F8  0E00               	movlw	0
  1808   0008FA  6E30               	movwf	(_a3+1)^0,c
  1809   0008FC  0E00               	movlw	0
  1810   0008FE  6E2F               	movwf	_a3^0,c
  1811   000900  0E00               	movlw	0
  1812   000902  6E2E               	movwf	(_a4+1)^0,c
  1813   000904  0E00               	movlw	0
  1814   000906  6E2D               	movwf	_a4^0,c
  1815   000908  0E00               	movlw	0
  1816   00090A  6E2C               	movwf	(_a5+1)^0,c
  1817   00090C  0E01               	movlw	1
  1818   00090E  6E2B               	movwf	_a5^0,c
  1819   000910  EF6C  F003         	goto	i2l1807
  1820   000914                     i2l1943:
  1821   000914  0E06               	movlw	6
  1822   000916  1851               	xorwf	variable_register_changed@value^0,w,c
  1823   000918  1052               	iorwf	(variable_register_changed@value+1)^0,w,c
  1824   00091A  A4D8               	btfss	status,2,c
  1825   00091C  EF92  F004         	goto	i2u103_41
  1826   000920  EF94  F004         	goto	i2u103_40
  1827   000924                     i2u103_41:
  1828   000924  EFCD  F004         	goto	i2l198
  1829   000928                     i2u103_40:
  1830   000928  0E00               	movlw	0
  1831   00092A  6E3D               	movwf	(set_LED_separately@a+1)^0,c
  1832   00092C  0E01               	movlw	1
  1833   00092E  6E3C               	movwf	set_LED_separately@a^0,c
  1834   000930  0E00               	movlw	0
  1835   000932  6E3F               	movwf	(set_LED_separately@b+1)^0,c
  1836   000934  0E01               	movlw	1
  1837   000936  6E3E               	movwf	set_LED_separately@b^0,c
  1838   000938  0E00               	movlw	0
  1839   00093A  6E41               	movwf	(set_LED_separately@c+1)^0,c
  1840   00093C  0E01               	movlw	1
  1841   00093E  6E40               	movwf	set_LED_separately@c^0,c
  1842   000940  EC2B  F008         	call	_set_LED_separately	;wreg free
  1843   000944  5029               	movf	_a6^0,w,c
  1844   000946  102A               	iorwf	(_a6+1)^0,w,c
  1845   000948  A4D8               	btfss	status,2,c
  1846   00094A  EFA9  F004         	goto	i2u104_41
  1847   00094E  EFAB  F004         	goto	i2u104_40
  1848   000952                     i2u104_41:
  1849   000952  EFCD  F004         	goto	i2l198
  1850   000956                     i2u104_40:
  1851   000956  0E1A               	movlw	low STR_1
  1852   000958  6E4F               	movwf	printf@fmt^0,c
  1853   00095A  EC47  F008         	call	_printf	;wreg free
  1854   00095E  0E00               	movlw	0
  1855   000960  6E36               	movwf	(_a0+1)^0,c
  1856   000962  0E00               	movlw	0
  1857   000964  6E35               	movwf	_a0^0,c
  1858   000966  0E00               	movlw	0
  1859   000968  6E34               	movwf	(_a1+1)^0,c
  1860   00096A  0E00               	movlw	0
  1861   00096C  6E33               	movwf	_a1^0,c
  1862   00096E  0E00               	movlw	0
  1863   000970  6E32               	movwf	(_a2+1)^0,c
  1864   000972  0E00               	movlw	0
  1865   000974  6E31               	movwf	_a2^0,c
  1866   000976  0E00               	movlw	0
  1867   000978  6E30               	movwf	(_a3+1)^0,c
  1868   00097A  0E00               	movlw	0
  1869   00097C  6E2F               	movwf	_a3^0,c
  1870   00097E  0E00               	movlw	0
  1871   000980  6E2E               	movwf	(_a4+1)^0,c
  1872   000982  0E00               	movlw	0
  1873   000984  6E2D               	movwf	_a4^0,c
  1874   000986  0E00               	movlw	0
  1875   000988  6E2C               	movwf	(_a5+1)^0,c
  1876   00098A  0E00               	movlw	0
  1877   00098C  6E2B               	movwf	_a5^0,c
  1878   00098E  0E00               	movlw	0
  1879   000990  6E2A               	movwf	(_a6+1)^0,c
  1880   000992  0E01               	movlw	1
  1881   000994  6E29               	movwf	_a6^0,c
  1882   000996  EF70  F003         	goto	i2l1809
  1883   00099A                     i2l198:
  1884   00099A  0012               	return		;funcret
  1885   00099C                     __end_of_variable_register_changed:
  1886                           	callstack 0
  1887                           
  1888 ;; *************** function i2_ClearBuffer *****************
  1889 ;; Defined at:
  1890 ;;		line 84 in file "3b.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  i               2    0[COMRAM] int 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1904 ;;      Params:         0       0       0       0       0       0       0
  1905 ;;      Locals:         2       0       0       0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0
  1907 ;;      Totals:         2       0       0       0       0       0       0
  1908 ;;Total ram usage:        2 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_variable_register_changed
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text11
  1918   000F7E                     __ptext11:
  1919                           	callstack 0
  1920   000F7E                     i2_ClearBuffer:
  1921                           	callstack 23
  1922   000F7E  0E00               	movlw	0
  1923   000F80  6E3D               	movwf	(i2ClearBuffer@i+1)^0,c
  1924   000F82  0E00               	movlw	0
  1925   000F84  6E3C               	movwf	i2ClearBuffer@i^0,c
  1926   000F86                     i2l1667:
  1927   000F86  0E00               	movlw	low _buffer
  1928   000F88  243C               	addwf	i2ClearBuffer@i^0,w,c
  1929   000F8A  6ED9               	movwf	fsr2l,c
  1930   000F8C  0E01               	movlw	high _buffer
  1931   000F8E  203D               	addwfc	(i2ClearBuffer@i+1)^0,w,c
  1932   000F90  6EDA               	movwf	fsr2h,c
  1933   000F92  6ADF               	clrf	indf2,c
  1934   000F94  4A3C               	infsnz	i2ClearBuffer@i^0,f,c
  1935   000F96  2A3D               	incf	(i2ClearBuffer@i+1)^0,f,c
  1936   000F98  BE3D               	btfsc	(i2ClearBuffer@i+1)^0,7,c
  1937   000F9A  EFD8  F007         	goto	i2u87_41
  1938   000F9E  503D               	movf	(i2ClearBuffer@i+1)^0,w,c
  1939   000FA0  E109               	bnz	i2u87_40
  1940   000FA2  0E64               	movlw	100
  1941   000FA4  5C3C               	subwf	i2ClearBuffer@i^0,w,c
  1942   000FA6  A0D8               	btfss	status,0,c
  1943   000FA8  EFD8  F007         	goto	i2u87_41
  1944   000FAC  EFDA  F007         	goto	i2u87_40
  1945   000FB0                     i2u87_41:
  1946   000FB0  EFC3  F007         	goto	i2l1667
  1947   000FB4                     i2u87_40:
  1948   000FB4  0E00               	movlw	0
  1949   000FB6  6E3A               	movwf	(_buffer_size+1)^0,c
  1950   000FB8  0E00               	movlw	0
  1951   000FBA  6E39               	movwf	_buffer_size^0,c
  1952   000FBC  0012               	return		;funcret
  1953   000FBE                     __end_ofi2_ClearBuffer:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function _set_LED_separately *****************
  1957 ;; Defined at:
  1958 ;;		line 220 in file "3b.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  a               2    0[COMRAM] int 
  1961 ;;  b               2    2[COMRAM] int 
  1962 ;;  c               2    4[COMRAM] int 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0, prodl, prodh
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1974 ;;      Params:         6       0       0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0
  1976 ;;      Temps:          2       0       0       0       0       0       0
  1977 ;;      Totals:         8       0       0       0       0       0       0
  1978 ;;Total ram usage:        8 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_variable_register_changed
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text12
  1988   001056                     __ptext12:
  1989                           	callstack 0
  1990   001056                     _set_LED_separately:
  1991                           	callstack 23
  1992   001056  5040               	movf	set_LED_separately@c^0,w,c
  1993   001058  0D02               	mullw	2
  1994   00105A  CFF3 F042          	movff	prodl,??_set_LED_separately
  1995   00105E  503E               	movf	set_LED_separately@b^0,w,c
  1996   001060  0D04               	mullw	4
  1997   001062  CFF3 F043          	movff	prodl,??_set_LED_separately+1
  1998   001066  503C               	movf	set_LED_separately@a^0,w,c
  1999   001068  0D08               	mullw	8
  2000   00106A  50F3               	movf	243,w,c
  2001   00106C  2443               	addwf	(??_set_LED_separately+1)^0,w,c
  2002   00106E  2442               	addwf	??_set_LED_separately^0,w,c
  2003   001070  6E89               	movwf	137,c	;volatile
  2004   001072  0012               	return		;funcret
  2005   001074                     __end_of_set_LED_separately:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _printf *****************
  2009 ;; Defined at:
  2010 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  fmt             1   19[COMRAM] PTR const unsigned char 
  2013 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
  2014 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  ret             2    0        int 
  2017 ;;  ap              1   20[COMRAM] PTR void [1]
  2018 ;;		 -> ?_printf(2), 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  2   19[COMRAM] int 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2028 ;;      Params:         1       0       0       0       0       0       0
  2029 ;;      Locals:         1       0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0
  2031 ;;      Totals:         2       0       0       0       0       0       0
  2032 ;;Total ram usage:        2 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; Hardware stack levels required when called: 4
  2035 ;; This function calls:
  2036 ;;		_vfprintf
  2037 ;; This function is called by:
  2038 ;;		_variable_register_changed
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text13
  2043   00108E                     __ptext13:
  2044                           	callstack 0
  2045   00108E                     _printf:
  2046                           	callstack 19
  2047   00108E  0E50               	movlw	low (?_printf+1)
  2048   001090  6E50               	movwf	printf@ap^0,c
  2049   001092  0E00               	movlw	0
  2050   001094  6E4A               	movwf	vfprintf@fp^0,c
  2051   001096  0E00               	movlw	0
  2052   001098  6E4B               	movwf	(vfprintf@fp+1)^0,c
  2053   00109A  C04F  F04C         	movff	printf@fmt,vfprintf@fmt
  2054   00109E  0E50               	movlw	low printf@ap
  2055   0010A0  6E4D               	movwf	vfprintf@ap^0,c
  2056   0010A2  ECDF  F007         	call	_vfprintf	;wreg free
  2057   0010A6  0012               	return		;funcret
  2058   0010A8                     __end_of_printf:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _vfprintf *****************
  2062 ;; Defined at:
  2063 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2066 ;;		 -> NULL(0), 
  2067 ;;  fmt             1   16[COMRAM] PTR const unsigned char 
  2068 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
  2069 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2070 ;;  ap              1   17[COMRAM] PTR PTR void 
  2071 ;;		 -> printf@ap(1), 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  cfmt            1   18[COMRAM] PTR unsigned char 
  2074 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
  2075 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2   14[COMRAM] int 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2085 ;;      Params:         4       0       0       0       0       0       0
  2086 ;;      Locals:         1       0       0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0
  2088 ;;      Totals:         5       0       0       0       0       0       0
  2089 ;;Total ram usage:        5 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 3
  2092 ;; This function calls:
  2093 ;;		_vfpfcnvrt
  2094 ;; This function is called by:
  2095 ;;		_printf
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text14
  2100   000FBE                     __ptext14:
  2101                           	callstack 0
  2102   000FBE                     _vfprintf:
  2103                           	callstack 19
  2104   000FBE                     
  2105                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2106   000FBE  C04C  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2109   000FC2  EFED  F007         	goto	i2l1541
  2110   000FC6                     i2l1539:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2113   000FC6  C04A  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  2114   000FCA  C04B  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2115   000FCE  0E4E               	movlw	low vfprintf@cfmt
  2116   000FD0  6E48               	movwf	vfpfcnvrt@fmt^0,c
  2117   000FD2  C04D  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  2118   000FD6  ECF1  F006         	call	_vfpfcnvrt	;wreg free
  2119   000FDA                     i2l1541:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2122   000FDA  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2123   000FDE                     	if	0	;There is only one active tblptr byte
  2124   000FDE                     	endif
  2125   000FDE                     	if	0	;tblptru may be non-zero
  2126   000FDE                     	endif
  2127   000FDE                     	if	0	;tblptru may be non-zero
  2128   000FDE                     	endif
  2129   000FDE  0008               	tblrd		*
  2130   000FE0  50F5               	movf	tablat,w,c
  2131   000FE2  0900               	iorlw	0
  2132   000FE4  A4D8               	btfss	status,2,c
  2133   000FE6  EFF7  F007         	goto	i2u67_41
  2134   000FEA  EFF9  F007         	goto	i2u67_40
  2135   000FEE                     i2u67_41:
  2136   000FEE  EFE3  F007         	goto	i2l1539
  2137   000FF2                     i2u67_40:
  2138   000FF2                     
  2139                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2140   000FF2  0E00               	movlw	0
  2141   000FF4  6E4B               	movwf	(?_vfprintf+1)^0,c
  2142   000FF6  0E00               	movlw	0
  2143   000FF8  6E4A               	movwf	?_vfprintf^0,c
  2144   000FFA  0012               	return		;funcret
  2145   000FFC                     __end_of_vfprintf:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function _vfpfcnvrt *****************
  2149 ;; Defined at:
  2150 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2153 ;;		 -> NULL(0), 
  2154 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  2155 ;;		 -> vfprintf@cfmt(1), 
  2156 ;;  ap              1   13[COMRAM] PTR PTR void 
  2157 ;;		 -> printf@ap(1), 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  cp              2    0        PTR unsigned char 
  2160 ;;  done            1    0        _Bool 
  2161 ;;  c               1    0        unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2171 ;;      Params:         4       0       0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0
  2174 ;;      Totals:         4       0       0       0       0       0       0
  2175 ;;Total ram usage:        4 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 2
  2178 ;; This function calls:
  2179 ;;		_fputc
  2180 ;; This function is called by:
  2181 ;;		_vfprintf
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text15
  2186   000DE2                     __ptext15:
  2187                           	callstack 0
  2188   000DE2                     _vfpfcnvrt:
  2189                           	callstack 19
  2190   000DE2                     
  2191                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2192   000DE2  5048               	movf	vfpfcnvrt@fmt^0,w,c
  2193   000DE4  6ED9               	movwf	fsr2l,c
  2194   000DE6  6ADA               	clrf	fsr2h,c
  2195   000DE8  CFDF FFF6          	movff	indf2,tblptrl
  2196   000DEC                     	if	0	;There is only one active tblptr byte
  2197   000DEC                     	endif
  2198   000DEC                     	if	0	;tblptru may be non-zero
  2199   000DEC                     	endif
  2200   000DEC                     	if	0	;tblptru may be non-zero
  2201   000DEC                     	endif
  2202   000DEC  0008               	tblrd		*
  2203   000DEE  50F5               	movf	tablat,w,c
  2204   000DF0  0A25               	xorlw	37
  2205   000DF2  A4D8               	btfss	status,2,c
  2206   000DF4  EFFE  F006         	goto	i2u66_41
  2207   000DF8  EF00  F007         	goto	i2u66_40
  2208   000DFC                     i2u66_41:
  2209   000DFC  EF12  F007         	goto	i2l1531
  2210   000E00                     i2u66_40:
  2211   000E00                     
  2212                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2213   000E00  5048               	movf	vfpfcnvrt@fmt^0,w,c
  2214   000E02  6ED9               	movwf	fsr2l,c
  2215   000E04  6ADA               	clrf	fsr2h,c
  2216   000E06  2ADF               	incf	indf2,f,c
  2217   000E08                     
  2218                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2219   000E08  0E00               	movlw	0
  2220   000E0A  6E22               	movwf	(_width+1)^0,c
  2221   000E0C  0E00               	movlw	0
  2222   000E0E  6E21               	movwf	_width^0,c
  2223   000E10  C021  F03B         	movff	_width,_flags
  2224   000E14                     
  2225                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2226   000E14  6823               	setf	_prec^0,c
  2227   000E16  6824               	setf	(_prec+1)^0,c
  2228   000E18                     i2l1527:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2231   000E18  5048               	movf	vfpfcnvrt@fmt^0,w,c
  2232   000E1A  6ED9               	movwf	fsr2l,c
  2233   000E1C  6ADA               	clrf	fsr2h,c
  2234   000E1E  2ADF               	incf	indf2,f,c
  2235   000E20  EF23  F007         	goto	i2l915
  2236   000E24                     i2l1531:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2239   000E24  5048               	movf	vfpfcnvrt@fmt^0,w,c
  2240   000E26  6ED9               	movwf	fsr2l,c
  2241   000E28  6ADA               	clrf	fsr2h,c
  2242   000E2A  CFDF FFF6          	movff	indf2,tblptrl
  2243   000E2E                     	if	0	;There is only one active tblptr byte
  2244   000E2E                     	endif
  2245   000E2E                     	if	0	;tblptru may be non-zero
  2246   000E2E                     	endif
  2247   000E2E                     	if	0	;tblptru may be non-zero
  2248   000E2E                     	endif
  2249   000E2E  0008               	tblrd		*
  2250   000E30  50F5               	movf	tablat,w,c
  2251   000E32  6E3D               	movwf	fputc@c^0,c
  2252   000E34  6A3E               	clrf	(fputc@c+1)^0,c
  2253   000E36  C046  F03F         	movff	vfpfcnvrt@fp,fputc@fp
  2254   000E3A  C047  F040         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2255   000E3E  ECCE  F004         	call	_fputc	;wreg free
  2256   000E42  EF0C  F007         	goto	i2l1527
  2257   000E46                     i2l915:
  2258   000E46  0012               	return		;funcret
  2259   000E48                     __end_of_vfpfcnvrt:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _fputc *****************
  2263 ;; Defined at:
  2264 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  c               2    1[COMRAM] int 
  2267 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2268 ;;		 -> NULL(0), 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;		None
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  2    1[COMRAM] int 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2280 ;;      Params:         4       0       0       0       0       0       0
  2281 ;;      Locals:         0       0       0       0       0       0       0
  2282 ;;      Temps:          5       0       0       0       0       0       0
  2283 ;;      Totals:         9       0       0       0       0       0       0
  2284 ;;Total ram usage:        9 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 1
  2287 ;; This function calls:
  2288 ;;		i2_putch
  2289 ;; This function is called by:
  2290 ;;		_vfpfcnvrt
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text16
  2295   00099C                     __ptext16:
  2296                           	callstack 0
  2297   00099C                     _fputc:
  2298                           	callstack 19
  2299   00099C  503F               	movf	fputc@fp^0,w,c
  2300   00099E  1040               	iorwf	(fputc@fp+1)^0,w,c
  2301   0009A0  B4D8               	btfsc	status,2,c
  2302   0009A2  EFD5  F004         	goto	i2u62_41
  2303   0009A6  EFD7  F004         	goto	i2u62_40
  2304   0009AA                     i2u62_41:
  2305   0009AA  EFE0  F004         	goto	i2l1509
  2306   0009AE                     i2u62_40:
  2307   0009AE  503F               	movf	fputc@fp^0,w,c
  2308   0009B0  1040               	iorwf	(fputc@fp+1)^0,w,c
  2309   0009B2  A4D8               	btfss	status,2,c
  2310   0009B4  EFDE  F004         	goto	i2u63_41
  2311   0009B8  EFE0  F004         	goto	i2u63_40
  2312   0009BC                     i2u63_41:
  2313   0009BC  EFE5  F004         	goto	i2l1511
  2314   0009C0                     i2u63_40:
  2315   0009C0                     i2l1509:
  2316   0009C0  503D               	movf	fputc@c^0,w,c
  2317   0009C2  EC24  F007         	call	i2_putch
  2318   0009C6  EF32  F005         	goto	i2l933
  2319   0009CA                     i2l1511:
  2320   0009CA  EE20 F009          	lfsr	2,9
  2321   0009CE  503F               	movf	fputc@fp^0,w,c
  2322   0009D0  26D9               	addwf	fsr2l,f,c
  2323   0009D2  5040               	movf	(fputc@fp+1)^0,w,c
  2324   0009D4  22DA               	addwfc	fsr2h,f,c
  2325   0009D6  50DE               	movf	postinc2,w,c
  2326   0009D8  10DE               	iorwf	postinc2,w,c
  2327   0009DA  B4D8               	btfsc	status,2,c
  2328   0009DC  EFF2  F004         	goto	i2u64_41
  2329   0009E0  EFF4  F004         	goto	i2u64_40
  2330   0009E4                     i2u64_41:
  2331   0009E4  EF0F  F005         	goto	i2l1515
  2332   0009E8                     i2u64_40:
  2333   0009E8  EE20 F009          	lfsr	2,9
  2334   0009EC  503F               	movf	fputc@fp^0,w,c
  2335   0009EE  26D9               	addwf	fsr2l,f,c
  2336   0009F0  5040               	movf	(fputc@fp+1)^0,w,c
  2337   0009F2  22DA               	addwfc	fsr2h,f,c
  2338   0009F4  EE10 F002          	lfsr	1,2
  2339   0009F8  503F               	movf	fputc@fp^0,w,c
  2340   0009FA  26E1               	addwf	fsr1l,f,c
  2341   0009FC  5040               	movf	(fputc@fp+1)^0,w,c
  2342   0009FE  22E2               	addwfc	fsr1h,f,c
  2343   000A00  50DE               	movf	postinc2,w,c
  2344   000A02  5CE6               	subwf	postinc1,w,c
  2345   000A04  50E6               	movf	postinc1,w,c
  2346   000A06  0A80               	xorlw	128
  2347   000A08  6E45               	movwf	(??_fputc+4)^0,c
  2348   000A0A  50DE               	movf	postinc2,w,c
  2349   000A0C  0A80               	xorlw	128
  2350   000A0E  5845               	subwfb	(??_fputc+4)^0,w,c
  2351   000A10  B0D8               	btfsc	status,0,c
  2352   000A12  EF0D  F005         	goto	i2u65_41
  2353   000A16  EF0F  F005         	goto	i2u65_40
  2354   000A1A                     i2u65_41:
  2355   000A1A  EF32  F005         	goto	i2l933
  2356   000A1E                     i2u65_40:
  2357   000A1E                     i2l1515:
  2358   000A1E  EE20 F002          	lfsr	2,2
  2359   000A22  503F               	movf	fputc@fp^0,w,c
  2360   000A24  26D9               	addwf	fsr2l,f,c
  2361   000A26  5040               	movf	(fputc@fp+1)^0,w,c
  2362   000A28  22DA               	addwfc	fsr2h,f,c
  2363   000A2A  CFDE F041          	movff	postinc2,??_fputc
  2364   000A2E  CFDD F042          	movff	postdec2,??_fputc+1
  2365   000A32  C03F  FFD9         	movff	fputc@fp,fsr2l
  2366   000A36  C040  FFDA         	movff	fputc@fp+1,fsr2h
  2367   000A3A  CFDE F043          	movff	postinc2,??_fputc+2
  2368   000A3E  CFDD F044          	movff	postdec2,??_fputc+3
  2369   000A42  5041               	movf	??_fputc^0,w,c
  2370   000A44  2443               	addwf	(??_fputc+2)^0,w,c
  2371   000A46  6ED9               	movwf	fsr2l,c
  2372   000A48  5042               	movf	(??_fputc+1)^0,w,c
  2373   000A4A  2044               	addwfc	(??_fputc+3)^0,w,c
  2374   000A4C  6EDA               	movwf	fsr2h,c
  2375   000A4E  C03D  FFDF         	movff	fputc@c,indf2
  2376   000A52  EE20 F002          	lfsr	2,2
  2377   000A56  503F               	movf	fputc@fp^0,w,c
  2378   000A58  26D9               	addwf	fsr2l,f,c
  2379   000A5A  5040               	movf	(fputc@fp+1)^0,w,c
  2380   000A5C  22DA               	addwfc	fsr2h,f,c
  2381   000A5E  2ADE               	incf	postinc2,f,c
  2382   000A60  0E00               	movlw	0
  2383   000A62  22DD               	addwfc	postdec2,f,c
  2384   000A64                     i2l933:
  2385   000A64  0012               	return		;funcret
  2386   000A66                     __end_of_fputc:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function i2_putch *****************
  2390 ;; Defined at:
  2391 ;;		line 72 in file "3b.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  data            1    wreg     unsigned char 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  data            1    0[COMRAM] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2405 ;;      Params:         0       0       0       0       0       0       0
  2406 ;;      Locals:         1       0       0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0
  2408 ;;      Totals:         1       0       0       0       0       0       0
  2409 ;;Total ram usage:        1 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_fputc
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text17
  2419   000E48                     __ptext17:
  2420                           	callstack 0
  2421   000E48                     i2_putch:
  2422                           	callstack 19
  2423                           
  2424                           ;incstack = 0
  2425                           ;i2putch@data stored from wreg
  2426   000E48  6E3C               	movwf	i2putch@data^0,c
  2427   000E4A  0E0A               	movlw	10
  2428   000E4C  183C               	xorwf	i2putch@data^0,w,c
  2429   000E4E  B4D8               	btfsc	status,2,c
  2430   000E50  EF2C  F007         	goto	i2u57_41
  2431   000E54  EF2E  F007         	goto	i2u57_40
  2432   000E58                     i2u57_41:
  2433   000E58  EF37  F007         	goto	i2l82
  2434   000E5C                     i2u57_40:
  2435   000E5C  0E0D               	movlw	13
  2436   000E5E  183C               	xorwf	i2putch@data^0,w,c
  2437   000E60  A4D8               	btfss	status,2,c
  2438   000E62  EF35  F007         	goto	i2u58_41
  2439   000E66  EF37  F007         	goto	i2u58_40
  2440   000E6A                     i2u58_41:
  2441   000E6A  EF4B  F007         	goto	i2l89
  2442   000E6E                     i2u58_40:
  2443   000E6E                     i2l82:
  2444   000E6E  A2AC               	btfss	172,1,c	;volatile
  2445   000E70  EF3C  F007         	goto	i2u59_41
  2446   000E74  EF3E  F007         	goto	i2u59_40
  2447   000E78                     i2u59_41:
  2448   000E78  EF37  F007         	goto	i2l82
  2449   000E7C                     i2u59_40:
  2450   000E7C  0E0D               	movlw	13
  2451   000E7E  6EAD               	movwf	173,c	;volatile
  2452   000E80                     i2l85:
  2453   000E80  A2AC               	btfss	172,1,c	;volatile
  2454   000E82  EF45  F007         	goto	i2u60_41
  2455   000E86  EF47  F007         	goto	i2u60_40
  2456   000E8A                     i2u60_41:
  2457   000E8A  EF40  F007         	goto	i2l85
  2458   000E8E                     i2u60_40:
  2459   000E8E  0E0A               	movlw	10
  2460   000E90  6EAD               	movwf	173,c	;volatile
  2461   000E92  EF54  F007         	goto	i2l92
  2462   000E96                     i2l89:
  2463   000E96  A2AC               	btfss	172,1,c	;volatile
  2464   000E98  EF50  F007         	goto	i2u61_41
  2465   000E9C  EF52  F007         	goto	i2u61_40
  2466   000EA0                     i2u61_41:
  2467   000EA0  EF4B  F007         	goto	i2l89
  2468   000EA4                     i2u61_40:
  2469   000EA4  C03C  FFAD         	movff	i2putch@data,4013	;volatile
  2470   000EA8                     i2l92:
  2471   000EA8  0012               	return		;funcret
  2472   000EAA                     __end_ofi2_putch:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function ___awmod *****************
  2476 ;; Defined at:
  2477 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  dividend        2    0[COMRAM] int 
  2480 ;;  divisor         2    2[COMRAM] int 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  sign            1    5[COMRAM] unsigned char 
  2483 ;;  counter         1    4[COMRAM] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2    0[COMRAM] int 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2493 ;;      Params:         4       0       0       0       0       0       0
  2494 ;;      Locals:         2       0       0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0
  2496 ;;      Totals:         6       0       0       0       0       0       0
  2497 ;;Total ram usage:        6 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_variable_register_changed
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text18
  2507   000BE0                     __ptext18:
  2508                           	callstack 0
  2509   000BE0                     ___awmod:
  2510                           	callstack 23
  2511   000BE0  6A41               	clrf	___awmod@sign^0,c
  2512   000BE2  BE3D               	btfsc	(___awmod@dividend+1)^0,7,c
  2513   000BE4  EFF8  F005         	goto	i2u81_40
  2514   000BE8  EFF6  F005         	goto	i2u81_41
  2515   000BEC                     i2u81_41:
  2516   000BEC  EFFE  F005         	goto	i2l1633
  2517   000BF0                     i2u81_40:
  2518   000BF0  6C3C               	negf	___awmod@dividend^0,c
  2519   000BF2  1E3D               	comf	(___awmod@dividend+1)^0,f,c
  2520   000BF4  B0D8               	btfsc	status,0,c
  2521   000BF6  2A3D               	incf	(___awmod@dividend+1)^0,f,c
  2522   000BF8  0E01               	movlw	1
  2523   000BFA  6E41               	movwf	___awmod@sign^0,c
  2524   000BFC                     i2l1633:
  2525   000BFC  BE3F               	btfsc	(___awmod@divisor+1)^0,7,c
  2526   000BFE  EF05  F006         	goto	i2u82_40
  2527   000C02  EF03  F006         	goto	i2u82_41
  2528   000C06                     i2u82_41:
  2529   000C06  EF09  F006         	goto	i2l1637
  2530   000C0A                     i2u82_40:
  2531   000C0A  6C3E               	negf	___awmod@divisor^0,c
  2532   000C0C  1E3F               	comf	(___awmod@divisor+1)^0,f,c
  2533   000C0E  B0D8               	btfsc	status,0,c
  2534   000C10  2A3F               	incf	(___awmod@divisor+1)^0,f,c
  2535   000C12                     i2l1637:
  2536   000C12  503E               	movf	___awmod@divisor^0,w,c
  2537   000C14  103F               	iorwf	(___awmod@divisor+1)^0,w,c
  2538   000C16  B4D8               	btfsc	status,2,c
  2539   000C18  EF10  F006         	goto	i2u83_41
  2540   000C1C  EF12  F006         	goto	i2u83_40
  2541   000C20                     i2u83_41:
  2542   000C20  EF36  F006         	goto	i2l1653
  2543   000C24                     i2u83_40:
  2544   000C24  0E01               	movlw	1
  2545   000C26  6E40               	movwf	___awmod@counter^0,c
  2546   000C28  EF1A  F006         	goto	i2l1643
  2547   000C2C                     i2l1641:
  2548   000C2C  90D8               	bcf	status,0,c
  2549   000C2E  363E               	rlcf	___awmod@divisor^0,f,c
  2550   000C30  363F               	rlcf	(___awmod@divisor+1)^0,f,c
  2551   000C32  2A40               	incf	___awmod@counter^0,f,c
  2552   000C34                     i2l1643:
  2553   000C34  AE3F               	btfss	(___awmod@divisor+1)^0,7,c
  2554   000C36  EF1F  F006         	goto	i2u84_41
  2555   000C3A  EF21  F006         	goto	i2u84_40
  2556   000C3E                     i2u84_41:
  2557   000C3E  EF16  F006         	goto	i2l1641
  2558   000C42                     i2u84_40:
  2559   000C42                     i2l1645:
  2560   000C42  503E               	movf	___awmod@divisor^0,w,c
  2561   000C44  5C3C               	subwf	___awmod@dividend^0,w,c
  2562   000C46  503F               	movf	(___awmod@divisor+1)^0,w,c
  2563   000C48  583D               	subwfb	(___awmod@dividend+1)^0,w,c
  2564   000C4A  A0D8               	btfss	status,0,c
  2565   000C4C  EF2A  F006         	goto	i2u85_41
  2566   000C50  EF2C  F006         	goto	i2u85_40
  2567   000C54                     i2u85_41:
  2568   000C54  EF30  F006         	goto	i2l1649
  2569   000C58                     i2u85_40:
  2570   000C58  503E               	movf	___awmod@divisor^0,w,c
  2571   000C5A  5E3C               	subwf	___awmod@dividend^0,f,c
  2572   000C5C  503F               	movf	(___awmod@divisor+1)^0,w,c
  2573   000C5E  5A3D               	subwfb	(___awmod@dividend+1)^0,f,c
  2574   000C60                     i2l1649:
  2575   000C60  90D8               	bcf	status,0,c
  2576   000C62  323F               	rrcf	(___awmod@divisor+1)^0,f,c
  2577   000C64  323E               	rrcf	___awmod@divisor^0,f,c
  2578   000C66  2E40               	decfsz	___awmod@counter^0,f,c
  2579   000C68  EF21  F006         	goto	i2l1645
  2580   000C6C                     i2l1653:
  2581   000C6C  5041               	movf	___awmod@sign^0,w,c
  2582   000C6E  B4D8               	btfsc	status,2,c
  2583   000C70  EF3C  F006         	goto	i2u86_41
  2584   000C74  EF3E  F006         	goto	i2u86_40
  2585   000C78                     i2u86_41:
  2586   000C78  EF42  F006         	goto	i2l1657
  2587   000C7C                     i2u86_40:
  2588   000C7C  6C3C               	negf	___awmod@dividend^0,c
  2589   000C7E  1E3D               	comf	(___awmod@dividend+1)^0,f,c
  2590   000C80  B0D8               	btfsc	status,0,c
  2591   000C82  2A3D               	incf	(___awmod@dividend+1)^0,f,c
  2592   000C84                     i2l1657:
  2593   000C84  C03C  F03C         	movff	___awmod@dividend,?___awmod
  2594   000C88  C03D  F03D         	movff	___awmod@dividend+1,?___awmod+1
  2595   000C8C  0012               	return		;funcret
  2596   000C8E                     __end_of___awmod:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function ___awdiv *****************
  2600 ;; Defined at:
  2601 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  dividend        2    0[COMRAM] int 
  2604 ;;  divisor         2    2[COMRAM] int 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  quotient        2    6[COMRAM] int 
  2607 ;;  sign            1    5[COMRAM] unsigned char 
  2608 ;;  counter         1    4[COMRAM] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  2    0[COMRAM] int 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2618 ;;      Params:         4       0       0       0       0       0       0
  2619 ;;      Locals:         4       0       0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0
  2621 ;;      Totals:         8       0       0       0       0       0       0
  2622 ;;Total ram usage:        8 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_variable_register_changed
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text19
  2632   000A66                     __ptext19:
  2633                           	callstack 0
  2634   000A66                     ___awdiv:
  2635                           	callstack 23
  2636   000A66  6A41               	clrf	___awdiv@sign^0,c
  2637   000A68  BE3F               	btfsc	(___awdiv@divisor+1)^0,7,c
  2638   000A6A  EF3B  F005         	goto	i2u75_40
  2639   000A6E  EF39  F005         	goto	i2u75_41
  2640   000A72                     i2u75_41:
  2641   000A72  EF41  F005         	goto	i2l1589
  2642   000A76                     i2u75_40:
  2643   000A76  6C3E               	negf	___awdiv@divisor^0,c
  2644   000A78  1E3F               	comf	(___awdiv@divisor+1)^0,f,c
  2645   000A7A  B0D8               	btfsc	status,0,c
  2646   000A7C  2A3F               	incf	(___awdiv@divisor+1)^0,f,c
  2647   000A7E  0E01               	movlw	1
  2648   000A80  6E41               	movwf	___awdiv@sign^0,c
  2649   000A82                     i2l1589:
  2650   000A82  BE3D               	btfsc	(___awdiv@dividend+1)^0,7,c
  2651   000A84  EF48  F005         	goto	i2u76_40
  2652   000A88  EF46  F005         	goto	i2u76_41
  2653   000A8C                     i2u76_41:
  2654   000A8C  EF4E  F005         	goto	i2l1595
  2655   000A90                     i2u76_40:
  2656   000A90  6C3C               	negf	___awdiv@dividend^0,c
  2657   000A92  1E3D               	comf	(___awdiv@dividend+1)^0,f,c
  2658   000A94  B0D8               	btfsc	status,0,c
  2659   000A96  2A3D               	incf	(___awdiv@dividend+1)^0,f,c
  2660   000A98  0E01               	movlw	1
  2661   000A9A  1A41               	xorwf	___awdiv@sign^0,f,c
  2662   000A9C                     i2l1595:
  2663   000A9C  0E00               	movlw	0
  2664   000A9E  6E43               	movwf	(___awdiv@quotient+1)^0,c
  2665   000AA0  0E00               	movlw	0
  2666   000AA2  6E42               	movwf	___awdiv@quotient^0,c
  2667   000AA4  503E               	movf	___awdiv@divisor^0,w,c
  2668   000AA6  103F               	iorwf	(___awdiv@divisor+1)^0,w,c
  2669   000AA8  B4D8               	btfsc	status,2,c
  2670   000AAA  EF59  F005         	goto	i2u77_41
  2671   000AAE  EF5B  F005         	goto	i2u77_40
  2672   000AB2                     i2u77_41:
  2673   000AB2  EF83  F005         	goto	i2l1617
  2674   000AB6                     i2u77_40:
  2675   000AB6  0E01               	movlw	1
  2676   000AB8  6E40               	movwf	___awdiv@counter^0,c
  2677   000ABA  EF63  F005         	goto	i2l1603
  2678   000ABE                     i2l1601:
  2679   000ABE  90D8               	bcf	status,0,c
  2680   000AC0  363E               	rlcf	___awdiv@divisor^0,f,c
  2681   000AC2  363F               	rlcf	(___awdiv@divisor+1)^0,f,c
  2682   000AC4  2A40               	incf	___awdiv@counter^0,f,c
  2683   000AC6                     i2l1603:
  2684   000AC6  AE3F               	btfss	(___awdiv@divisor+1)^0,7,c
  2685   000AC8  EF68  F005         	goto	i2u78_41
  2686   000ACC  EF6A  F005         	goto	i2u78_40
  2687   000AD0                     i2u78_41:
  2688   000AD0  EF5F  F005         	goto	i2l1601
  2689   000AD4                     i2u78_40:
  2690   000AD4                     i2l1605:
  2691   000AD4  90D8               	bcf	status,0,c
  2692   000AD6  3642               	rlcf	___awdiv@quotient^0,f,c
  2693   000AD8  3643               	rlcf	(___awdiv@quotient+1)^0,f,c
  2694   000ADA  503E               	movf	___awdiv@divisor^0,w,c
  2695   000ADC  5C3C               	subwf	___awdiv@dividend^0,w,c
  2696   000ADE  503F               	movf	(___awdiv@divisor+1)^0,w,c
  2697   000AE0  583D               	subwfb	(___awdiv@dividend+1)^0,w,c
  2698   000AE2  A0D8               	btfss	status,0,c
  2699   000AE4  EF76  F005         	goto	i2u79_41
  2700   000AE8  EF78  F005         	goto	i2u79_40
  2701   000AEC                     i2u79_41:
  2702   000AEC  EF7D  F005         	goto	i2l1613
  2703   000AF0                     i2u79_40:
  2704   000AF0  503E               	movf	___awdiv@divisor^0,w,c
  2705   000AF2  5E3C               	subwf	___awdiv@dividend^0,f,c
  2706   000AF4  503F               	movf	(___awdiv@divisor+1)^0,w,c
  2707   000AF6  5A3D               	subwfb	(___awdiv@dividend+1)^0,f,c
  2708   000AF8  8042               	bsf	___awdiv@quotient^0,0,c
  2709   000AFA                     i2l1613:
  2710   000AFA  90D8               	bcf	status,0,c
  2711   000AFC  323F               	rrcf	(___awdiv@divisor+1)^0,f,c
  2712   000AFE  323E               	rrcf	___awdiv@divisor^0,f,c
  2713   000B00  2E40               	decfsz	___awdiv@counter^0,f,c
  2714   000B02  EF6A  F005         	goto	i2l1605
  2715   000B06                     i2l1617:
  2716   000B06  5041               	movf	___awdiv@sign^0,w,c
  2717   000B08  B4D8               	btfsc	status,2,c
  2718   000B0A  EF89  F005         	goto	i2u80_41
  2719   000B0E  EF8B  F005         	goto	i2u80_40
  2720   000B12                     i2u80_41:
  2721   000B12  EF8F  F005         	goto	i2l1621
  2722   000B16                     i2u80_40:
  2723   000B16  6C42               	negf	___awdiv@quotient^0,c
  2724   000B18  1E43               	comf	(___awdiv@quotient+1)^0,f,c
  2725   000B1A  B0D8               	btfsc	status,0,c
  2726   000B1C  2A43               	incf	(___awdiv@quotient+1)^0,f,c
  2727   000B1E                     i2l1621:
  2728   000B1E  C042  F03C         	movff	___awdiv@quotient,?___awdiv
  2729   000B22  C043  F03D         	movff	___awdiv@quotient+1,?___awdiv+1
  2730   000B26  0012               	return		;funcret
  2731   000B28                     __end_of___awdiv:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function _button_pressed *****************
  2735 ;; Defined at:
  2736 ;;		line 281 in file "3b.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		None
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2750 ;;      Params:         0       0       0       0       0       0       0
  2751 ;;      Locals:         0       0       0       0       0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0
  2753 ;;      Totals:         0       0       0       0       0       0       0
  2754 ;;Total ram usage:        0 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_H_ISR
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text20
  2764   0010A8                     __ptext20:
  2765                           	callstack 0
  2766   0010A8                     _button_pressed:
  2767                           	callstack 24
  2768   0010A8  0012               	return		;funcret
  2769   0010AA                     __end_of_button_pressed:
  2770                           	callstack 0
  2771                           
  2772                           	psect	rparam
  2773   000001                     ___rparam_used  equ	1
  2774   000000                     ___param_bank   equ	0
  2775   000000                     __Lparam        equ	__Lrparam
  2776   000000                     __Hparam        equ	__Hrparam
  2777                           
  2778                           	psect	temp
  2779   000061                     btemp:
  2780                           	callstack 0
  2781   000061                     	ds	1
  2782   000061                     int$flags       set	btemp
  2783   000062                     wtemp8          set	btemp+1
  2784   000062                     ttemp5          set	btemp+1
  2785   000065                     ttemp6          set	btemp+4
  2786   000069                     ttemp7          set	btemp+8
  2787                           
  2788                           	psect	idloc
  2789                           
  2790                           ;Config register IDLOC0 @ 0x200000
  2791                           ;	unspecified, using default values
  2792   200000                     	org	2097152
  2793   200000  FF                 	db	255
  2794                           
  2795                           ;Config register IDLOC1 @ 0x200001
  2796                           ;	unspecified, using default values
  2797   200001                     	org	2097153
  2798   200001  FF                 	db	255
  2799                           
  2800                           ;Config register IDLOC2 @ 0x200002
  2801                           ;	unspecified, using default values
  2802   200002                     	org	2097154
  2803   200002  FF                 	db	255
  2804                           
  2805                           ;Config register IDLOC3 @ 0x200003
  2806                           ;	unspecified, using default values
  2807   200003                     	org	2097155
  2808   200003  FF                 	db	255
  2809                           
  2810                           ;Config register IDLOC4 @ 0x200004
  2811                           ;	unspecified, using default values
  2812   200004                     	org	2097156
  2813   200004  FF                 	db	255
  2814                           
  2815                           ;Config register IDLOC5 @ 0x200005
  2816                           ;	unspecified, using default values
  2817   200005                     	org	2097157
  2818   200005  FF                 	db	255
  2819                           
  2820                           ;Config register IDLOC6 @ 0x200006
  2821                           ;	unspecified, using default values
  2822   200006                     	org	2097158
  2823   200006  FF                 	db	255
  2824                           
  2825                           ;Config register IDLOC7 @ 0x200007
  2826                           ;	unspecified, using default values
  2827   200007                     	org	2097159
  2828   200007  FF                 	db	255
  2829                           
  2830                           	psect	config
  2831                           
  2832                           ; Padding undefined space
  2833   300000                     	org	3145728
  2834   300000  FF                 	db	255
  2835                           
  2836                           ;Config register CONFIG1H @ 0x300001
  2837                           ;	Oscillator Selection bits
  2838                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2839                           ;	Fail-Safe Clock Monitor Enable bit
  2840                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2841                           ;	Internal/External Oscillator Switchover bit
  2842                           ;	IESO = ON, Oscillator Switchover mode enabled
  2843   300001                     	org	3145729
  2844   300001  88                 	db	136
  2845                           
  2846                           ;Config register CONFIG2L @ 0x300002
  2847                           ;	Power-up Timer Enable bit
  2848                           ;	PWRT = OFF, PWRT disabled
  2849                           ;	Brown-out Reset Enable bits
  2850                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2851                           ;	Brown Out Reset Voltage bits
  2852                           ;	BORV = 3, Minimum setting
  2853   300002                     	org	3145730
  2854   300002  1F                 	db	31
  2855                           
  2856                           ;Config register CONFIG2H @ 0x300003
  2857                           ;	Watchdog Timer Enable bit
  2858                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2859                           ;	Watchdog Timer Postscale Select bits
  2860                           ;	WDTPS = 1, 1:1
  2861   300003                     	org	3145731
  2862   300003  00                 	db	0
  2863                           
  2864                           ; Padding undefined space
  2865   300004                     	org	3145732
  2866   300004  FF                 	db	255
  2867                           
  2868                           ;Config register CONFIG3H @ 0x300005
  2869                           ;	CCP2 MUX bit
  2870                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2871                           ;	PORTB A/D Enable bit
  2872                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2873                           ;	Low-Power Timer1 Oscillator Enable bit
  2874                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2875                           ;	MCLR Pin Enable bit
  2876                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2877   300005                     	org	3145733
  2878   300005  83                 	db	131
  2879                           
  2880                           ;Config register CONFIG4L @ 0x300006
  2881                           ;	Stack Full/Underflow Reset Enable bit
  2882                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2883                           ;	Single-Supply ICSP Enable bit
  2884                           ;	LVP = OFF, Single-Supply ICSP disabled
  2885                           ;	Extended Instruction Set Enable bit
  2886                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2887                           ;	Background Debugger Enable bit
  2888                           ;	DEBUG = 0x1, unprogrammed default
  2889   300006                     	org	3145734
  2890   300006  81                 	db	129
  2891                           
  2892                           ; Padding undefined space
  2893   300007                     	org	3145735
  2894   300007  FF                 	db	255
  2895                           
  2896                           ;Config register CONFIG5L @ 0x300008
  2897                           ;	Code Protection bit
  2898                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2899                           ;	Code Protection bit
  2900                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2901                           ;	Code Protection bit
  2902                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2903                           ;	Code Protection bit
  2904                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2905   300008                     	org	3145736
  2906   300008  0F                 	db	15
  2907                           
  2908                           ;Config register CONFIG5H @ 0x300009
  2909                           ;	Boot Block Code Protection bit
  2910                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2911                           ;	Data EEPROM Code Protection bit
  2912                           ;	CPD = OFF, Data EEPROM not code-protected
  2913   300009                     	org	3145737
  2914   300009  C0                 	db	192
  2915                           
  2916                           ;Config register CONFIG6L @ 0x30000A
  2917                           ;	Write Protection bit
  2918                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2919                           ;	Write Protection bit
  2920                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2921                           ;	Write Protection bit
  2922                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2923                           ;	Write Protection bit
  2924                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2925   30000A                     	org	3145738
  2926   30000A  0F                 	db	15
  2927                           
  2928                           ;Config register CONFIG6H @ 0x30000B
  2929                           ;	Configuration Register Write Protection bit
  2930                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2931                           ;	Boot Block Write Protection bit
  2932                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2933                           ;	Data EEPROM Write Protection bit
  2934                           ;	WRTD = OFF, Data EEPROM not write-protected
  2935   30000B                     	org	3145739
  2936   30000B  E0                 	db	224
  2937                           
  2938                           ;Config register CONFIG7L @ 0x30000C
  2939                           ;	Table Read Protection bit
  2940                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2941                           ;	Table Read Protection bit
  2942                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2943                           ;	Table Read Protection bit
  2944                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2945                           ;	Table Read Protection bit
  2946                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2947   30000C                     	org	3145740
  2948   30000C  0F                 	db	15
  2949                           
  2950                           ;Config register CONFIG7H @ 0x30000D
  2951                           ;	Boot Block Table Read Protection bit
  2952                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2953   30000D                     	org	3145741
  2954   30000D  40                 	db	64
  2955                           tosu	equ	0xFFF
  2956                           tosh	equ	0xFFE
  2957                           tosl	equ	0xFFD
  2958                           stkptr	equ	0xFFC
  2959                           pclatu	equ	0xFFB
  2960                           pclath	equ	0xFFA
  2961                           pcl	equ	0xFF9
  2962                           tblptru	equ	0xFF8
  2963                           tblptrh	equ	0xFF7
  2964                           tblptrl	equ	0xFF6
  2965                           tablat	equ	0xFF5
  2966                           prodh	equ	0xFF4
  2967                           prodl	equ	0xFF3
  2968                           indf0	equ	0xFEF
  2969                           postinc0	equ	0xFEE
  2970                           postdec0	equ	0xFED
  2971                           preinc0	equ	0xFEC
  2972                           plusw0	equ	0xFEB
  2973                           fsr0h	equ	0xFEA
  2974                           fsr0l	equ	0xFE9
  2975                           wreg	equ	0xFE8
  2976                           indf1	equ	0xFE7
  2977                           postinc1	equ	0xFE6
  2978                           postdec1	equ	0xFE5
  2979                           preinc1	equ	0xFE4
  2980                           plusw1	equ	0xFE3
  2981                           fsr1h	equ	0xFE2
  2982                           fsr1l	equ	0xFE1
  2983                           bsr	equ	0xFE0
  2984                           indf2	equ	0xFDF
  2985                           postinc2	equ	0xFDE
  2986                           postdec2	equ	0xFDD
  2987                           preinc2	equ	0xFDC
  2988                           plusw2	equ	0xFDB
  2989                           fsr2h	equ	0xFDA
  2990                           fsr2l	equ	0xFD9
  2991                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     37      96
    BANK0           128    115     115
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    GetString@str	PTR unsigned char  size(1) Largest target is 100
		 -> main@str(BANK0[100]), 

    keyboard_input@str	PTR unsigned char  size(1) Largest target is 100
		 -> main@str(BANK0[100]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[5]), STR_4(CODE[5]), 
		 -> STR_5(CODE[5]), STR_6(CODE[5]), STR_7(CODE[5]), 

    S1388$buffer	PTR unsigned char  size(2) Largest target is 0

    S1388$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strcpy	PTR unsigned char  size(1) Largest target is 100
		 -> main@str(BANK0[100]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 100
		 -> main@str(BANK0[100]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 100
		 -> main@str(BANK0[100]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 100
		 -> buffer(BANK1[100]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[5]), STR_4(CODE[5]), 
		 -> STR_5(CODE[5]), STR_6(CODE[5]), STR_7(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[5]), STR_4(CODE[5]), 
		 -> STR_5(CODE[5]), STR_6(CODE[5]), STR_7(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    _H_ISR->_variable_register_changed
    _variable_register_changed->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->i2_putch

Critical Paths under _main in BANK0

    _main->_GetString
    _GetString->_strcpy

Critical Paths under _Lo_ISR in BANK0

    _Lo_ISR->_MyusartRead
    _MyusartRead->_putch

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               100   100      0     384
                                             15 BANK0    100   100      0
                          _GetString
                         _Initialize
                     _keyboard_input
 ---------------------------------------------------------------------------------
 (1) _keyboard_input                                       2     1      1      34
                                              8 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            3     1      2     273
                                             12 BANK0      3     1      2
                        _ClearBuffer
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     1      3     109
                                              8 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      99
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     268
                                              3 BANK0      5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          2     2      0     268
                                              1 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     141
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _H_ISR                                               14    14      0    1611
                                             23 COMRAM    14    14      0
                     _button_pressed
          _variable_register_changed
 ---------------------------------------------------------------------------------
 (7) _variable_register_changed                            2     0      2    1588
                                             21 COMRAM     2     0      2
                            ___awdiv
                            ___awmod
                             _printf
                 _set_LED_separately
                      i2_ClearBuffer
 ---------------------------------------------------------------------------------
 (8) i2_ClearBuffer                                        2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) _set_LED_separately                                   8     2      6      87
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (8) _printf                                               4     3      1     631
                                             19 COMRAM     2     1      1
                           _vfprintf
 ---------------------------------------------------------------------------------
 (9) _vfprintf                                             5     1      4     572
                                             14 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (10) _vfpfcnvrt                                           8     4      4     450
                                             10 COMRAM     4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (11) _fputc                                               9     5      4     315
                                              1 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (12) i2_putch                                             1     1      0      87
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _button_pressed                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetString
     _ClearBuffer
     _strcpy
   _Initialize
   _keyboard_input

 _Lo_ISR (ROOT)
   _MyusartRead
     _putch

 _H_ISR (ROOT)
   _button_pressed
   _variable_register_changed
     ___awdiv
     ___awmod
     _printf
       _vfprintf
         _vfpfcnvrt
           _fputc
             i2_putch
     _set_LED_separately
     i2_ClearBuffer

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     100     39.1%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128    115     115     89.8%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     37      96     76.2%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRlh         10      0       0      0.0%
BITBIGSFRll          9      0       0      0.0%
BITBIGSFRh           7      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     310      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 02 20:32:56 2025

                                _x 0025                                 l97 0F7C  
                               _a0 0035                                 _a1 0033  
                               _a2 0031                                 _a3 002F  
                               _a4 002D                                 _a5 002B  
                               _a6 0029                                 _a7 0027  
                     ___awdiv@sign 0041                                 bsr 0FE0  
                              l105 0D7A                                l201 108C  
                              l116 0D10                                l947 102A  
                              _PR2 0FCB                       ___awmod@sign 0041  
                              wreg 0FE8                   ??_button_pressed 003C  
                             l2101 0CE4                               l2023 0F46  
                             l2031 0FFC                               l2111 0CEE  
                             l2103 0CE6                               l2025 0F54  
                             l2017 0F3C                               l2033 1000  
                             l2121 0CF8                               l2113 0CF0  
                             l2105 0CE8                               l2027 0F58  
                             l2051 0D30                               l2131 0D04  
                             l2123 0CFC                               l2115 0CF2  
                             l2107 0CEA                               l2029 0F74  
                             l2053 0D44                               l2141 0D0E  
                             l2133 0D06                               l2125 0CFE  
                             l2117 0CF4                               l2109 0CEC  
                             l2055 0D56                               l2063 0D68  
                             l2135 0D08                               l2127 0D00  
                             l2119 0CF6                               l2071 0C96  
                             l2143 1074                               l2065 0D72  
                             l2057 0D5A                               l2049 0D12  
                             l2137 0D0A                               l2129 0D02  
                             l2081 0CB8                               l2073 0CA4  
                             l2161 0F24                               l2139 0D0C  
                             l2091 0CDA                               l2083 0CCA  
                             l2075 0CA6                               l2163 0F32  
                             l2155 0EFA                               l2093 0CDC  
                             l2085 0CCC                               l2077 0CB4  
                             l2069 0C8E                               l2157 0EFE  
                             l2095 0CDE                               l2087 0CD0  
                             l2079 0CB6                               l2159 0F1C  
                             l2097 0CE0                               l2089 0CD4  
                             l2099 0CE2                               STR_1 061A  
                             STR_2 0615                               STR_3 0610  
                             STR_4 0601                               STR_5 0606  
                             STR_6 060B                               STR_7 061A  
                             _CREN 7D5C                               u1200 0D30  
                             u1201 0D2C                               u1230 0F1C  
                             u1231 0F18                               u1160 0F74  
                             u1240 0F32                               u1161 0F70  
                             u1241 0F2E                               u1170 102A  
                             u1171 1026                               _LATA 0F89  
                             _LATC 0F8B                               _RCIF 7CF5  
                             i1l82 0DA6                               i1l91 0DDC  
                             i1l92 0DE0                               i1l85 0DB8  
                             i1l89 0DCE                               i2l82 0E6E  
                             i2l91 0EA4                               i2l92 0EA8  
                             i2l85 0E80                               i2l89 0E96  
                             i2l97 0FBC                               _dbuf 0001  
                             _main 0EFA                               _prec 0023  
                             fsr1h 0FE2                               fsr2h 0FDA  
                             indf1 0FE7                               indf2 0FDF  
                             fsr1l 0FE1                               fsr2l 0FD9  
                             btemp 0061                               prodh 0FF4  
                             prodl 0FF3                               start 006C  
                  __end_ofi2_putch 0EAA                    MyusartRead@data 0082  
                     ___param_bank 0000         ?_variable_register_changed 0051  
                            ?_main 003C                    __end_of___awdiv 0B28  
                  __end_of___awmod 0C8E                    ___awdiv@divisor 003E  
                            i1l101 0EF8                              i1l113 0054  
                            i2l125 1072                              i2l154 0BB4  
                            i2l157 10A8                              i2l445 0B26  
                            i2l198 099A                              i2l458 0C8C  
                            i2l921 0FFA                              i2l915 0E46  
                            i2l933 0A64                              i2l892 10A6  
                  ___awdiv@counter 0040                              _RCREG 0FAE  
                     vfpfcnvrt@fmt 0048                              _H_ISR 0008  
                            _SPBRG 0FAF                              _TRISA 0F92  
                            _TRISB 0F93                              _TRISC 0F94  
                            _TXREG 0FAD                              _flags 003B  
                            _fputc 099C                              _width 0021  
                            _putch 0D7C                        _ClearBuffer 0F3C  
                            tablat 0FF5                              ttemp5 0062  
                            ttemp6 0065                              ttemp7 0069  
                            status 0FD8                              wtemp8 0062  
                  __initialization 102C                       __end_of_main 0F3C  
                       _Initialize 0C8E                             ??_main 008F  
                    __activetblptr 0001                             ?_H_ISR 003C  
                           ?_fputc 003D                             _ADRESH 0FC4  
                           _ADRESL 0FC3                             _CCPR1L 0FBE  
                 ___awdiv@dividend 003C                             ?_putch 003C  
                           i1l2011 0D94                             i1l2013 0DB4  
                           i1l2015 0DC6                             i1l2009 0D80  
                           i1l2043 0EDE                             i1l2035 0EAA  
                           i1l2045 0EEE                             i1l2037 0EAE  
                           i1l2047 0EF2                             i1l2039 0EC8  
                           i1l2151 0050                             i1l2145 002E  
                           i1l2147 003C                             i1l2149 004A  
                           i2l1501 0E7C                             i2l1503 0E8E  
                           i2l1511 09CA                             i2l1601 0ABE  
                           i2l1513 09E8                             i2l1505 099C  
                           i2l1521 0E00                             i2l1611 0AF8  
                           i2l1603 0AC6                             i2l1515 0A1E  
                           i2l1507 09AE                             i2l1523 0E08  
                           i2l1531 0E24                             i2l1621 0B1E  
                           i2l1613 0AFA                             i2l1605 0AD4  
                           i2l1509 09C0                             i2l1525 0E14  
                           i2l1541 0FDA                             i2l1615 0B00  
                           i2l1607 0ADA                             i2l1631 0BF8  
                           i2l1527 0E18                             i2l1519 0DE2  
                           i2l1543 0FF2                             i2l1609 0AF0  
                           i2l1617 0B06                             i2l1641 0C2C  
                           i2l1633 0BFC                             i2l1625 0BE0  
                           i2l1537 0FBE                             i2l1801 06C0  
                           i2l1619 0B16                             i2l1651 0C66  
                           i2l1643 0C34                             i2l1635 0C0A  
                           i2l1627 0BE2                             i2l1539 0FC6  
                           i2l1811 06E8                             i2l1803 06C8  
                           i2l1581 0A66                             i2l1645 0C42  
                           i2l1653 0C6C                             i2l1637 0C12  
                           i2l1629 0BF0                             i2l1573 1056  
                           i2l1661 0F7E                             i2l1901 0872  
                           i2l1821 0738                             i2l1805 06D0  
                           i2l1813 06F0                             i2l1591 0A90  
                           i2l1583 0A68                             i2l1655 0C7C  
                           i2l1647 0C58                             i2l1639 0C24  
                           i2l1575 108E                             i2l1671 0F98  
                           i2l1903 087A                             i2l1823 0740  
                           i2l1815 0702                             i2l1807 06D8  
                           i2l1593 0A98                             i2l1585 0A76  
                           i2l1657 0C84                             i2l1649 0C60  
                           i2l1497 0E4A                             i2l1577 1092  
                           i2l1673 0FB4                             i2l1921 08C6  
                           i2l1905 0882                             i2l1841 0760  
                           i2l1817 071E                             i2l1809 06E0  
                           i2l1595 0A9C                             i2l1587 0A7E  
                           i2l1499 0E5C                             i2l1667 0F86  
                           i2l1931 08F8                             i2l1923 08D8  
                           i2l1907 088A                             i2l1851 07A6  
                           i2l1843 077C                             i2l1819 0730  
                           i2l1597 0AA4                             i2l1589 0A82  
                           i2l1669 0F94                             i2l1933 0900  
                           i2l1925 08E0                             i2l1917 0896  
                           i2l1845 078E                             i2l1599 0AB6  
                           i2l1951 095E                             i2l1935 0908  
                           i2l1927 08E8                             i2l1919 08AA  
                           i2l1943 0914                             i2l1871 07F4  
                           i2l1847 0796                             i2l1839 074C  
                           i2l1791 068E                             i2l1783 0620  
                           i2l1961 0986                             i2l1953 0966  
                           i2l1945 0928                             i2l1929 08F0  
                           i2l1873 07FC                             i2l1849 079E  
                           i2l1865 07B2                             i2l1793 06A0  
                           i2l1785 063C                             i2l1963 098E  
                           i2l1955 096E                             i2l1947 0944  
                           i2l1875 0804                             i2l1867 07C6  
                           i2l1891 0820                             i2l1795 06A8  
                           i2l1787 0644                             i2l1957 0976  
                           i2l1949 0956                             i2l1893 0834  
                           i2l1877 080C                             i2l1869 07E2  
                           i2l1797 06B0                             i2l1789 0672  
                           i2l1981 0B52                             i2l1959 097E  
                           i2l1895 0850                             i2l1879 0814  
                           i2l1799 06B8                             i2l1983 0B60  
                           i2l1991 0B90                             i2l1897 0862  
                           i2l1993 0B9E                             i2l1985 0B72  
                           i2l1899 086A                             i2l1995 0BA2  
                           i2l1987 0B7E                             i2l1997 0BB2  
                           i2l1989 0B80                          ??i2_putch 003C  
                           _Lo_ISR 0018                       vfprintf@cfmt 004E  
                        ??___awdiv 0040                          ??___awmod 0040  
              _current_servo_angle 0037                             _buffer 0100  
                keyboard_input@str 0088                             clear_0 1032  
                           clear_1 103E                   ___awdiv@quotient 0042  
                  ___awmod@divisor 003E                             isa$std 0001  
                  ___awmod@counter 0040                             _printf 108E  
                           _strcpy 0FFC                             fputc@c 003D  
                     __mediumconst 0000                             tblptrh 0FF7  
                           tblptrl 0FF6                             tblptru 0FF8  
                 __end_of_vfprintf 0FFC              __end_ofi2_ClearBuffer 0FBE  
                       __accesstop 0080            __end_of__initialization 1044  
                    ___rparam_used 0001                      __end_of_H_ISR 0BE0  
                __end_of_GetString 0D7C                     __pcstackCOMRAM 003C  
       __end_of_set_LED_separately 1074                      __end_of_fputc 0A66  
                      ?_Initialize 003C                      __end_of_putch 0DE2  
                          ??_H_ISR 0053                        i2putch@data 003C  
                    ??_MyusartRead 0081                            ??_fputc 0041  
                          ??_putch 0080                         __pbssBANK1 0100  
                          ?_Lo_ISR 003C        ??_variable_register_changed 0053  
                          ?_printf 004F                            ?_strcpy 0088  
                          i2u60_40 0E8E                            i2u60_41 0E8A  
                          i2u61_40 0EA4                            i2u61_41 0EA0  
                          i2u62_40 09AE                            i2u62_41 09AA  
                          i2u63_40 09C0                            i2u63_41 09BC  
                          i2u80_40 0B16                            i2u64_40 09E8  
                          i2u80_41 0B12                            i2u64_41 09E4  
                          i2u81_40 0BF0                            i2u57_40 0E5C  
                          i2u65_40 0A1E                            i2u81_41 0BEC  
                          i2u57_41 0E58                            i2u65_41 0A1A  
                          i2u82_40 0C0A                            i2u58_40 0E6E  
                          i2u66_40 0E00                            i2u82_41 0C06  
                          i2u58_41 0E6A                            i2u66_41 0DFC  
                          i2u75_40 0A76                            i2u83_40 0C24  
                          i2u59_40 0E7C                            i2u67_40 0FF2  
                          i2u91_40 0672                            i2u75_41 0A72  
                          i2u83_41 0C20                            i2u59_41 0E78  
                          i2u67_41 0FEE                            i2u91_41 066E  
                          i2u76_40 0A90                            i2u84_40 0C42  
                          i2u92_40 06A0                            i2u76_41 0A8C  
                          i2u84_41 0C3E                            i2u92_41 069C  
                          i2u77_40 0AB6                            i2u85_40 0C58  
                          i2u93_40 0702                            i2u77_41 0AB2  
                          i2u85_41 0C54                            i2u93_41 06FE  
                          i2u78_40 0AD4                            i2u86_40 0C7C  
                          i2u94_40 0730                            i2u78_41 0AD0  
                          i2u86_41 0C78                            i2u94_41 072C  
                          i2u79_40 0AF0                            i2u87_40 0FB4  
                          i2u95_40 0760                            i2u79_41 0AEC  
                          i2u87_41 0FB0                            i2u95_41 075C  
                          i2u96_40 078E                            i2u96_41 078A  
                          i2u97_40 07C6                            i2u97_41 07C2  
                          i2u98_40 07F4                            i2u98_41 07F0  
                          i2u99_40 0834                            i2u99_41 0830  
                     ?_ClearBuffer 003C                __end_of_MyusartRead 0EFA  
                          i2_putch 0E48                            __Hparam 0000  
                          __Lparam 0000                            ___awdiv 0A66  
                          ___awmod 0BE0                          ?_vfprintf 004A  
                     __psmallconst 0600                            __pcinit 102C  
                          __ramtop 0600                            __ptext0 0EFA  
                          __ptext1 1074                            __ptext2 0C8E  
                          __ptext3 0D12                            __ptext4 0FFC  
                          __ptext5 0F3C                            __ptext7 0EAA  
                          __ptext8 0D7C                          _T2CONbits 0FCA  
                 ___awmod@dividend 003C          _variable_register_changed 0620  
                          main@str 008F                     __pintcode_body 0B28  
             end_of_initialization 1044                            fputc@fp 003F  
                          int_func 0B28                  __end_of_vfpfcnvrt 0E48  
                        _RCSTAbits 0FAB                            postdec2 0FDD  
                          postinc0 0FEE                            postinc1 0FE6  
                          postinc2 0FDE                         ??_vfprintf 004E  
                          strcpy@d 008B                          _TRISAbits 0F92  
                        _TRISCbits 0F94                        _MyusartRead 0EAA  
                      _CCP1CONbits 0FBD                          _TXSTAbits 0FAC  
                   __end_of_Lo_ISR 006C                          _GetString 0D12  
                     ??_Initialize 0088                        vfpfcnvrt@ap 0049  
                      vfpfcnvrt@fp 0046                        _BAUDCONbits 0FB8  
              set_LED_separately@a 003C                set_LED_separately@b 003E  
              set_LED_separately@c 0040                     __end_of_printf 10A8  
                   __end_of_strcpy 102C                start_initialization 102C  
               _set_LED_separately 1056                       ClearBuffer@i 0088  
              ?_set_LED_separately 003C                 __end_of_Initialize 0D12  
                         ??_Lo_ISR 0083                        vfprintf@fmt 004C  
                       ?_GetString 008C               ??_set_LED_separately 0042  
                         ??_printf 0050                     _keyboard_input 1074  
                         ??_strcpy 008B                        __pbssCOMRAM 0001  
                    __pcstackBANK0 0080                           ?i2_putch 003C  
                   _button_pressed 10A8                          __pintcode 0008  
                         ?___awdiv 003C                           ?___awmod 003C  
           __end_of_keyboard_input 108E                        __pintcodelo 0018  
                       H_ISR@value 005F                        __smallconst 0600  
           __end_of_button_pressed 10AA                      i2_ClearBuffer 0F7E  
                         _IPR1bits 0F9F                           _PIE1bits 0F9D  
                         i1u111_20 0D94                           i1u111_21 0D90  
                         i1u112_20 0DA6                           i1u112_21 0DA2  
                         i1u113_20 0DB4                           i1u121_20 003C  
                         i1u113_21 0DB0                           i1u121_21 0038  
                         i1u114_20 0DC6                           i1u122_20 004A  
                         i1u114_21 0DC2                           i1u122_21 0046  
                         i1u115_20 0DDC                           i1u115_21 0DD8  
                         i1u118_20 0EC8                           i1u118_21 0EC4  
                         i1u119_20 0EDA                           i1u119_21 0ED6  
                         i2u100_40 0862                           i2u100_41 085E  
                         i2u101_40 08AA                           i2u101_41 08A6  
                         i2u102_40 08D8                           i2u102_41 08D4  
                         i2u103_40 0928                           i2u103_41 0924  
                         i2u104_40 0956                           i2u104_41 0952  
                         i2u107_40 0B60                           i2u107_41 0B5C  
                         i2u108_40 0B9E                           i2u108_41 0B9A  
                         i2u125_47 0B86                           i2u126_47 0BA8  
                         _PIR1bits 0F9E                        _buffer_size 0039  
__end_of_variable_register_changed 099C                           _RCONbits 0FD0  
                      ??_GetString 008E                    ?_keyboard_input 0088  
                        _vfpfcnvrt 0DE2                         _ADCON0bits 0FC2  
                       _ADCON1bits 0FC1                         _ADCON2bits 0FC0  
                     ?_MyusartRead 003C                     ?i2_ClearBuffer 003C  
                  ?_button_pressed 003C                     i2ClearBuffer@i 003C  
                         __Hrparam 0000                         vfprintf@ap 004D  
                         __Lrparam 0000                         vfprintf@fp 004A  
                     __Lsmallconst 0600                         ?_vfpfcnvrt 0046  
                         __ptext10 0620                           __ptext11 0F7E  
                         __ptext20 10A8                           __ptext12 1056  
                         __ptext13 108E                           __ptext14 0FBE  
                         __ptext15 0DE2                           __ptext16 099C  
                         __ptext17 0E48                           __ptext18 0BE0  
                         __ptext19 0A66                       GetString@str 008C  
                       strcpy@dest 0088     variable_register_changed@value 0051  
                         isa$xinst 0000                           int$flags 0061  
                         _vfprintf 0FBE                          printf@fmt 004F  
                        putch@data 0080                         _INTCONbits 0FF2  
                  ??i2_ClearBuffer 003C                      ??_ClearBuffer 0088  
                         intlevel1 0000                           intlevel2 0000  
                        strcpy@src 0089                         _OSCCONbits 0FD3  
                         printf@ap 0050                        ??_vfpfcnvrt 004A  
              __end_of_ClearBuffer 0F7E                   ??_keyboard_input 0089  
