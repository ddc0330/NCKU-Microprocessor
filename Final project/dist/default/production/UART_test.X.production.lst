

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Jan 12 16:54:47 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 25/07/2024 GMT
    21                           ; 
    22                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4520 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000FE0                     bsr             equ	4064
    55   000FE9                     fsr0            equ	4073
    56   000FEA                     fsr0h           equ	4074
    57   000FE9                     fsr0l           equ	4073
    58   000FE1                     fsr1            equ	4065
    59   000FE2                     fsr1h           equ	4066
    60   000FE1                     fsr1l           equ	4065
    61   000FD9                     fsr2            equ	4057
    62   000FDA                     fsr2h           equ	4058
    63   000FD9                     fsr2l           equ	4057
    64   000FEF                     indf0           equ	4079
    65   000FE7                     indf1           equ	4071
    66   000FDF                     indf2           equ	4063
    67   000FF2                     intcon          equ	4082
    68   000000                     nvmcon          equ	0
    69   000FF9                     pcl             equ	4089
    70   000FFA                     pclath          equ	4090
    71   000FFB                     pclatu          equ	4091
    72   000FEB                     plusw0          equ	4075
    73   000FE3                     plusw1          equ	4067
    74   000FDB                     plusw2          equ	4059
    75   000FED                     postdec0        equ	4077
    76   000FE5                     postdec1        equ	4069
    77   000FDD                     postdec2        equ	4061
    78   000FEE                     postinc0        equ	4078
    79   000FE6                     postinc1        equ	4070
    80   000FDE                     postinc2        equ	4062
    81   000FEC                     preinc0         equ	4076
    82   000FE4                     preinc1         equ	4068
    83   000FDC                     preinc2         equ	4060
    84   000FF3                     prod            equ	4083
    85   000FF4                     prodh           equ	4084
    86   000FF3                     prodl           equ	4083
    87   000FD8                     status          equ	4056
    88   000FF5                     tablat          equ	4085
    89   000FF6                     tblptr          equ	4086
    90   000FF7                     tblptrh         equ	4087
    91   000FF6                     tblptrl         equ	4086
    92   000FF8                     tblptru         equ	4088
    93   000FFD                     tosl            equ	4093
    94   000FE8                     wreg            equ	4072
    95   000F80                     PORTA           equ	3968	;# 
    96   000F81                     PORTB           equ	3969	;# 
    97   000F82                     PORTC           equ	3970	;# 
    98   000F83                     PORTD           equ	3971	;# 
    99   000F84                     PORTE           equ	3972	;# 
   100   000F89                     LATA            equ	3977	;# 
   101   000F8A                     LATB            equ	3978	;# 
   102   000F8B                     LATC            equ	3979	;# 
   103   000F8C                     LATD            equ	3980	;# 
   104   000F8D                     LATE            equ	3981	;# 
   105   000F92                     TRISA           equ	3986	;# 
   106   000F92                     DDRA            equ	3986	;# 
   107   000F93                     TRISB           equ	3987	;# 
   108   000F93                     DDRB            equ	3987	;# 
   109   000F94                     TRISC           equ	3988	;# 
   110   000F94                     DDRC            equ	3988	;# 
   111   000F95                     TRISD           equ	3989	;# 
   112   000F95                     DDRD            equ	3989	;# 
   113   000F96                     TRISE           equ	3990	;# 
   114   000F96                     DDRE            equ	3990	;# 
   115   000F9B                     OSCTUNE         equ	3995	;# 
   116   000F9D                     PIE1            equ	3997	;# 
   117   000F9E                     PIR1            equ	3998	;# 
   118   000F9F                     IPR1            equ	3999	;# 
   119   000FA0                     PIE2            equ	4000	;# 
   120   000FA1                     PIR2            equ	4001	;# 
   121   000FA2                     IPR2            equ	4002	;# 
   122   000FA6                     EECON1          equ	4006	;# 
   123   000FA7                     EECON2          equ	4007	;# 
   124   000FA8                     EEDATA          equ	4008	;# 
   125   000FA9                     EEADR           equ	4009	;# 
   126   000FAB                     RCSTA           equ	4011	;# 
   127   000FAB                     RCSTA1          equ	4011	;# 
   128   000FAC                     TXSTA           equ	4012	;# 
   129   000FAC                     TXSTA1          equ	4012	;# 
   130   000FAD                     TXREG           equ	4013	;# 
   131   000FAD                     TXREG1          equ	4013	;# 
   132   000FAE                     RCREG           equ	4014	;# 
   133   000FAE                     RCREG1          equ	4014	;# 
   134   000FAF                     SPBRG           equ	4015	;# 
   135   000FAF                     SPBRG1          equ	4015	;# 
   136   000FB0                     SPBRGH          equ	4016	;# 
   137   000FB1                     T3CON           equ	4017	;# 
   138   000FB2                     TMR3            equ	4018	;# 
   139   000FB2                     TMR3L           equ	4018	;# 
   140   000FB3                     TMR3H           equ	4019	;# 
   141   000FB4                     CMCON           equ	4020	;# 
   142   000FB5                     CVRCON          equ	4021	;# 
   143   000FB6                     ECCP1AS         equ	4022	;# 
   144   000FB6                     ECCPAS          equ	4022	;# 
   145   000FB7                     PWM1CON         equ	4023	;# 
   146   000FB7                     ECCP1DEL        equ	4023	;# 
   147   000FB8                     BAUDCON         equ	4024	;# 
   148   000FB8                     BAUDCTL         equ	4024	;# 
   149   000FBA                     CCP2CON         equ	4026	;# 
   150   000FBB                     CCPR2           equ	4027	;# 
   151   000FBB                     CCPR2L          equ	4027	;# 
   152   000FBC                     CCPR2H          equ	4028	;# 
   153   000FBD                     CCP1CON         equ	4029	;# 
   154   000FBE                     CCPR1           equ	4030	;# 
   155   000FBE                     CCPR1L          equ	4030	;# 
   156   000FBF                     CCPR1H          equ	4031	;# 
   157   000FC0                     ADCON2          equ	4032	;# 
   158   000FC1                     ADCON1          equ	4033	;# 
   159   000FC2                     ADCON0          equ	4034	;# 
   160   000FC3                     ADRES           equ	4035	;# 
   161   000FC3                     ADRESL          equ	4035	;# 
   162   000FC4                     ADRESH          equ	4036	;# 
   163   000FC5                     SSPCON2         equ	4037	;# 
   164   000FC6                     SSPCON1         equ	4038	;# 
   165   000FC7                     SSPSTAT         equ	4039	;# 
   166   000FC8                     SSPADD          equ	4040	;# 
   167   000FC9                     SSPBUF          equ	4041	;# 
   168   000FCA                     T2CON           equ	4042	;# 
   169   000FCB                     PR2             equ	4043	;# 
   170   000FCB                     MEMCON          equ	4043	;# 
   171   000FCC                     TMR2            equ	4044	;# 
   172   000FCD                     T1CON           equ	4045	;# 
   173   000FCE                     TMR1            equ	4046	;# 
   174   000FCE                     TMR1L           equ	4046	;# 
   175   000FCF                     TMR1H           equ	4047	;# 
   176   000FD0                     RCON            equ	4048	;# 
   177   000FD1                     WDTCON          equ	4049	;# 
   178   000FD2                     HLVDCON         equ	4050	;# 
   179   000FD2                     LVDCON          equ	4050	;# 
   180   000FD3                     OSCCON          equ	4051	;# 
   181   000FD5                     T0CON           equ	4053	;# 
   182   000FD6                     TMR0            equ	4054	;# 
   183   000FD6                     TMR0L           equ	4054	;# 
   184   000FD7                     TMR0H           equ	4055	;# 
   185   000FD8                     STATUS          equ	4056	;# 
   186   000FD9                     FSR2            equ	4057	;# 
   187   000FD9                     FSR2L           equ	4057	;# 
   188   000FDA                     FSR2H           equ	4058	;# 
   189   000FDB                     PLUSW2          equ	4059	;# 
   190   000FDC                     PREINC2         equ	4060	;# 
   191   000FDD                     POSTDEC2        equ	4061	;# 
   192   000FDE                     POSTINC2        equ	4062	;# 
   193   000FDF                     INDF2           equ	4063	;# 
   194   000FE0                     BSR             equ	4064	;# 
   195   000FE1                     FSR1            equ	4065	;# 
   196   000FE1                     FSR1L           equ	4065	;# 
   197   000FE2                     FSR1H           equ	4066	;# 
   198   000FE3                     PLUSW1          equ	4067	;# 
   199   000FE4                     PREINC1         equ	4068	;# 
   200   000FE5                     POSTDEC1        equ	4069	;# 
   201   000FE6                     POSTINC1        equ	4070	;# 
   202   000FE7                     INDF1           equ	4071	;# 
   203   000FE8                     WREG            equ	4072	;# 
   204   000FE9                     FSR0            equ	4073	;# 
   205   000FE9                     FSR0L           equ	4073	;# 
   206   000FEA                     FSR0H           equ	4074	;# 
   207   000FEB                     PLUSW0          equ	4075	;# 
   208   000FEC                     PREINC0         equ	4076	;# 
   209   000FED                     POSTDEC0        equ	4077	;# 
   210   000FEE                     POSTINC0        equ	4078	;# 
   211   000FEF                     INDF0           equ	4079	;# 
   212   000FF0                     INTCON3         equ	4080	;# 
   213   000FF1                     INTCON2         equ	4081	;# 
   214   000FF2                     INTCON          equ	4082	;# 
   215   000FF3                     PROD            equ	4083	;# 
   216   000FF3                     PRODL           equ	4083	;# 
   217   000FF4                     PRODH           equ	4084	;# 
   218   000FF5                     TABLAT          equ	4085	;# 
   219   000FF6                     TBLPTR          equ	4086	;# 
   220   000FF6                     TBLPTRL         equ	4086	;# 
   221   000FF7                     TBLPTRH         equ	4087	;# 
   222   000FF8                     TBLPTRU         equ	4088	;# 
   223   000FF9                     PCLAT           equ	4089	;# 
   224   000FF9                     PC              equ	4089	;# 
   225   000FF9                     PCL             equ	4089	;# 
   226   000FFA                     PCLATH          equ	4090	;# 
   227   000FFB                     PCLATU          equ	4091	;# 
   228   000FFC                     STKPTR          equ	4092	;# 
   229   000FFD                     TOS             equ	4093	;# 
   230   000FFD                     TOSL            equ	4093	;# 
   231   000FFE                     TOSH            equ	4094	;# 
   232   000FFF                     TOSU            equ	4095	;# 
   233   000FD0                     _RCONbits       set	4048
   234   000FF2                     _INTCONbits     set	4082
   235   000F9E                     _PIR1bits       set	3998
   236   000F9D                     _PIE1bits       set	3997
   237   000FBB                     _CCPR2L         set	4027
   238   000FBE                     _CCPR1L         set	4030
   239   000FCB                     _PR2            set	4043
   240   000FCA                     _T2CON          set	4042
   241   000FBA                     _CCP2CONbits    set	4026
   242   000FBD                     _CCP1CONbits    set	4029
   243   000FCA                     _T2CONbits      set	4042
   244   000FC0                     _ADCON2bits     set	4032
   245   000FC2                     _ADCON0bits     set	4034
   246   000FC1                     _ADCON1bits     set	4033
   247   000F8C                     _LATD           set	3980
   248   000F95                     _TRISDbits      set	3989
   249   000F8B                     _LATC           set	3979
   250   000F93                     _TRISBbits      set	3987
   251   000F94                     _TRISCbits      set	3988
   252   000F92                     _TRISAbits      set	3986
   253   000FD3                     _OSCCONbits     set	4051
   254                           
   255                           ; #config settings
   256                           
   257                           	psect	cinit
   258   000746                     __pcinit:
   259                           	callstack 0
   260   000746                     start_initialization:
   261                           	callstack 0
   262   000746                     __initialization:
   263                           	callstack 0
   264                           
   265                           ; Clear objects allocated to COMRAM (10 bytes)
   266   000746  EE00  F001         	lfsr	0,__pbssCOMRAM
   267   00074A  0E0A               	movlw	10
   268   00074C                     clear_0:
   269   00074C  6AEE               	clrf	postinc0,c
   270   00074E  06E8               	decf	wreg,f,c
   271   000750  E1FD               	bnz	clear_0
   272   000752                     end_of_initialization:
   273                           	callstack 0
   274   000752                     __end_of__initialization:
   275                           	callstack 0
   276   000752  9010               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   277   000754  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   278   000756  0100               	movlb	0
   279   000758  EF01  F003         	goto	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMRAM
   282   000001                     __pbssCOMRAM:
   283                           	callstack 0
   284   000001                     _distance_y:
   285                           	callstack 0
   286   000001                     	ds	2
   287   000003                     _distance_x:
   288                           	callstack 0
   289   000003                     	ds	2
   290   000005                     _prey:
   291                           	callstack 0
   292   000005                     	ds	2
   293   000007                     _prex:
   294                           	callstack 0
   295   000007                     	ds	2
   296   000009                     _i:
   297                           	callstack 0
   298   000009                     	ds	2
   299                           
   300                           	psect	cstackCOMRAM
   301   00000B                     __pcstackCOMRAM:
   302                           	callstack 0
   303   00000B                     setServoPosition1@dutyCycle:
   304                           	callstack 0
   305   00000B                     setServoPosition2@dutyCycle:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x0
   309   00000B                     	ds	2
   310   00000D                     ??_setServoPosition1:
   311   00000D                     ??_setServoPosition2:
   312                           
   313                           ; 1 bytes @ 0x2
   314   00000D                     	ds	2
   315   00000F                     ??_ISR:
   316                           
   317                           ; 1 bytes @ 0x4
   318   00000F                     	ds	1
   319   000010                     
   320                           ; 1 bytes @ 0x5
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 18 in file "test1.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   340 ;;      Params:         0       0       0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0       0       0
   343 ;;      Totals:         0       0       0       0       0       0       0
   344 ;;Total ram usage:        0 bytes
   345 ;; Hardware stack levels required when called: 2
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		Startup code after reset
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           	psect	text0
   354   000602                     __ptext0:
   355                           	callstack 0
   356   000602                     _main:
   357                           	callstack 29
   358   000602                     
   359                           ;test1.c: 21:     ADCON0bits.CHS = 0b0000;
   360   000602  50D3               	movf	211,w,c	;volatile
   361   000604  0B8F               	andlw	-113
   362   000606  0910               	iorlw	16
   363   000608  6ED3               	movwf	211,c	;volatile
   364   00060A                     
   365                           ;test1.c: 24:     ADCON2bits.ADCS = 0b010;
   366   00060A  8092               	bsf	146,0,c	;volatile
   367   00060C                     
   368                           ;test1.c: 25:     ADCON2bits.ACQT = 0b001;
   369   00060C  8292               	bsf	146,1,c	;volatile
   370   00060E                     
   371                           ;test1.c: 26:     ADCON0bits.ADON = 1;
   372   00060E  9494               	bcf	148,2,c	;volatile
   373   000610                     
   374                           ;test1.c: 27:     ADCON2bits.ADFM = 1;
   375   000610  9294               	bcf	148,1,c	;volatile
   376   000612                     
   377                           ;test1.c: 28:     ADCON0bits.GO = 1;
   378   000612  8093               	bsf	147,0,c	;volatile
   379   000614                     
   380                           ;test1.c: 29: 
   381   000614  6A8B               	clrf	139,c	;volatile
   382   000616                     
   383                           ;test1.c: 30: 
   384   000616  9095               	bcf	149,0,c	;volatile
   385   000618                     
   386                           ;test1.c: 31:     T2CONbits.TMR2ON = 1;
   387   000618  6A8C               	clrf	140,c	;volatile
   388                           
   389                           ;test1.c: 33:     CCP1CONbits.CCP1M = 0b1100;
   390   00061A  50C1               	movf	193,w,c	;volatile
   391   00061C  0BF0               	andlw	-16
   392   00061E  090D               	iorlw	13
   393   000620  6EC1               	movwf	193,c	;volatile
   394                           
   395                           ;test1.c: 34:     CCP2CONbits.CCP2M = 0b1100;
   396   000622  0EC3               	movlw	-61
   397   000624  16C2               	andwf	194,f,c	;volatile
   398   000626                     
   399                           ;test1.c: 35:     T2CON = 0b00000101;
   400   000626  98C1               	bcf	193,4,c	;volatile
   401   000628                     
   402                           ;test1.c: 36:     PR2 = 0x9B;
   403   000628  9AC1               	bcf	193,5,c	;volatile
   404                           
   405                           ;test1.c: 37:     CCPR1L = 0;
   406   00062A  50C0               	movf	192,w,c	;volatile
   407   00062C  0BF8               	andlw	-8
   408   00062E  0902               	iorlw	2
   409   000630  6EC0               	movwf	192,c	;volatile
   410                           
   411                           ;test1.c: 38:     CCPR2L = 0;
   412   000632  50C0               	movf	192,w,c	;volatile
   413   000634  0BC7               	andlw	-57
   414   000636  0908               	iorlw	8
   415   000638  6EC0               	movwf	192,c	;volatile
   416   00063A                     
   417                           ;test1.c: 39: 
   418   00063A  80C2               	bsf	194,0,c	;volatile
   419   00063C                     
   420                           ;test1.c: 40: 
   421   00063C  8EC0               	bsf	192,7,c	;volatile
   422   00063E                     
   423                           ;test1.c: 41:     PIE1bits.ADIE = 1;
   424   00063E  82C2               	bsf	194,1,c	;volatile
   425   000640                     
   426                           ;test1.c: 44:     INTCONbits.PEIE = 1;
   427   000640  84CA               	bsf	202,2,c	;volatile
   428                           
   429                           ;test1.c: 45:     INTCONbits.INT0IE = 1;
   430   000642  50CA               	movf	202,w,c	;volatile
   431   000644  0BFC               	andlw	-4
   432   000646  0901               	iorlw	1
   433   000648  6ECA               	movwf	202,c	;volatile
   434                           
   435                           ;test1.c: 46:     INTCONbits.INT0IF = 0;
   436   00064A  50BD               	movf	189,w,c	;volatile
   437   00064C  0BF0               	andlw	-16
   438   00064E  090C               	iorlw	12
   439   000650  6EBD               	movwf	189,c	;volatile
   440                           
   441                           ;test1.c: 47:     RCONbits.IPEN = 1;
   442   000652  50BA               	movf	186,w,c	;volatile
   443   000654  0BF0               	andlw	-16
   444   000656  090C               	iorlw	12
   445   000658  6EBA               	movwf	186,c	;volatile
   446                           
   447                           ;test1.c: 48:     INTCONbits.GIEH = 1;
   448   00065A  0E05               	movlw	5
   449   00065C  6ECA               	movwf	202,c	;volatile
   450                           
   451                           ;test1.c: 49:     INTCONbits.GIEL = 1;
   452   00065E  0E9B               	movlw	155
   453   000660  6ECB               	movwf	203,c	;volatile
   454   000662                     
   455                           ;test1.c: 50: 
   456   000662  6ABE               	clrf	190,c	;volatile
   457   000664                     
   458                           ;test1.c: 51: 
   459   000664  6ABB               	clrf	187,c	;volatile
   460   000666                     
   461                           ;test1.c: 54:     }
   462   000666  8C9D               	bsf	157,6,c	;volatile
   463   000668                     
   464                           ;test1.c: 55: }
   465   000668  9C9E               	bcf	158,6,c	;volatile
   466   00066A                     
   467                           ;test1.c: 56: 
   468   00066A  8EF2               	bsf	242,7,c	;volatile
   469   00066C                     
   470                           ;test1.c: 57: void setServoPosition1(unsigned int dutyCycle)
   471   00066C  8CF2               	bsf	242,6,c	;volatile
   472   00066E                     
   473                           ;test1.c: 58: {
   474   00066E  88F2               	bsf	242,4,c	;volatile
   475   000670                     
   476                           ;test1.c: 59:     CCPR1L = dutyCycle >> 2;
   477   000670  92F2               	bcf	242,1,c	;volatile
   478   000672                     
   479                           ;test1.c: 60:     CCP1CONbits.DC1B = dutyCycle & 0x03;
   480   000672  8ED0               	bsf	208,7,c	;volatile
   481   000674                     
   482                           ;test1.c: 61: }
   483   000674  8EF2               	bsf	242,7,c	;volatile
   484   000676                     
   485                           ;test1.c: 62: void setServoPosition2(unsigned int dutyCycle)
   486   000676  8CF2               	bsf	242,6,c	;volatile
   487   000678                     l807:
   488                           
   489                           ;test1.c: 66: }
   490   000678  B2C2               	btfsc	194,1,c	;volatile
   491   00067A  EF41  F003         	goto	u11
   492   00067E  EF43  F003         	goto	u10
   493   000682                     u11:
   494   000682  EF3C  F003         	goto	l807
   495   000686                     u10:
   496   000686  82C2               	bsf	194,1,c	;volatile
   497   000688  EF3C  F003         	goto	l807
   498   00068C  EF07  F000         	goto	start
   499   000690                     __end_of_main:
   500                           	callstack 0
   501                           
   502 ;; *************** function _ISR *****************
   503 ;; Defined at:
   504 ;;		line 82 in file "test1.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   518 ;;      Params:         0       0       0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0       0       0
   520 ;;      Temps:          1       0       0       0       0       0       0
   521 ;;      Totals:         1       0       0       0       0       0       0
   522 ;;Total ram usage:        1 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; Hardware stack levels required when called: 1
   525 ;; This function calls:
   526 ;;		_setServoPosition1
   527 ;;		_setServoPosition2
   528 ;; This function is called by:
   529 ;;		Interrupt level 2
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	intcode
   534   000008                     __pintcode:
   535                           	callstack 0
   536   000008                     _ISR:
   537                           	callstack 29
   538                           
   539                           ;incstack = 0
   540   000008  8210               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   541   00000A  ED48  F003         	call	int_func,f	;refresh shadow registers
   542                           
   543                           	psect	intcode_body
   544   000690                     __pintcode_body:
   545                           	callstack 29
   546   000690                     int_func:
   547                           	callstack 29
   548   000690  0006               	pop		; remove dummy address from shadow register refresh
   549   000692                     
   550                           ;test1.c: 85: }
   551   000692  A2F2               	btfss	242,1,c	;volatile
   552   000694  EF4E  F003         	goto	i2u3_41
   553   000698  EF50  F003         	goto	i2u3_40
   554   00069C                     i2u3_41:
   555   00069C  EF73  F003         	goto	i2l75
   556   0006A0                     i2u3_40:
   557   0006A0  0E0D               	movlw	13
   558   0006A2  6E0F               	movwf	??_ISR^0,c
   559   0006A4  0E2B               	movlw	43
   560   0006A6                     i2u4_47:
   561   0006A6  2EE8               	decfsz	wreg,f,c
   562   0006A8  D7FE               	bra	i2u4_47
   563   0006AA  2E0F               	decfsz	??_ISR^0,f,c
   564   0006AC  D7FC               	bra	i2u4_47
   565   0006AE  D000               	nop2	
   566   0006B0  0E00               	movlw	0
   567   0006B2  6E0C               	movwf	(setServoPosition1@dutyCycle+1)^0,c
   568   0006B4  0E34               	movlw	52
   569   0006B6  6E0B               	movwf	setServoPosition1@dutyCycle^0,c
   570   0006B8  EC8C  F003         	call	_setServoPosition1	;wreg free
   571   0006BC  0ECB               	movlw	203
   572   0006BE  6E0F               	movwf	??_ISR^0,c
   573   0006C0  0EEB               	movlw	235
   574   0006C2                     i2u5_47:
   575   0006C2  2EE8               	decfsz	wreg,f,c
   576   0006C4  D7FE               	bra	i2u5_47
   577   0006C6  2E0F               	decfsz	??_ISR^0,f,c
   578   0006C8  D7FC               	bra	i2u5_47
   579   0006CA  0000               	nop	
   580   0006CC  0E00               	movlw	0
   581   0006CE  6E0C               	movwf	(setServoPosition1@dutyCycle+1)^0,c
   582   0006D0  0E2E               	movlw	46
   583   0006D2  6E0B               	movwf	setServoPosition1@dutyCycle^0,c
   584   0006D4  EC8C  F003         	call	_setServoPosition1	;wreg free
   585   0006D8  0E00               	movlw	0
   586   0006DA  6E0C               	movwf	(setServoPosition2@dutyCycle+1)^0,c
   587   0006DC  0E5A               	movlw	90
   588   0006DE  6E0B               	movwf	setServoPosition2@dutyCycle^0,c
   589   0006E0  EC75  F003         	call	_setServoPosition2	;wreg free
   590   0006E4  92F2               	bcf	242,1,c	;volatile
   591   0006E6                     i2l75:
   592   0006E6  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   593   0006E8  0011               	retfie		f
   594   0006EA                     __end_of_ISR:
   595                           	callstack 0
   596                           
   597 ;; *************** function _setServoPosition2 *****************
   598 ;; Defined at:
   599 ;;		line 75 in file "test1.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  dutyCycle       2    0[COMRAM] unsigned int 
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   613 ;;      Params:         2       0       0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0       0       0
   615 ;;      Temps:          2       0       0       0       0       0       0
   616 ;;      Totals:         4       0       0       0       0       0       0
   617 ;;Total ram usage:        4 bytes
   618 ;; Hardware stack levels used: 1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_ISR
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text2
   627   0006EA                     __ptext2:
   628                           	callstack 0
   629   0006EA                     _setServoPosition2:
   630                           	callstack 29
   631   0006EA                     
   632                           ;test1.c: 75:         _delay((unsigned long)((300)*(125000/4000.0)));;test1.c: 76: ;test
      +                          1.c: 77: 
   633   0006EA  C00B  F00D         	movff	setServoPosition2@dutyCycle,??_setServoPosition2
   634   0006EE  C00C  F00E         	movff	setServoPosition2@dutyCycle+1,??_setServoPosition2+1
   635   0006F2  90D8               	bcf	status,0,c
   636   0006F4  320E               	rrcf	(??_setServoPosition2+1)^0,f,c
   637   0006F6  320D               	rrcf	??_setServoPosition2^0,f,c
   638   0006F8  90D8               	bcf	status,0,c
   639   0006FA  320E               	rrcf	(??_setServoPosition2+1)^0,f,c
   640   0006FC  320D               	rrcf	??_setServoPosition2^0,f,c
   641   0006FE  500D               	movf	??_setServoPosition2^0,w,c
   642   000700  6EBB               	movwf	187,c	;volatile
   643                           
   644                           ;test1.c: 78:         setServoPosition1(52);
   645   000702  C00B  F00D         	movff	setServoPosition2@dutyCycle,??_setServoPosition2
   646   000706  0E03               	movlw	3
   647   000708  160D               	andwf	??_setServoPosition2^0,f,c
   648   00070A  3A0D               	swapf	??_setServoPosition2^0,f,c
   649   00070C  50BA               	movf	186,w,c	;volatile
   650   00070E  180D               	xorwf	??_setServoPosition2^0,w,c
   651   000710  0BCF               	andlw	-49
   652   000712  180D               	xorwf	??_setServoPosition2^0,w,c
   653   000714  6EBA               	movwf	186,c	;volatile
   654   000716  0012               	return		;funcret
   655   000718                     __end_of_setServoPosition2:
   656                           	callstack 0
   657                           
   658 ;; *************** function _setServoPosition1 *****************
   659 ;; Defined at:
   660 ;;		line 70 in file "test1.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  dutyCycle       2    0[COMRAM] unsigned int 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   674 ;;      Params:         2       0       0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0
   676 ;;      Temps:          2       0       0       0       0       0       0
   677 ;;      Totals:         4       0       0       0       0       0       0
   678 ;;Total ram usage:        4 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_ISR
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text3
   688   000718                     __ptext3:
   689                           	callstack 0
   690   000718                     _setServoPosition1:
   691                           	callstack 29
   692   000718                     
   693                           ;test1.c: 70: {;test1.c: 71: ;test1.c: 72:     if (INTCONbits.INT0IF)
   694   000718  C00B  F00D         	movff	setServoPosition1@dutyCycle,??_setServoPosition1
   695   00071C  C00C  F00E         	movff	setServoPosition1@dutyCycle+1,??_setServoPosition1+1
   696   000720  90D8               	bcf	status,0,c
   697   000722  320E               	rrcf	(??_setServoPosition1+1)^0,f,c
   698   000724  320D               	rrcf	??_setServoPosition1^0,f,c
   699   000726  90D8               	bcf	status,0,c
   700   000728  320E               	rrcf	(??_setServoPosition1+1)^0,f,c
   701   00072A  320D               	rrcf	??_setServoPosition1^0,f,c
   702   00072C  500D               	movf	??_setServoPosition1^0,w,c
   703   00072E  6EBE               	movwf	190,c	;volatile
   704                           
   705                           ;test1.c: 73:     {
   706   000730  C00B  F00D         	movff	setServoPosition1@dutyCycle,??_setServoPosition1
   707   000734  0E03               	movlw	3
   708   000736  160D               	andwf	??_setServoPosition1^0,f,c
   709   000738  3A0D               	swapf	??_setServoPosition1^0,f,c
   710   00073A  50BD               	movf	189,w,c	;volatile
   711   00073C  180D               	xorwf	??_setServoPosition1^0,w,c
   712   00073E  0BCF               	andlw	-49
   713   000740  180D               	xorwf	??_setServoPosition1^0,w,c
   714   000742  6EBD               	movwf	189,c	;volatile
   715   000744  0012               	return		;funcret
   716   000746                     __end_of_setServoPosition1:
   717                           	callstack 0
   718                           
   719                           	psect	smallconst
   720   000600                     __psmallconst:
   721                           	callstack 0
   722   000600  00                 	db	0
   723   000601  00                 	db	0	; dummy byte at the end
   724   000000                     __activetblptr  equ	0
   725                           
   726                           	psect	rparam
   727   000001                     ___rparam_used  equ	1
   728   000000                     ___param_bank   equ	0
   729   000000                     __Lparam        equ	__Lrparam
   730   000000                     __Hparam        equ	__Hrparam
   731                           
   732                           	psect	temp
   733   000010                     btemp:
   734                           	callstack 0
   735   000010                     	ds	1
   736   000010                     int$flags       set	btemp
   737   000011                     wtemp8          set	btemp+1
   738   000011                     ttemp5          set	btemp+1
   739   000014                     ttemp6          set	btemp+4
   740   000018                     ttemp7          set	btemp+8
   741                           
   742                           	psect	idloc
   743                           
   744                           ;Config register IDLOC0 @ 0x200000
   745                           ;	unspecified, using default values
   746   200000                     	org	2097152
   747   200000  FF                 	db	255
   748                           
   749                           ;Config register IDLOC1 @ 0x200001
   750                           ;	unspecified, using default values
   751   200001                     	org	2097153
   752   200001  FF                 	db	255
   753                           
   754                           ;Config register IDLOC2 @ 0x200002
   755                           ;	unspecified, using default values
   756   200002                     	org	2097154
   757   200002  FF                 	db	255
   758                           
   759                           ;Config register IDLOC3 @ 0x200003
   760                           ;	unspecified, using default values
   761   200003                     	org	2097155
   762   200003  FF                 	db	255
   763                           
   764                           ;Config register IDLOC4 @ 0x200004
   765                           ;	unspecified, using default values
   766   200004                     	org	2097156
   767   200004  FF                 	db	255
   768                           
   769                           ;Config register IDLOC5 @ 0x200005
   770                           ;	unspecified, using default values
   771   200005                     	org	2097157
   772   200005  FF                 	db	255
   773                           
   774                           ;Config register IDLOC6 @ 0x200006
   775                           ;	unspecified, using default values
   776   200006                     	org	2097158
   777   200006  FF                 	db	255
   778                           
   779                           ;Config register IDLOC7 @ 0x200007
   780                           ;	unspecified, using default values
   781   200007                     	org	2097159
   782   200007  FF                 	db	255
   783                           
   784                           	psect	config
   785                           
   786                           ; Padding undefined space
   787   300000                     	org	3145728
   788   300000  FF                 	db	255
   789                           
   790                           ;Config register CONFIG1H @ 0x300001
   791                           ;	Oscillator Selection bits
   792                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   793                           ;	Fail-Safe Clock Monitor Enable bit
   794                           ;	FCMEN = 0x0, unprogrammed default
   795                           ;	Internal/External Oscillator Switchover bit
   796                           ;	IESO = 0x0, unprogrammed default
   797   300001                     	org	3145729
   798   300001  08                 	db	8
   799                           
   800                           ;Config register CONFIG2L @ 0x300002
   801                           ;	Power-up Timer Enable bit
   802                           ;	PWRT = OFF, PWRT disabled
   803                           ;	Brown-out Reset Enable bits
   804                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
   805                           ;	Brown Out Reset Voltage bits
   806                           ;	BORV = 0x3, unprogrammed default
   807   300002                     	org	3145730
   808   300002  1B                 	db	27
   809                           
   810                           ;Config register CONFIG2H @ 0x300003
   811                           ;	Watchdog Timer Enable bit
   812                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   813                           ;	Watchdog Timer Postscale Select bits
   814                           ;	WDTPS = 0xF, unprogrammed default
   815   300003                     	org	3145731
   816   300003  1E                 	db	30
   817                           
   818                           ; Padding undefined space
   819   300004                     	org	3145732
   820   300004  FF                 	db	255
   821                           
   822                           ;Config register CONFIG3H @ 0x300005
   823                           ;	CCP2 MUX bit
   824                           ;	CCP2MX = 0x1, unprogrammed default
   825                           ;	PORTB A/D Enable bit
   826                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   827                           ;	Low-Power Timer1 Oscillator Enable bit
   828                           ;	LPT1OSC = 0x0, unprogrammed default
   829                           ;	MCLR Pin Enable bit
   830                           ;	MCLRE = 0x1, unprogrammed default
   831   300005                     	org	3145733
   832   300005  81                 	db	129
   833                           
   834                           ;Config register CONFIG4L @ 0x300006
   835                           ;	Stack Full/Underflow Reset Enable bit
   836                           ;	STVREN = 0x1, unprogrammed default
   837                           ;	Single-Supply ICSP Enable bit
   838                           ;	LVP = OFF, Single-Supply ICSP disabled
   839                           ;	Extended Instruction Set Enable bit
   840                           ;	XINST = 0x0, unprogrammed default
   841                           ;	Background Debugger Enable bit
   842                           ;	DEBUG = 0x1, unprogrammed default
   843   300006                     	org	3145734
   844   300006  81                 	db	129
   845                           
   846                           ; Padding undefined space
   847   300007                     	org	3145735
   848   300007  FF                 	db	255
   849                           
   850                           ;Config register CONFIG5L @ 0x300008
   851                           ;	unspecified, using default values
   852                           ;	Code Protection bit
   853                           ;	CP0 = 0x1, unprogrammed default
   854                           ;	Code Protection bit
   855                           ;	CP1 = 0x1, unprogrammed default
   856                           ;	Code Protection bit
   857                           ;	CP2 = 0x1, unprogrammed default
   858                           ;	Code Protection bit
   859                           ;	CP3 = 0x1, unprogrammed default
   860   300008                     	org	3145736
   861   300008  0F                 	db	15
   862                           
   863                           ;Config register CONFIG5H @ 0x300009
   864                           ;	Boot Block Code Protection bit
   865                           ;	CPB = 0x1, unprogrammed default
   866                           ;	Data EEPROM Code Protection bit
   867                           ;	CPD = OFF, Data EEPROM not code-protected
   868   300009                     	org	3145737
   869   300009  C0                 	db	192
   870                           
   871                           ;Config register CONFIG6L @ 0x30000A
   872                           ;	unspecified, using default values
   873                           ;	Write Protection bit
   874                           ;	WRT0 = 0x1, unprogrammed default
   875                           ;	Write Protection bit
   876                           ;	WRT1 = 0x1, unprogrammed default
   877                           ;	Write Protection bit
   878                           ;	WRT2 = 0x1, unprogrammed default
   879                           ;	Write Protection bit
   880                           ;	WRT3 = 0x1, unprogrammed default
   881   30000A                     	org	3145738
   882   30000A  0F                 	db	15
   883                           
   884                           ;Config register CONFIG6H @ 0x30000B
   885                           ;	unspecified, using default values
   886                           ;	Configuration Register Write Protection bit
   887                           ;	WRTC = 0x1, unprogrammed default
   888                           ;	Boot Block Write Protection bit
   889                           ;	WRTB = 0x1, unprogrammed default
   890                           ;	Data EEPROM Write Protection bit
   891                           ;	WRTD = 0x1, unprogrammed default
   892   30000B                     	org	3145739
   893   30000B  E0                 	db	224
   894                           
   895                           ;Config register CONFIG7L @ 0x30000C
   896                           ;	unspecified, using default values
   897                           ;	Table Read Protection bit
   898                           ;	EBTR0 = 0x1, unprogrammed default
   899                           ;	Table Read Protection bit
   900                           ;	EBTR1 = 0x1, unprogrammed default
   901                           ;	Table Read Protection bit
   902                           ;	EBTR2 = 0x1, unprogrammed default
   903                           ;	Table Read Protection bit
   904                           ;	EBTR3 = 0x1, unprogrammed default
   905   30000C                     	org	3145740
   906   30000C  0F                 	db	15
   907                           
   908                           ;Config register CONFIG7H @ 0x30000D
   909                           ;	unspecified, using default values
   910                           ;	Boot Block Table Read Protection bit
   911                           ;	EBTRB = 0x1, unprogrammed default
   912   30000D                     	org	3145741
   913   30000D  40                 	db	64
   914                           tosu	equ	0xFFF
   915                           tosh	equ	0xFFE
   916                           tosl	equ	0xFFD
   917                           stkptr	equ	0xFFC
   918                           pclatu	equ	0xFFB
   919                           pclath	equ	0xFFA
   920                           pcl	equ	0xFF9
   921                           tblptru	equ	0xFF8
   922                           tblptrh	equ	0xFF7
   923                           tblptrl	equ	0xFF6
   924                           tablat	equ	0xFF5
   925                           prodh	equ	0xFF4
   926                           prodl	equ	0xFF3
   927                           indf0	equ	0xFEF
   928                           postinc0	equ	0xFEE
   929                           postdec0	equ	0xFED
   930                           preinc0	equ	0xFEC
   931                           plusw0	equ	0xFEB
   932                           fsr0h	equ	0xFEA
   933                           fsr0l	equ	0xFE9
   934                           wreg	equ	0xFE8
   935                           indf1	equ	0xFE7
   936                           postinc1	equ	0xFE6
   937                           postdec1	equ	0xFE5
   938                           preinc1	equ	0xFE4
   939                           plusw1	equ	0xFE3
   940                           fsr1h	equ	0xFE2
   941                           fsr1l	equ	0xFE1
   942                           bsr	equ	0xFE0
   943                           indf2	equ	0xFDF
   944                           postinc2	equ	0xFDE
   945                           postdec2	equ	0xFDD
   946                           preinc2	equ	0xFDC
   947                           plusw2	equ	0xFDB
   948                           fsr2h	equ	0xFDA
   949                           fsr2l	equ	0xFD9
   950                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      5      15
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_setServoPosition1
    _ISR->_setServoPosition2

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  1     1      0      91
                                              4 COMRAM     1     1      0
                  _setServoPosition1
                  _setServoPosition2
 ---------------------------------------------------------------------------------
 (2) _setServoPosition2                                    4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _setServoPosition1                                    4     2      2      46
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _setServoPosition1
   _setServoPosition2

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126      5      15     11.9%
BITBIGSFRh          66      0       0      0.0%
BITBIGSFRlh         40      0       0      0.0%
BITBIGSFRlll        11      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      15      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Jan 12 16:54:47 2025

                         _i 0009                          u10 0686                          u11 0682  
                       l801 0672                         l803 0674                         l805 0676  
                       l807 0678                         l809 0686                         l761 060E  
                       l771 0618                         l763 0610                         l755 0602  
                       l781 063E                         l773 0626                         l765 0612  
                       l757 060A                         l791 0668                         l783 0640  
                       l775 0628                         l767 0614                         l759 060C  
                       l793 066A                         l785 0662                         l777 063A  
                       l769 0616                         l795 066C                         l787 0664  
                       l779 063C                         l797 066E                         l789 0666  
                       l799 0670                         _PR2 0FCB                         _ISR 0008  
                       wreg 0FE8                        ?_ISR 000B                        _LATC 0F8B  
                      _LATD 0F8C                        i2l56 0744                        i2l59 0716  
                      i2l75 06E6                        _main 0602                        _prex 0007  
                      _prey 0005                        btemp 0010                        start 000E  
              ___param_bank 0000                       ??_ISR 000F                       ?_main 000B  
                     _T2CON 0FCA                       i2l821 0718                       i2l823 06EA  
                     i2l831 06BC                       i2l833 06E4                       i2l825 0692  
                     i2l827 06A0                       i2l829 06B0                       ttemp5 0011  
                     ttemp6 0014                       ttemp7 0018                       status 0FD8  
                     wtemp8 0011             __initialization 0746                __end_of_main 0690  
                    ??_main 0010               __activetblptr 0000                      _CCPR1L 0FBE  
                    _CCPR2L 0FBB                      i2u3_40 06A0                      i2u3_41 069C  
                    i2u4_47 06A6                      i2u5_47 06C2                      clear_0 074C  
                    isa$std 0001                __mediumconst 0000           _setServoPosition1 0718  
         _setServoPosition2 06EA          ?_setServoPosition1 000B          ?_setServoPosition2 000B  
                __accesstop 0080     __end_of__initialization 0752               ___rparam_used 0001  
       ??_setServoPosition1 000D         ??_setServoPosition2 000D              __pcstackCOMRAM 000B  
setServoPosition1@dutyCycle 000B   __end_of_setServoPosition1 0746   __end_of_setServoPosition2 0718  
setServoPosition2@dutyCycle 000B                  _distance_x 0003                  _distance_y 0001  
                   __Hparam 0000                     __Lparam 0000                __psmallconst 0600  
                   __pcinit 0746                     __ramtop 0600                     __ptext0 0602  
                   __ptext2 06EA                     __ptext3 0718                   _T2CONbits 0FCA  
            __pintcode_body 0690        end_of_initialization 0752                     int_func 0690  
                   postinc0 0FEE                   _TRISAbits 0F92                   _TRISBbits 0F93  
                 _TRISCbits 0F94                   _TRISDbits 0F95                 _CCP1CONbits 0FBD  
               _CCP2CONbits 0FBA         start_initialization 0746                 __end_of_ISR 06EA  
               __pbssCOMRAM 0001                   __pintcode 0008                 __smallconst 0600  
                  _PIE1bits 0F9D                    _PIR1bits 0F9E                    _RCONbits 0FD0  
                _ADCON0bits 0FC2                  _ADCON1bits 0FC1                  _ADCON2bits 0FC0  
                  __Hrparam 0000                    __Lrparam 0000                    isa$xinst 0000  
                  int$flags 0010                  _INTCONbits 0FF2                    intlevel2 0000  
                _OSCCONbits 0FD3  
