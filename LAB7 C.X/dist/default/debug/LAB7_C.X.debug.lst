

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jan 01 15:01:18 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 25/07/2024 GMT
    21                           ; 
    22                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4520 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000FE0                     bsr             equ	4064
    55   000FE9                     fsr0            equ	4073
    56   000FEA                     fsr0h           equ	4074
    57   000FE9                     fsr0l           equ	4073
    58   000FE1                     fsr1            equ	4065
    59   000FE2                     fsr1h           equ	4066
    60   000FE1                     fsr1l           equ	4065
    61   000FD9                     fsr2            equ	4057
    62   000FDA                     fsr2h           equ	4058
    63   000FD9                     fsr2l           equ	4057
    64   000FEF                     indf0           equ	4079
    65   000FE7                     indf1           equ	4071
    66   000FDF                     indf2           equ	4063
    67   000FF2                     intcon          equ	4082
    68   000000                     nvmcon          equ	0
    69   000FF9                     pcl             equ	4089
    70   000FFA                     pclath          equ	4090
    71   000FFB                     pclatu          equ	4091
    72   000FEB                     plusw0          equ	4075
    73   000FE3                     plusw1          equ	4067
    74   000FDB                     plusw2          equ	4059
    75   000FED                     postdec0        equ	4077
    76   000FE5                     postdec1        equ	4069
    77   000FDD                     postdec2        equ	4061
    78   000FEE                     postinc0        equ	4078
    79   000FE6                     postinc1        equ	4070
    80   000FDE                     postinc2        equ	4062
    81   000FEC                     preinc0         equ	4076
    82   000FE4                     preinc1         equ	4068
    83   000FDC                     preinc2         equ	4060
    84   000FF3                     prod            equ	4083
    85   000FF4                     prodh           equ	4084
    86   000FF3                     prodl           equ	4083
    87   000FD8                     status          equ	4056
    88   000FF5                     tablat          equ	4085
    89   000FF6                     tblptr          equ	4086
    90   000FF7                     tblptrh         equ	4087
    91   000FF6                     tblptrl         equ	4086
    92   000FF8                     tblptru         equ	4088
    93   000FFD                     tosl            equ	4093
    94   000FE8                     wreg            equ	4072
    95   000F80                     PORTA           equ	3968	;# 
    96   000F81                     PORTB           equ	3969	;# 
    97   000F82                     PORTC           equ	3970	;# 
    98   000F83                     PORTD           equ	3971	;# 
    99   000F84                     PORTE           equ	3972	;# 
   100   000F89                     LATA            equ	3977	;# 
   101   000F8A                     LATB            equ	3978	;# 
   102   000F8B                     LATC            equ	3979	;# 
   103   000F8C                     LATD            equ	3980	;# 
   104   000F8D                     LATE            equ	3981	;# 
   105   000F92                     TRISA           equ	3986	;# 
   106   000F92                     DDRA            equ	3986	;# 
   107   000F93                     TRISB           equ	3987	;# 
   108   000F93                     DDRB            equ	3987	;# 
   109   000F94                     TRISC           equ	3988	;# 
   110   000F94                     DDRC            equ	3988	;# 
   111   000F95                     TRISD           equ	3989	;# 
   112   000F95                     DDRD            equ	3989	;# 
   113   000F96                     TRISE           equ	3990	;# 
   114   000F96                     DDRE            equ	3990	;# 
   115   000F9B                     OSCTUNE         equ	3995	;# 
   116   000F9D                     PIE1            equ	3997	;# 
   117   000F9E                     PIR1            equ	3998	;# 
   118   000F9F                     IPR1            equ	3999	;# 
   119   000FA0                     PIE2            equ	4000	;# 
   120   000FA1                     PIR2            equ	4001	;# 
   121   000FA2                     IPR2            equ	4002	;# 
   122   000FA6                     EECON1          equ	4006	;# 
   123   000FA7                     EECON2          equ	4007	;# 
   124   000FA8                     EEDATA          equ	4008	;# 
   125   000FA9                     EEADR           equ	4009	;# 
   126   000FAB                     RCSTA           equ	4011	;# 
   127   000FAB                     RCSTA1          equ	4011	;# 
   128   000FAC                     TXSTA           equ	4012	;# 
   129   000FAC                     TXSTA1          equ	4012	;# 
   130   000FAD                     TXREG           equ	4013	;# 
   131   000FAD                     TXREG1          equ	4013	;# 
   132   000FAE                     RCREG           equ	4014	;# 
   133   000FAE                     RCREG1          equ	4014	;# 
   134   000FAF                     SPBRG           equ	4015	;# 
   135   000FAF                     SPBRG1          equ	4015	;# 
   136   000FB0                     SPBRGH          equ	4016	;# 
   137   000FB1                     T3CON           equ	4017	;# 
   138   000FB2                     TMR3            equ	4018	;# 
   139   000FB2                     TMR3L           equ	4018	;# 
   140   000FB3                     TMR3H           equ	4019	;# 
   141   000FB4                     CMCON           equ	4020	;# 
   142   000FB5                     CVRCON          equ	4021	;# 
   143   000FB6                     ECCP1AS         equ	4022	;# 
   144   000FB6                     ECCPAS          equ	4022	;# 
   145   000FB7                     PWM1CON         equ	4023	;# 
   146   000FB7                     ECCP1DEL        equ	4023	;# 
   147   000FB8                     BAUDCON         equ	4024	;# 
   148   000FB8                     BAUDCTL         equ	4024	;# 
   149   000FBA                     CCP2CON         equ	4026	;# 
   150   000FBB                     CCPR2           equ	4027	;# 
   151   000FBB                     CCPR2L          equ	4027	;# 
   152   000FBC                     CCPR2H          equ	4028	;# 
   153   000FBD                     CCP1CON         equ	4029	;# 
   154   000FBE                     CCPR1           equ	4030	;# 
   155   000FBE                     CCPR1L          equ	4030	;# 
   156   000FBF                     CCPR1H          equ	4031	;# 
   157   000FC0                     ADCON2          equ	4032	;# 
   158   000FC1                     ADCON1          equ	4033	;# 
   159   000FC2                     ADCON0          equ	4034	;# 
   160   000FC3                     ADRES           equ	4035	;# 
   161   000FC3                     ADRESL          equ	4035	;# 
   162   000FC4                     ADRESH          equ	4036	;# 
   163   000FC5                     SSPCON2         equ	4037	;# 
   164   000FC6                     SSPCON1         equ	4038	;# 
   165   000FC7                     SSPSTAT         equ	4039	;# 
   166   000FC8                     SSPADD          equ	4040	;# 
   167   000FC9                     SSPBUF          equ	4041	;# 
   168   000FCA                     T2CON           equ	4042	;# 
   169   000FCB                     PR2             equ	4043	;# 
   170   000FCB                     MEMCON          equ	4043	;# 
   171   000FCC                     TMR2            equ	4044	;# 
   172   000FCD                     T1CON           equ	4045	;# 
   173   000FCE                     TMR1            equ	4046	;# 
   174   000FCE                     TMR1L           equ	4046	;# 
   175   000FCF                     TMR1H           equ	4047	;# 
   176   000FD0                     RCON            equ	4048	;# 
   177   000FD1                     WDTCON          equ	4049	;# 
   178   000FD2                     HLVDCON         equ	4050	;# 
   179   000FD2                     LVDCON          equ	4050	;# 
   180   000FD3                     OSCCON          equ	4051	;# 
   181   000FD5                     T0CON           equ	4053	;# 
   182   000FD6                     TMR0            equ	4054	;# 
   183   000FD6                     TMR0L           equ	4054	;# 
   184   000FD7                     TMR0H           equ	4055	;# 
   185   000FD8                     STATUS          equ	4056	;# 
   186   000FD9                     FSR2            equ	4057	;# 
   187   000FD9                     FSR2L           equ	4057	;# 
   188   000FDA                     FSR2H           equ	4058	;# 
   189   000FDB                     PLUSW2          equ	4059	;# 
   190   000FDC                     PREINC2         equ	4060	;# 
   191   000FDD                     POSTDEC2        equ	4061	;# 
   192   000FDE                     POSTINC2        equ	4062	;# 
   193   000FDF                     INDF2           equ	4063	;# 
   194   000FE0                     BSR             equ	4064	;# 
   195   000FE1                     FSR1            equ	4065	;# 
   196   000FE1                     FSR1L           equ	4065	;# 
   197   000FE2                     FSR1H           equ	4066	;# 
   198   000FE3                     PLUSW1          equ	4067	;# 
   199   000FE4                     PREINC1         equ	4068	;# 
   200   000FE5                     POSTDEC1        equ	4069	;# 
   201   000FE6                     POSTINC1        equ	4070	;# 
   202   000FE7                     INDF1           equ	4071	;# 
   203   000FE8                     WREG            equ	4072	;# 
   204   000FE9                     FSR0            equ	4073	;# 
   205   000FE9                     FSR0L           equ	4073	;# 
   206   000FEA                     FSR0H           equ	4074	;# 
   207   000FEB                     PLUSW0          equ	4075	;# 
   208   000FEC                     PREINC0         equ	4076	;# 
   209   000FED                     POSTDEC0        equ	4077	;# 
   210   000FEE                     POSTINC0        equ	4078	;# 
   211   000FEF                     INDF0           equ	4079	;# 
   212   000FF0                     INTCON3         equ	4080	;# 
   213   000FF1                     INTCON2         equ	4081	;# 
   214   000FF2                     INTCON          equ	4082	;# 
   215   000FF3                     PROD            equ	4083	;# 
   216   000FF3                     PRODL           equ	4083	;# 
   217   000FF4                     PRODH           equ	4084	;# 
   218   000FF5                     TABLAT          equ	4085	;# 
   219   000FF6                     TBLPTR          equ	4086	;# 
   220   000FF6                     TBLPTRL         equ	4086	;# 
   221   000FF7                     TBLPTRH         equ	4087	;# 
   222   000FF8                     TBLPTRU         equ	4088	;# 
   223   000FF9                     PCLAT           equ	4089	;# 
   224   000FF9                     PC              equ	4089	;# 
   225   000FF9                     PCL             equ	4089	;# 
   226   000FFA                     PCLATH          equ	4090	;# 
   227   000FFB                     PCLATU          equ	4091	;# 
   228   000FFC                     STKPTR          equ	4092	;# 
   229   000FFD                     TOS             equ	4093	;# 
   230   000FFD                     TOSL            equ	4093	;# 
   231   000FFE                     TOSH            equ	4094	;# 
   232   000FFF                     TOSU            equ	4095	;# 
   233                           
   234                           	psect	idataCOMRAM
   235   00076C                     __pidataCOMRAM:
   236                           	callstack 0
   237                           
   238                           ;initializer for _STATET
   239   00076C  01                 	db	1
   240                           
   241                           ;initializer for _STATEL
   242   00076D  01                 	db	1
   243   000F93                     _TRISBbits      set	3987
   244   000F92                     _TRISA          set	3986
   245   000F89                     _LATA           set	3977
   246   000FD3                     _OSCCON         set	4051
   247   000FCA                     _T2CON          set	4042
   248   000F9F                     _IPR1bits       set	3999
   249   000F9D                     _PIE1bits       set	3997
   250   000FD0                     _RCONbits       set	4048
   251   000FC1                     _ADCON1         set	4033
   252   000F9E                     _PIR1bits       set	3998
   253   000FCB                     _PR2            set	4043
   254   000FF2                     _INTCONbits     set	4082
   255                           
   256                           ; #config settings
   257                           
   258                           	psect	cinit
   259   000742                     __pcinit:
   260                           	callstack 0
   261   000742                     start_initialization:
   262                           	callstack 0
   263   000742                     __initialization:
   264                           	callstack 0
   265                           
   266                           ; Initialize objects allocated to COMRAM (2 bytes)
   267                           ; load TBLPTR registers with __pidataCOMRAM
   268   000742  0E6C               	movlw	low __pidataCOMRAM
   269   000744  6EF6               	movwf	tblptrl,c
   270   000746  0E07               	movlw	high __pidataCOMRAM
   271   000748  6EF7               	movwf	tblptrh,c
   272   00074A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   273   00074C  6EF8               	movwf	tblptru,c
   274   00074E  0009               	tblrd		*+	;fetch initializer
   275   000750  CFF5 F003          	movff	tablat,__pdataCOMRAM
   276   000754  0009               	tblrd		*+	;fetch initializer
   277   000756  CFF5 F004          	movff	tablat,__pdataCOMRAM+1
   278                           
   279                           ; Clear objects allocated to COMRAM (2 bytes)
   280   00075A  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   281   00075C  6A01               	clrf	__pbssCOMRAM& (0+255),c
   282   00075E                     end_of_initialization:
   283                           	callstack 0
   284   00075E                     __end_of__initialization:
   285                           	callstack 0
   286   00075E  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   287   000760  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   288   000762  0E00               	movlw	low (__Lmediumconst shr (0+16))
   289   000764  6EF8               	movwf	tblptru,c
   290   000766  0100               	movlb	0
   291   000768  EF86  F003         	goto	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMRAM
   294   000001                     __pbssCOMRAM:
   295                           	callstack 0
   296   000001                     _TEMP:
   297                           	callstack 0
   298   000001                     	ds	1
   299   000002                     _COUNTER:
   300                           	callstack 0
   301   000002                     	ds	1
   302                           
   303                           	psect	dataCOMRAM
   304   000003                     __pdataCOMRAM:
   305                           	callstack 0
   306   000003                     _STATET:
   307                           	callstack 0
   308   000003                     	ds	1
   309   000004                     _STATEL:
   310                           	callstack 0
   311   000004                     	ds	1
   312                           
   313                           	psect	cstackCOMRAM
   314   000000                     __pcstackCOMRAM:
   315                           	callstack 0
   316   000000                     
   317                           ; 1 bytes @ 0x0
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 91 in file "bonus.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   337 ;;      Params:         0       0       0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0       0       0
   340 ;;      Totals:         0       0       0       0       0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels required when called: 1
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text0
   351   00070C                     __ptext0:
   352                           	callstack 0
   353   00070C                     _main:
   354                           	callstack 30
   355   00070C                     
   356                           ;bonus.c: 93:     STATET = 1;
   357   00070C  0E0F               	movlw	15
   358   00070E  6EC1               	movwf	193,c	;volatile
   359   000710                     
   360                           ;bonus.c: 95:     TEMP = 0;
   361   000710  6A92               	clrf	146,c	;volatile
   362   000712                     
   363                           ;bonus.c: 96: 
   364   000712  6A89               	clrf	137,c	;volatile
   365   000714                     
   366                           ;bonus.c: 97:     while (1) {
   367   000714  8093               	bsf	147,0,c	;volatile
   368   000716                     
   369                           ;bonus.c: 99:     }
   370   000716  8ED0               	bsf	208,7,c	;volatile
   371   000718                     
   372                           ;bonus.c: 100: }
   373   000718  8EF2               	bsf	242,7,c	;volatile
   374   00071A  88F2               	bsf	242,4,c	;volatile
   375   00071C  92F2               	bcf	242,1,c	;volatile
   376   00071E  829D               	bsf	157,1,c	;volatile
   377   000720  829F               	bsf	159,1,c	;volatile
   378   000722  929E               	bcf	158,1,c	;volatile
   379   000724  68CA               	setf	202,c	;volatile
   380   000726  0E3D               	movlw	61
   381   000728  6ECB               	movwf	203,c	;volatile
   382   00072A  0E20               	movlw	32
   383   00072C  6ED3               	movwf	211,c	;volatile
   384   00072E  0E01               	movlw	1
   385   000730  6E04               	movwf	_STATEL^0,c	;volatile
   386   000732  0E01               	movlw	1
   387   000734  6E03               	movwf	_STATET^0,c	;volatile
   388   000736  6A02               	clrf	_COUNTER^0,c	;volatile
   389   000738  6A01               	clrf	_TEMP^0,c	;volatile
   390   00073A                     l61:
   391   00073A  EF9D  F003         	goto	l61
   392   00073E  EF07  F000         	goto	start
   393   000742                     __end_of_main:
   394                           	callstack 0
   395                           
   396 ;; *************** function _ISR *****************
   397 ;; Defined at:
   398 ;;		line 28 in file "bonus.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   412 ;;      Params:         0       0       0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0       0       0
   415 ;;      Totals:         0       0       0       0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels used: 1
   418 ;; This function calls:
   419 ;;		Nothing
   420 ;; This function is called by:
   421 ;;		Interrupt level 2
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           	psect	intcode
   426   000008                     __pintcode:
   427                           	callstack 0
   428   000008                     _ISR:
   429                           	callstack 30
   430                           
   431                           ;incstack = 0
   432   000008  8205               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   433   00000A  ED01  F003         	call	int_func,f	;refresh shadow registers
   434                           
   435                           	psect	intcode_body
   436   000602                     __pintcode_body:
   437                           	callstack 30
   438   000602                     int_func:
   439                           	callstack 30
   440   000602  0006               	pop		; remove dummy address from shadow register refresh
   441   000604                     
   442                           ;bonus.c: 29:                 PR2 = 122;
   443   000604  A2F2               	btfss	242,1,c	;volatile
   444   000606  EF07  F003         	goto	i2u1_41
   445   00060A  EF09  F003         	goto	i2u1_40
   446   00060E                     i2u1_41:
   447   00060E  EF43  F003         	goto	i2l37
   448   000612                     i2u1_40:
   449   000612                     
   450                           ;bonus.c: 30:                 break;
   451   000612  2A04               	incf	_STATEL^0,f,c	;volatile
   452                           
   453                           ;bonus.c: 31:         }
   454   000614  2A03               	incf	_STATET^0,f,c	;volatile
   455   000616                     
   456                           ;bonus.c: 34:         if (STATEL == 3) {
   457   000616  0E03               	movlw	3
   458   000618  6404               	cpfsgt	_STATEL^0,c	;volatile
   459   00061A  EF11  F003         	goto	i2u2_41
   460   00061E  EF13  F003         	goto	i2u2_40
   461   000622                     i2u2_41:
   462   000622  EF15  F003         	goto	i2l748
   463   000626                     i2u2_40:
   464   000626                     
   465                           ;bonus.c: 35:             COUNTER = 15;
   466   000626  0E01               	movlw	1
   467   000628  6E04               	movwf	_STATEL^0,c	;volatile
   468   00062A                     i2l748:
   469                           
   470                           ;bonus.c: 39: 
   471   00062A  0E02               	movlw	2
   472   00062C  6403               	cpfsgt	_STATET^0,c	;volatile
   473   00062E  EF1B  F003         	goto	i2u3_41
   474   000632  EF1D  F003         	goto	i2u3_40
   475   000636                     i2u3_41:
   476   000636  EF29  F003         	goto	i2l758
   477   00063A                     i2u3_40:
   478   00063A                     
   479                           ;bonus.c: 40:         INTCONbits.INT0IF = 0;
   480   00063A  0E01               	movlw	1
   481   00063C  6E03               	movwf	_STATET^0,c	;volatile
   482   00063E  EF29  F003         	goto	i2l758
   483   000642                     i2l752:
   484                           
   485                           ;bonus.c: 46:                 COUNTER++;
   486   000642  0E3D               	movlw	61
   487   000644  6ECB               	movwf	203,c	;volatile
   488                           
   489                           ;bonus.c: 47:                 if (COUNTER > 7) {
   490   000646  EF34  F003         	goto	i2l760
   491   00064A                     i2l754:
   492                           
   493                           ;bonus.c: 49:                 }
   494   00064A  0E7A               	movlw	122
   495   00064C  6ECB               	movwf	203,c	;volatile
   496                           
   497                           ;bonus.c: 50:                 break;
   498   00064E  EF34  F003         	goto	i2l760
   499   000652                     i2l758:
   500   000652  5003               	movf	_STATET^0,w,c	;volatile
   501                           
   502                           ; Switch size 1, requested type "simple"
   503                           ; Number of cases is 2, Range of values is 1 to 2
   504                           ; switch strategies available:
   505                           ; Name         Instructions Cycles
   506                           ; simple_byte            7     4 (average)
   507                           ;	Chosen strategy is simple_byte
   508   000654  0A01               	xorlw	1	; case 1
   509   000656  B4D8               	btfsc	status,2,c
   510   000658  EF21  F003         	goto	i2l752
   511   00065C  0A03               	xorlw	3	; case 2
   512   00065E  B4D8               	btfsc	status,2,c
   513   000660  EF25  F003         	goto	i2l754
   514   000664  EF34  F003         	goto	i2l760
   515   000668                     i2l760:
   516                           
   517                           ;bonus.c: 54:                     COUNTER = 0;
   518   000668  0E03               	movlw	3
   519   00066A  1804               	xorwf	_STATEL^0,w,c	;volatile
   520   00066C  A4D8               	btfss	status,2,c
   521   00066E  EF3B  F003         	goto	i2u4_41
   522   000672  EF3D  F003         	goto	i2u4_40
   523   000676                     i2u4_41:
   524   000676  EF41  F003         	goto	i2l44
   525   00067A                     i2u4_40:
   526   00067A                     
   527                           ;bonus.c: 55:                 }
   528   00067A  0E0F               	movlw	15
   529   00067C  6E02               	movwf	_COUNTER^0,c	;volatile
   530                           
   531                           ;bonus.c: 56:                 break;
   532   00067E  EF42  F003         	goto	i2l45
   533   000682                     i2l44:
   534                           
   535                           ;bonus.c: 57:             case 3:
   536   000682  6A02               	clrf	_COUNTER^0,c	;volatile
   537   000684                     i2l45:
   538                           
   539                           ;bonus.c: 60:                 } else {
   540   000684  92F2               	bcf	242,1,c	;volatile
   541   000686                     i2l37:
   542                           
   543                           ;bonus.c: 63:                 break;
   544   000686  A29E               	btfss	158,1,c	;volatile
   545   000688  EF48  F003         	goto	i2u5_41
   546   00068C  EF4A  F003         	goto	i2u5_40
   547   000690                     i2u5_41:
   548   000690  EF84  F003         	goto	i2l56
   549   000694                     i2u5_40:
   550   000694  EF72  F003         	goto	i2l786
   551   000698                     i2l766:
   552                           
   553                           ;bonus.c: 66:         PIR1bits.TMR2IF = 0;
   554   000698  2A02               	incf	_COUNTER^0,f,c	;volatile
   555   00069A                     
   556                           ;bonus.c: 67:     }
   557   00069A  0E07               	movlw	7
   558   00069C  6402               	cpfsgt	_COUNTER^0,c	;volatile
   559   00069E  EF53  F003         	goto	i2u6_41
   560   0006A2  EF55  F003         	goto	i2u6_40
   561   0006A6                     i2u6_41:
   562   0006A6  EF81  F003         	goto	i2l50
   563   0006AA                     i2u6_40:
   564   0006AA                     i2l770:
   565                           
   566                           ;bonus.c: 68: }
   567   0006AA  6A02               	clrf	_COUNTER^0,c	;volatile
   568   0006AC  EF81  F003         	goto	i2l50
   569   0006B0                     i2l772:
   570                           
   571                           ;bonus.c: 72: 
   572   0006B0  2A02               	incf	_COUNTER^0,f,c	;volatile
   573   0006B2                     
   574                           ;bonus.c: 73:     ADCON1 = 0x0F;
   575   0006B2  0E0F               	movlw	15
   576   0006B4  6402               	cpfsgt	_COUNTER^0,c	;volatile
   577   0006B6  EF5F  F003         	goto	i2u7_41
   578   0006BA  EF61  F003         	goto	i2u7_40
   579   0006BE                     i2u7_41:
   580   0006BE  EF81  F003         	goto	i2l50
   581   0006C2                     i2u7_40:
   582   0006C2  EF55  F003         	goto	i2l770
   583   0006C6                     i2l778:
   584                           
   585                           ;bonus.c: 78: 
   586   0006C6  5002               	movf	_COUNTER^0,w,c	;volatile
   587   0006C8  A4D8               	btfss	status,2,c
   588   0006CA  EF69  F003         	goto	i2u8_41
   589   0006CE  EF6B  F003         	goto	i2u8_40
   590   0006D2                     i2u8_41:
   591   0006D2  EF6F  F003         	goto	i2l782
   592   0006D6                     i2u8_40:
   593   0006D6                     
   594                           ;bonus.c: 79:     RCONbits.IPEN = 1;
   595   0006D6  0E0F               	movlw	15
   596   0006D8  6E02               	movwf	_COUNTER^0,c	;volatile
   597                           
   598                           ;bonus.c: 80:     INTCONbits.GIEH = 1;
   599   0006DA  EF81  F003         	goto	i2l50
   600   0006DE                     i2l782:
   601                           
   602                           ;bonus.c: 81:     INTCONbits.INT0IE = 1;
   603   0006DE  0602               	decf	_COUNTER^0,f,c	;volatile
   604   0006E0  EF81  F003         	goto	i2l50
   605   0006E4                     i2l786:
   606   0006E4  5004               	movf	_STATEL^0,w,c	;volatile
   607                           
   608                           ; Switch size 1, requested type "simple"
   609                           ; Number of cases is 3, Range of values is 1 to 3
   610                           ; switch strategies available:
   611                           ; Name         Instructions Cycles
   612                           ; simple_byte           10     6 (average)
   613                           ;	Chosen strategy is simple_byte
   614   0006E6  0A01               	xorlw	1	; case 1
   615   0006E8  B4D8               	btfsc	status,2,c
   616   0006EA  EF4C  F003         	goto	i2l766
   617   0006EE  0A03               	xorlw	3	; case 2
   618   0006F0  B4D8               	btfsc	status,2,c
   619   0006F2  EF58  F003         	goto	i2l772
   620   0006F6  0A01               	xorlw	1	; case 3
   621   0006F8  B4D8               	btfsc	status,2,c
   622   0006FA  EF63  F003         	goto	i2l778
   623   0006FE  EF81  F003         	goto	i2l50
   624   000702                     i2l50:
   625                           
   626                           ;bonus.c: 85:     IPR1bits.TMR2IP = 1;
   627   000702  C002  FF89         	movff	_COUNTER,3977	;volatile
   628                           
   629                           ;bonus.c: 86:     PIR1bits.TMR2IF = 0;
   630   000706  929E               	bcf	158,1,c	;volatile
   631   000708                     i2l56:
   632   000708  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   633   00070A  0011               	retfie		f
   634   00070C                     __end_of_ISR:
   635                           	callstack 0
   636                           
   637                           	psect	smallconst
   638   000600                     __psmallconst:
   639                           	callstack 0
   640   000600  00                 	db	0
   641   000601  00                 	db	0	; dummy byte at the end
   642   000002                     __activetblptr  equ	2
   643                           
   644                           	psect	rparam
   645   000001                     ___rparam_used  equ	1
   646   000000                     ___param_bank   equ	0
   647   000000                     __Lparam        equ	__Lrparam
   648   000000                     __Hparam        equ	__Hrparam
   649                           
   650                           	psect	temp
   651   000005                     btemp:
   652                           	callstack 0
   653   000005                     	ds	1
   654   000005                     int$flags       set	btemp
   655   000006                     wtemp8          set	btemp+1
   656   000006                     ttemp5          set	btemp+1
   657   000009                     ttemp6          set	btemp+4
   658   00000D                     ttemp7          set	btemp+8
   659                           
   660                           	psect	idloc
   661                           
   662                           ;Config register IDLOC0 @ 0x200000
   663                           ;	unspecified, using default values
   664   200000                     	org	2097152
   665   200000  FF                 	db	255
   666                           
   667                           ;Config register IDLOC1 @ 0x200001
   668                           ;	unspecified, using default values
   669   200001                     	org	2097153
   670   200001  FF                 	db	255
   671                           
   672                           ;Config register IDLOC2 @ 0x200002
   673                           ;	unspecified, using default values
   674   200002                     	org	2097154
   675   200002  FF                 	db	255
   676                           
   677                           ;Config register IDLOC3 @ 0x200003
   678                           ;	unspecified, using default values
   679   200003                     	org	2097155
   680   200003  FF                 	db	255
   681                           
   682                           ;Config register IDLOC4 @ 0x200004
   683                           ;	unspecified, using default values
   684   200004                     	org	2097156
   685   200004  FF                 	db	255
   686                           
   687                           ;Config register IDLOC5 @ 0x200005
   688                           ;	unspecified, using default values
   689   200005                     	org	2097157
   690   200005  FF                 	db	255
   691                           
   692                           ;Config register IDLOC6 @ 0x200006
   693                           ;	unspecified, using default values
   694   200006                     	org	2097158
   695   200006  FF                 	db	255
   696                           
   697                           ;Config register IDLOC7 @ 0x200007
   698                           ;	unspecified, using default values
   699   200007                     	org	2097159
   700   200007  FF                 	db	255
   701                           
   702                           	psect	config
   703                           
   704                           ; Padding undefined space
   705   300000                     	org	3145728
   706   300000  FF                 	db	255
   707                           
   708                           ;Config register CONFIG1H @ 0x300001
   709                           ;	Oscillator Selection bits
   710                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   711                           ;	Fail-Safe Clock Monitor Enable bit
   712                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   713                           ;	Internal/External Oscillator Switchover bit
   714                           ;	IESO = OFF, Oscillator Switchover mode disabled
   715   300001                     	org	3145729
   716   300001  08                 	db	8
   717                           
   718                           ;Config register CONFIG2L @ 0x300002
   719                           ;	Power-up Timer Enable bit
   720                           ;	PWRT = OFF, PWRT disabled
   721                           ;	Brown-out Reset Enable bits
   722                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   723                           ;	Brown Out Reset Voltage bits
   724                           ;	BORV = 3, Minimum setting
   725   300002                     	org	3145730
   726   300002  1F                 	db	31
   727                           
   728                           ;Config register CONFIG2H @ 0x300003
   729                           ;	Watchdog Timer Enable bit
   730                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   731                           ;	Watchdog Timer Postscale Select bits
   732                           ;	WDTPS = 32768, 1:32768
   733   300003                     	org	3145731
   734   300003  1E                 	db	30
   735                           
   736                           ; Padding undefined space
   737   300004                     	org	3145732
   738   300004  FF                 	db	255
   739                           
   740                           ;Config register CONFIG3H @ 0x300005
   741                           ;	CCP2 MUX bit
   742                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   743                           ;	PORTB A/D Enable bit
   744                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   745                           ;	Low-Power Timer1 Oscillator Enable bit
   746                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   747                           ;	MCLR Pin Enable bit
   748                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   749   300005                     	org	3145733
   750   300005  83                 	db	131
   751                           
   752                           ;Config register CONFIG4L @ 0x300006
   753                           ;	Stack Full/Underflow Reset Enable bit
   754                           ;	STVREN = ON, Stack full/underflow will cause Reset
   755                           ;	Single-Supply ICSP Enable bit
   756                           ;	LVP = OFF, Single-Supply ICSP disabled
   757                           ;	Extended Instruction Set Enable bit
   758                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   759                           ;	Background Debugger Enable bit
   760                           ;	DEBUG = 0x1, unprogrammed default
   761   300006                     	org	3145734
   762   300006  81                 	db	129
   763                           
   764                           ; Padding undefined space
   765   300007                     	org	3145735
   766   300007  FF                 	db	255
   767                           
   768                           ;Config register CONFIG5L @ 0x300008
   769                           ;	unspecified, using default values
   770                           ;	Code Protection bit
   771                           ;	CP0 = 0x1, unprogrammed default
   772                           ;	Code Protection bit
   773                           ;	CP1 = 0x1, unprogrammed default
   774                           ;	Code Protection bit
   775                           ;	CP2 = 0x1, unprogrammed default
   776                           ;	Code Protection bit
   777                           ;	CP3 = 0x1, unprogrammed default
   778   300008                     	org	3145736
   779   300008  0F                 	db	15
   780                           
   781                           ;Config register CONFIG5H @ 0x300009
   782                           ;	unspecified, using default values
   783                           ;	Boot Block Code Protection bit
   784                           ;	CPB = 0x1, unprogrammed default
   785                           ;	Data EEPROM Code Protection bit
   786                           ;	CPD = 0x1, unprogrammed default
   787   300009                     	org	3145737
   788   300009  C0                 	db	192
   789                           
   790                           ;Config register CONFIG6L @ 0x30000A
   791                           ;	unspecified, using default values
   792                           ;	Write Protection bit
   793                           ;	WRT0 = 0x1, unprogrammed default
   794                           ;	Write Protection bit
   795                           ;	WRT1 = 0x1, unprogrammed default
   796                           ;	Write Protection bit
   797                           ;	WRT2 = 0x1, unprogrammed default
   798                           ;	Write Protection bit
   799                           ;	WRT3 = 0x1, unprogrammed default
   800   30000A                     	org	3145738
   801   30000A  0F                 	db	15
   802                           
   803                           ;Config register CONFIG6H @ 0x30000B
   804                           ;	unspecified, using default values
   805                           ;	Configuration Register Write Protection bit
   806                           ;	WRTC = 0x1, unprogrammed default
   807                           ;	Boot Block Write Protection bit
   808                           ;	WRTB = 0x1, unprogrammed default
   809                           ;	Data EEPROM Write Protection bit
   810                           ;	WRTD = 0x1, unprogrammed default
   811   30000B                     	org	3145739
   812   30000B  E0                 	db	224
   813                           
   814                           ;Config register CONFIG7L @ 0x30000C
   815                           ;	unspecified, using default values
   816                           ;	Table Read Protection bit
   817                           ;	EBTR0 = 0x1, unprogrammed default
   818                           ;	Table Read Protection bit
   819                           ;	EBTR1 = 0x1, unprogrammed default
   820                           ;	Table Read Protection bit
   821                           ;	EBTR2 = 0x1, unprogrammed default
   822                           ;	Table Read Protection bit
   823                           ;	EBTR3 = 0x1, unprogrammed default
   824   30000C                     	org	3145740
   825   30000C  0F                 	db	15
   826                           
   827                           ;Config register CONFIG7H @ 0x30000D
   828                           ;	unspecified, using default values
   829                           ;	Boot Block Table Read Protection bit
   830                           ;	EBTRB = 0x1, unprogrammed default
   831   30000D                     	org	3145741
   832   30000D  40                 	db	64
   833                           tosu	equ	0xFFF
   834                           tosh	equ	0xFFE
   835                           tosl	equ	0xFFD
   836                           stkptr	equ	0xFFC
   837                           pclatu	equ	0xFFB
   838                           pclath	equ	0xFFA
   839                           pcl	equ	0xFF9
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           prodh	equ	0xFF4
   845                           prodl	equ	0xFF3
   846                           indf0	equ	0xFEF
   847                           postinc0	equ	0xFEE
   848                           postdec0	equ	0xFED
   849                           preinc0	equ	0xFEC
   850                           plusw0	equ	0xFEB
   851                           fsr0h	equ	0xFEA
   852                           fsr0l	equ	0xFE9
   853                           wreg	equ	0xFE8
   854                           indf1	equ	0xFE7
   855                           postinc1	equ	0xFE6
   856                           postdec1	equ	0xFE5
   857                           preinc1	equ	0xFE4
   858                           plusw1	equ	0xFE3
   859                           fsr1h	equ	0xFE2
   860                           fsr1l	equ	0xFE1
   861                           bsr	equ	0xFE0
   862                           indf2	equ	0xFDF
   863                           postinc2	equ	0xFDE
   864                           postdec2	equ	0xFDD
   865                           preinc2	equ	0xFDC
   866                           plusw2	equ	0xFDB
   867                           fsr2h	equ	0xFDA
   868                           fsr2l	equ	0xFD9
   869                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0       4
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126      0       4      3.2%
BITBIGSFR_1lh       43      0       0      0.0%
BITBIGSFRh          18      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFR_1h         9      0       0      0.0%
BITBIGSFRl           9      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jan 01 15:01:18 2025

                     l61 073A                       l62 073A                      l800 071A  
                    l810 0724                      l802 071C                      l812 0736  
                    l804 071E                      l814 0738                      l806 0720  
                    l808 0722                      l790 0710                      l792 0712  
                    l794 0714                      l796 0716                      l788 070C  
                    l798 0718                      _PR2 0FCB                      _ISR 0008  
                   ?_ISR 0000                     _LATA 0F89                     i2l50 0702  
                   i2l44 0682                     i2l45 0684                     i2l37 0686  
                   i2l56 0708                     _TEMP 0001                     _main 070C  
                   btemp 0005                     start 000E             ___param_bank 0000  
                  ??_ISR 0000                    ?_main 0000                    _T2CON 0FCA  
                  i2l740 0604                    i2l750 063A                    i2l742 0612  
                  i2l760 0668                    i2l752 0642                    i2l744 0616  
                  i2l770 06AA                    i2l762 067A                    i2l754 064A  
                  i2l746 0626                    i2l780 06D6                    i2l772 06B0  
                  i2l748 062A                    i2l782 06DE                    i2l774 06B2  
                  i2l766 0698                    i2l758 0652                    i2l768 069A  
                  i2l778 06C6                    i2l786 06E4                    _TRISA 0F92  
                  tablat 0FF5                    ttemp5 0006                    ttemp6 0009  
                  ttemp7 000D                    status 0FD8                    wtemp8 0006  
        __initialization 0742             __end_of_main 0742                   ??_main 0000  
          __activetblptr 0002                   _ADCON1 0FC1                   _OSCCON 0FD3  
                 i2u1_40 0612                   i2u1_41 060E                   i2u2_40 0626  
                 i2u2_41 0622                   i2u3_40 063A                   i2u3_41 0636  
                 i2u4_40 067A                   i2u4_41 0676                   i2u5_40 0694  
                 i2u5_41 0690                   _STATEL 0004                   i2u6_40 06AA  
                 i2u6_41 06A6                   _STATET 0003                   i2u7_40 06C2  
                 i2u7_41 06BE                   i2u8_40 06D6                   i2u8_41 06D2  
                 isa$std 0001             __pdataCOMRAM 0003             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0080  __end_of__initialization 075E            ___rparam_used 0001  
         __pcstackCOMRAM 0000                  _COUNTER 0002                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0742  
                __ramtop 0600                  __ptext0 070C           __pintcode_body 0602  
   end_of_initialization 075E            __Lmediumconst 0000                  int_func 0602  
              _TRISBbits 0F93            __pidataCOMRAM 076C      start_initialization 0742  
            __end_of_ISR 070C              __pbssCOMRAM 0001                __pintcode 0008  
            __smallconst 0600                 _IPR1bits 0F9F                 _PIE1bits 0F9D  
               _PIR1bits 0F9E                 _RCONbits 0FD0                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 int$flags 0005  
             _INTCONbits 0FF2                 intlevel2 0000  
