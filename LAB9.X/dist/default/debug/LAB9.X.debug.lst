

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 02 13:40:20 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 25/07/2024 GMT
    19                           ; 
    20                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000FE0                     bsr             equ	4064
    53   000FE9                     fsr0            equ	4073
    54   000FEA                     fsr0h           equ	4074
    55   000FE9                     fsr0l           equ	4073
    56   000FE1                     fsr1            equ	4065
    57   000FE2                     fsr1h           equ	4066
    58   000FE1                     fsr1l           equ	4065
    59   000FD9                     fsr2            equ	4057
    60   000FDA                     fsr2h           equ	4058
    61   000FD9                     fsr2l           equ	4057
    62   000FEF                     indf0           equ	4079
    63   000FE7                     indf1           equ	4071
    64   000FDF                     indf2           equ	4063
    65   000FF2                     intcon          equ	4082
    66   000000                     nvmcon          equ	0
    67   000FF9                     pcl             equ	4089
    68   000FFA                     pclath          equ	4090
    69   000FFB                     pclatu          equ	4091
    70   000FEB                     plusw0          equ	4075
    71   000FE3                     plusw1          equ	4067
    72   000FDB                     plusw2          equ	4059
    73   000FED                     postdec0        equ	4077
    74   000FE5                     postdec1        equ	4069
    75   000FDD                     postdec2        equ	4061
    76   000FEE                     postinc0        equ	4078
    77   000FE6                     postinc1        equ	4070
    78   000FDE                     postinc2        equ	4062
    79   000FEC                     preinc0         equ	4076
    80   000FE4                     preinc1         equ	4068
    81   000FDC                     preinc2         equ	4060
    82   000FF3                     prod            equ	4083
    83   000FF4                     prodh           equ	4084
    84   000FF3                     prodl           equ	4083
    85   000FD8                     status          equ	4056
    86   000FF5                     tablat          equ	4085
    87   000FF6                     tblptr          equ	4086
    88   000FF7                     tblptrh         equ	4087
    89   000FF6                     tblptrl         equ	4086
    90   000FF8                     tblptru         equ	4088
    91   000FFD                     tosl            equ	4093
    92   000FE8                     wreg            equ	4072
    93   000F80                     PORTA           equ	3968	;# 
    94   000F81                     PORTB           equ	3969	;# 
    95   000F82                     PORTC           equ	3970	;# 
    96   000F83                     PORTD           equ	3971	;# 
    97   000F84                     PORTE           equ	3972	;# 
    98   000F89                     LATA            equ	3977	;# 
    99   000F8A                     LATB            equ	3978	;# 
   100   000F8B                     LATC            equ	3979	;# 
   101   000F8C                     LATD            equ	3980	;# 
   102   000F8D                     LATE            equ	3981	;# 
   103   000F92                     TRISA           equ	3986	;# 
   104   000F92                     DDRA            equ	3986	;# 
   105   000F93                     TRISB           equ	3987	;# 
   106   000F93                     DDRB            equ	3987	;# 
   107   000F94                     TRISC           equ	3988	;# 
   108   000F94                     DDRC            equ	3988	;# 
   109   000F95                     TRISD           equ	3989	;# 
   110   000F95                     DDRD            equ	3989	;# 
   111   000F96                     TRISE           equ	3990	;# 
   112   000F96                     DDRE            equ	3990	;# 
   113   000F9B                     OSCTUNE         equ	3995	;# 
   114   000F9D                     PIE1            equ	3997	;# 
   115   000F9E                     PIR1            equ	3998	;# 
   116   000F9F                     IPR1            equ	3999	;# 
   117   000FA0                     PIE2            equ	4000	;# 
   118   000FA1                     PIR2            equ	4001	;# 
   119   000FA2                     IPR2            equ	4002	;# 
   120   000FA6                     EECON1          equ	4006	;# 
   121   000FA7                     EECON2          equ	4007	;# 
   122   000FA8                     EEDATA          equ	4008	;# 
   123   000FA9                     EEADR           equ	4009	;# 
   124   000FAB                     RCSTA           equ	4011	;# 
   125   000FAB                     RCSTA1          equ	4011	;# 
   126   000FAC                     TXSTA           equ	4012	;# 
   127   000FAC                     TXSTA1          equ	4012	;# 
   128   000FAD                     TXREG           equ	4013	;# 
   129   000FAD                     TXREG1          equ	4013	;# 
   130   000FAE                     RCREG           equ	4014	;# 
   131   000FAE                     RCREG1          equ	4014	;# 
   132   000FAF                     SPBRG           equ	4015	;# 
   133   000FAF                     SPBRG1          equ	4015	;# 
   134   000FB0                     SPBRGH          equ	4016	;# 
   135   000FB1                     T3CON           equ	4017	;# 
   136   000FB2                     TMR3            equ	4018	;# 
   137   000FB2                     TMR3L           equ	4018	;# 
   138   000FB3                     TMR3H           equ	4019	;# 
   139   000FB4                     CMCON           equ	4020	;# 
   140   000FB5                     CVRCON          equ	4021	;# 
   141   000FB6                     ECCP1AS         equ	4022	;# 
   142   000FB6                     ECCPAS          equ	4022	;# 
   143   000FB7                     PWM1CON         equ	4023	;# 
   144   000FB7                     ECCP1DEL        equ	4023	;# 
   145   000FB8                     BAUDCON         equ	4024	;# 
   146   000FB8                     BAUDCTL         equ	4024	;# 
   147   000FBA                     CCP2CON         equ	4026	;# 
   148   000FBB                     CCPR2           equ	4027	;# 
   149   000FBB                     CCPR2L          equ	4027	;# 
   150   000FBC                     CCPR2H          equ	4028	;# 
   151   000FBD                     CCP1CON         equ	4029	;# 
   152   000FBE                     CCPR1           equ	4030	;# 
   153   000FBE                     CCPR1L          equ	4030	;# 
   154   000FBF                     CCPR1H          equ	4031	;# 
   155   000FC0                     ADCON2          equ	4032	;# 
   156   000FC1                     ADCON1          equ	4033	;# 
   157   000FC2                     ADCON0          equ	4034	;# 
   158   000FC3                     ADRES           equ	4035	;# 
   159   000FC3                     ADRESL          equ	4035	;# 
   160   000FC4                     ADRESH          equ	4036	;# 
   161   000FC5                     SSPCON2         equ	4037	;# 
   162   000FC6                     SSPCON1         equ	4038	;# 
   163   000FC7                     SSPSTAT         equ	4039	;# 
   164   000FC8                     SSPADD          equ	4040	;# 
   165   000FC9                     SSPBUF          equ	4041	;# 
   166   000FCA                     T2CON           equ	4042	;# 
   167   000FCB                     PR2             equ	4043	;# 
   168   000FCB                     MEMCON          equ	4043	;# 
   169   000FCC                     TMR2            equ	4044	;# 
   170   000FCD                     T1CON           equ	4045	;# 
   171   000FCE                     TMR1            equ	4046	;# 
   172   000FCE                     TMR1L           equ	4046	;# 
   173   000FCF                     TMR1H           equ	4047	;# 
   174   000FD0                     RCON            equ	4048	;# 
   175   000FD1                     WDTCON          equ	4049	;# 
   176   000FD2                     HLVDCON         equ	4050	;# 
   177   000FD2                     LVDCON          equ	4050	;# 
   178   000FD3                     OSCCON          equ	4051	;# 
   179   000FD5                     T0CON           equ	4053	;# 
   180   000FD6                     TMR0            equ	4054	;# 
   181   000FD6                     TMR0L           equ	4054	;# 
   182   000FD7                     TMR0H           equ	4055	;# 
   183   000FD8                     STATUS          equ	4056	;# 
   184   000FD9                     FSR2            equ	4057	;# 
   185   000FD9                     FSR2L           equ	4057	;# 
   186   000FDA                     FSR2H           equ	4058	;# 
   187   000FDB                     PLUSW2          equ	4059	;# 
   188   000FDC                     PREINC2         equ	4060	;# 
   189   000FDD                     POSTDEC2        equ	4061	;# 
   190   000FDE                     POSTINC2        equ	4062	;# 
   191   000FDF                     INDF2           equ	4063	;# 
   192   000FE0                     BSR             equ	4064	;# 
   193   000FE1                     FSR1            equ	4065	;# 
   194   000FE1                     FSR1L           equ	4065	;# 
   195   000FE2                     FSR1H           equ	4066	;# 
   196   000FE3                     PLUSW1          equ	4067	;# 
   197   000FE4                     PREINC1         equ	4068	;# 
   198   000FE5                     POSTDEC1        equ	4069	;# 
   199   000FE6                     POSTINC1        equ	4070	;# 
   200   000FE7                     INDF1           equ	4071	;# 
   201   000FE8                     WREG            equ	4072	;# 
   202   000FE9                     FSR0            equ	4073	;# 
   203   000FE9                     FSR0L           equ	4073	;# 
   204   000FEA                     FSR0H           equ	4074	;# 
   205   000FEB                     PLUSW0          equ	4075	;# 
   206   000FEC                     PREINC0         equ	4076	;# 
   207   000FED                     POSTDEC0        equ	4077	;# 
   208   000FEE                     POSTINC0        equ	4078	;# 
   209   000FEF                     INDF0           equ	4079	;# 
   210   000FF0                     INTCON3         equ	4080	;# 
   211   000FF1                     INTCON2         equ	4081	;# 
   212   000FF2                     INTCON          equ	4082	;# 
   213   000FF3                     PROD            equ	4083	;# 
   214   000FF3                     PRODL           equ	4083	;# 
   215   000FF4                     PRODH           equ	4084	;# 
   216   000FF5                     TABLAT          equ	4085	;# 
   217   000FF6                     TBLPTR          equ	4086	;# 
   218   000FF6                     TBLPTRL         equ	4086	;# 
   219   000FF7                     TBLPTRH         equ	4087	;# 
   220   000FF8                     TBLPTRU         equ	4088	;# 
   221   000FF9                     PCLAT           equ	4089	;# 
   222   000FF9                     PC              equ	4089	;# 
   223   000FF9                     PCL             equ	4089	;# 
   224   000FFA                     PCLATH          equ	4090	;# 
   225   000FFB                     PCLATU          equ	4091	;# 
   226   000FFC                     STKPTR          equ	4092	;# 
   227   000FFD                     TOS             equ	4093	;# 
   228   000FFD                     TOSL            equ	4093	;# 
   229   000FFE                     TOSH            equ	4094	;# 
   230   000FFF                     TOSU            equ	4095	;# 
   231                           
   232                           	psect	smallconst
   233   000600                     __psmallconst:
   234                           	callstack 0
   235   000600  00                 	db	0
   236   000601                     _ID:
   237                           	callstack 0
   238   000601  0007               	dw	7
   239   000603  0004               	dw	4
   240   000605  0001               	dw	1
   241   000607  0001               	dw	1
   242   000609  0002               	dw	2
   243   00060B  0000               	dw	0
   244   00060D  0006               	dw	6
   245   00060F  0009               	dw	9
   246   000611                     __end_of_ID:
   247                           	callstack 0
   248   000F93                     _TRISB          set	3987
   249   000F92                     _TRISAbits      set	3986
   250   000F8A                     _LATB           set	3978
   251   000F9D                     _PIE1bits       set	3997
   252   000FC0                     _ADCON2bits     set	4032
   253   000FD3                     _OSCCONbits     set	4051
   254   000FC1                     _ADCON1bits     set	4033
   255   000FC2                     _ADCON0bits     set	4034
   256   000F9E                     _PIR1bits       set	3998
   257   000FC4                     _ADRESH         set	4036
   258   000FF2                     _INTCONbits     set	4082
   259   000611  00                 	db	0	; dummy byte at the end
   260   000001                     __activetblptr  equ	1
   261                           
   262                           ; #config settings
   263                           
   264                           	psect	cinit
   265   000784                     __pcinit:
   266                           	callstack 0
   267   000784                     start_initialization:
   268                           	callstack 0
   269   000784                     __initialization:
   270                           	callstack 0
   271   000784                     end_of_initialization:
   272                           	callstack 0
   273   000784                     __end_of__initialization:
   274                           	callstack 0
   275   000784  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276   000786  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277   000788  0E00               	movlw	low (__Lsmallconst shr (0+16))
   278   00078A  6EF8               	movwf	tblptru,c
   279   00078C  0E06               	movlw	high __Lsmallconst
   280   00078E  6EF7               	movwf	tblptrh,c
   281   000790  0100               	movlb	0
   282   000792  EFA2  F003         	goto	_main	;jump to C main() function
   283                           
   284                           	psect	cstackCOMRAM
   285   000001                     __pcstackCOMRAM:
   286                           	callstack 0
   287   000001                     ?___awdiv:
   288                           	callstack 0
   289   000001                     ___awdiv@dividend:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x0
   293   000001                     	ds	2
   294   000003                     ___awdiv@divisor:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x2
   298   000003                     	ds	2
   299   000005                     ___awdiv@counter:
   300                           	callstack 0
   301   000005                     
   302                           ; 1 bytes @ 0x4
   303   000005                     	ds	1
   304   000006                     ___awdiv@sign:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x5
   308   000006                     	ds	1
   309   000007                     ___awdiv@quotient:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x6
   313   000007                     	ds	2
   314   000009                     ??_H_ISR:
   315                           
   316                           ; 1 bytes @ 0x8
   317   000009                     	ds	7
   318   000010                     H_ISR@value:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xF
   322   000010                     	ds	2
   323   000012                     
   324                           ; 1 bytes @ 0x11
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 30 in file "basic.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   344 ;;      Params:         0       0       0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0       0       0
   347 ;;      Totals:         0       0       0       0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels required when called: 2
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text0
   358   000744                     __ptext0:
   359                           	callstack 0
   360   000744                     _main:
   361                           	callstack 29
   362   000744                     
   363                           ;basic.c: 32:     ADCON2bits.ADCS = 0b000;
   364   000744  8092               	bsf	146,0,c	;volatile
   365   000746                     
   366                           ;basic.c: 33:     ADCON2bits.ACQT = 0b001;
   367   000746  50C1               	movf	193,w,c	;volatile
   368   000748  0BF0               	andlw	-16
   369   00074A  090E               	iorlw	14
   370   00074C  6EC1               	movwf	193,c	;volatile
   371                           
   372                           ;basic.c: 34:     ADCON0bits.ADON = 1;
   373   00074E  0EC3               	movlw	-61
   374   000750  16C2               	andwf	194,f,c	;volatile
   375   000752                     
   376                           ;basic.c: 37: 
   377   000752  6A93               	clrf	147,c	;volatile
   378   000754                     
   379                           ;basic.c: 38:     PIE1bits.ADIE = 1;
   380   000754  6A8A               	clrf	138,c	;volatile
   381                           
   382                           ;basic.c: 41:     INTCONbits.GIE = 1;
   383   000756  50D3               	movf	211,w,c	;volatile
   384   000758  0B8F               	andlw	-113
   385   00075A  0940               	iorlw	64
   386   00075C  6ED3               	movwf	211,c	;volatile
   387   00075E                     
   388                           ;basic.c: 44:     ADCON0bits.GO = 1;
   389   00075E  98C1               	bcf	193,4,c	;volatile
   390   000760                     
   391                           ;basic.c: 45: 
   392   000760  9AC1               	bcf	193,5,c	;volatile
   393                           
   394                           ;basic.c: 46:     while (1);
   395   000762  0EF8               	movlw	-8
   396   000764  16C0               	andwf	192,f,c	;volatile
   397                           
   398                           ;basic.c: 47: 
   399   000766  50C0               	movf	192,w,c	;volatile
   400   000768  0BC7               	andlw	-57
   401   00076A  0908               	iorlw	8
   402   00076C  6EC0               	movwf	192,c	;volatile
   403   00076E                     
   404                           ;basic.c: 48:     return;
   405   00076E  80C2               	bsf	194,0,c	;volatile
   406   000770                     
   407                           ;basic.c: 49: }
   408   000770  9EC0               	bcf	192,7,c	;volatile
   409   000772  8C9D               	bsf	157,6,c	;volatile
   410   000774  9C9E               	bcf	158,6,c	;volatile
   411   000776  8CF2               	bsf	242,6,c	;volatile
   412   000778  8EF2               	bsf	242,7,c	;volatile
   413   00077A  82C2               	bsf	194,1,c	;volatile
   414   00077C                     l36:
   415   00077C  EFBE  F003         	goto	l36
   416   000780  EF07  F000         	goto	start
   417   000784                     __end_of_main:
   418                           	callstack 0
   419                           
   420 ;; *************** function _H_ISR *****************
   421 ;; Defined at:
   422 ;;		line 16 in file "basic.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  value           2   15[COMRAM] int 
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   436 ;;      Params:         0       0       0       0       0       0       0
   437 ;;      Locals:         2       0       0       0       0       0       0
   438 ;;      Temps:          7       0       0       0       0       0       0
   439 ;;      Totals:         9       0       0       0       0       0       0
   440 ;;Total ram usage:        9 bytes
   441 ;; Hardware stack levels used: 1
   442 ;; Hardware stack levels required when called: 1
   443 ;; This function calls:
   444 ;;		___awdiv
   445 ;; This function is called by:
   446 ;;		Interrupt level 2
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	intcode
   451   000008                     __pintcode:
   452                           	callstack 0
   453   000008                     _H_ISR:
   454                           	callstack 29
   455                           
   456                           ;incstack = 0
   457   000008  8212               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   458   00000A  ED6A  F003         	call	int_func,f	;refresh shadow registers
   459                           
   460                           	psect	intcode_body
   461   0006D4                     __pintcode_body:
   462                           	callstack 29
   463   0006D4                     int_func:
   464                           	callstack 29
   465   0006D4  0006               	pop		; remove dummy address from shadow register refresh
   466   0006D6  CFF3 F00A          	movff	prodl,??_H_ISR+1
   467   0006DA  CFF4 F00B          	movff	prodh,??_H_ISR+2
   468   0006DE  CFF6 F00C          	movff	tblptrl,??_H_ISR+3
   469   0006E2  CFF7 F00D          	movff	tblptrh,??_H_ISR+4
   470   0006E6  CFF8 F00E          	movff	tblptru,??_H_ISR+5
   471   0006EA  CFF5 F00F          	movff	tablat,??_H_ISR+6
   472   0006EE                     
   473                           ;basic.c: 18:     TRISAbits.RA0 = 1;
   474   0006EE  CFC4 F010          	movff	4036,H_ISR@value	;volatile
   475   0006F2  6A11               	clrf	(H_ISR@value+1)^0,c
   476   0006F4                     
   477                           ;basic.c: 20:     ADCON0bits.CHS = 0b0000;
   478   0006F4  C010  F001         	movff	H_ISR@value,___awdiv@dividend
   479   0006F8  C011  F002         	movff	H_ISR@value+1,___awdiv@dividend+1
   480   0006FC  0E00               	movlw	0
   481   0006FE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   482   000700  0E20               	movlw	32
   483   000702  6E03               	movwf	___awdiv@divisor^0,c
   484   000704  EC09  F003         	call	___awdiv	;wreg free
   485   000708  5001               	movf	?___awdiv^0,w,c
   486   00070A  0D02               	mullw	2
   487   00070C  50F3               	movf	243,w,c
   488   00070E  0F01               	addlw	low _ID
   489   000710  6E09               	movwf	??_H_ISR^0,c
   490   000712  C009  FFF6         	movff	??_H_ISR,tblptrl
   491   000716                     	if	0	;There is only one active tblptr byte
   492   000716                     	endif
   493   000716                     	if	0	;tblptru may be non-zero
   494   000716                     	endif
   495   000716                     	if	0	;tblptru may be non-zero
   496   000716                     	endif
   497   000716  0008               	tblrd		*
   498   000718  CFF5 FF8A          	movff	tablat,3978	;volatile
   499   00071C                     
   500                           ;basic.c: 23:     TRISB = 0;
   501   00071C  9C9E               	bcf	158,6,c	;volatile
   502   00071E                     
   503                           ;basic.c: 26: 
   504   00071E  0EFA               	movlw	250
   505   000720                     i2u13_47:
   506   000720  D000               	nop2	
   507   000722  2EE8               	decfsz	wreg,f,c
   508   000724  D7FD               	bra	i2u13_47
   509   000726                     
   510                           ;basic.c: 27:     OSCCONbits.IRCF = 0b100;
   511   000726  82C2               	bsf	194,1,c	;volatile
   512   000728  C00F  FFF5         	movff	??_H_ISR+6,tablat
   513   00072C  C00E  FFF8         	movff	??_H_ISR+5,tblptru
   514   000730  C00D  FFF7         	movff	??_H_ISR+4,tblptrh
   515   000734  C00C  FFF6         	movff	??_H_ISR+3,tblptrl
   516   000738  C00B  FFF4         	movff	??_H_ISR+2,prodh
   517   00073C  C00A  FFF3         	movff	??_H_ISR+1,prodl
   518   000740  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   519   000742  0011               	retfie		f
   520   000744                     __end_of_H_ISR:
   521                           	callstack 0
   522                           
   523 ;; *************** function ___awdiv *****************
   524 ;; Defined at:
   525 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;  dividend        2    0[COMRAM] int 
   528 ;;  divisor         2    2[COMRAM] int 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  quotient        2    6[COMRAM] int 
   531 ;;  sign            1    5[COMRAM] unsigned char 
   532 ;;  counter         1    4[COMRAM] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  2    0[COMRAM] int 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   542 ;;      Params:         4       0       0       0       0       0       0
   543 ;;      Locals:         4       0       0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0
   545 ;;      Totals:         8       0       0       0       0       0       0
   546 ;;Total ram usage:        8 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_H_ISR
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text2
   556   000612                     __ptext2:
   557                           	callstack 0
   558   000612                     ___awdiv:
   559                           	callstack 29
   560   000612  6A06               	clrf	___awdiv@sign^0,c
   561   000614  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   562   000616  EF11  F003         	goto	i2u7_40
   563   00061A  EF0F  F003         	goto	i2u7_41
   564   00061E                     i2u7_41:
   565   00061E  EF17  F003         	goto	i2l803
   566   000622                     i2u7_40:
   567   000622  6C03               	negf	___awdiv@divisor^0,c
   568   000624  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   569   000626  B0D8               	btfsc	status,0,c
   570   000628  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   571   00062A  0E01               	movlw	1
   572   00062C  6E06               	movwf	___awdiv@sign^0,c
   573   00062E                     i2l803:
   574   00062E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   575   000630  EF1E  F003         	goto	i2u8_40
   576   000634  EF1C  F003         	goto	i2u8_41
   577   000638                     i2u8_41:
   578   000638  EF24  F003         	goto	i2l809
   579   00063C                     i2u8_40:
   580   00063C  6C01               	negf	___awdiv@dividend^0,c
   581   00063E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   582   000640  B0D8               	btfsc	status,0,c
   583   000642  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   584   000644  0E01               	movlw	1
   585   000646  1A06               	xorwf	___awdiv@sign^0,f,c
   586   000648                     i2l809:
   587   000648  0E00               	movlw	0
   588   00064A  6E08               	movwf	(___awdiv@quotient+1)^0,c
   589   00064C  0E00               	movlw	0
   590   00064E  6E07               	movwf	___awdiv@quotient^0,c
   591   000650  5003               	movf	___awdiv@divisor^0,w,c
   592   000652  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   593   000654  B4D8               	btfsc	status,2,c
   594   000656  EF2F  F003         	goto	i2u9_41
   595   00065A  EF31  F003         	goto	i2u9_40
   596   00065E                     i2u9_41:
   597   00065E  EF59  F003         	goto	i2l831
   598   000662                     i2u9_40:
   599   000662  0E01               	movlw	1
   600   000664  6E05               	movwf	___awdiv@counter^0,c
   601   000666  EF39  F003         	goto	i2l817
   602   00066A                     i2l815:
   603   00066A  90D8               	bcf	status,0,c
   604   00066C  3603               	rlcf	___awdiv@divisor^0,f,c
   605   00066E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   606   000670  2A05               	incf	___awdiv@counter^0,f,c
   607   000672                     i2l817:
   608   000672  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   609   000674  EF3E  F003         	goto	i2u10_41
   610   000678  EF40  F003         	goto	i2u10_40
   611   00067C                     i2u10_41:
   612   00067C  EF35  F003         	goto	i2l815
   613   000680                     i2u10_40:
   614   000680                     i2l819:
   615   000680  90D8               	bcf	status,0,c
   616   000682  3607               	rlcf	___awdiv@quotient^0,f,c
   617   000684  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   618   000686  5003               	movf	___awdiv@divisor^0,w,c
   619   000688  5C01               	subwf	___awdiv@dividend^0,w,c
   620   00068A  5004               	movf	(___awdiv@divisor+1)^0,w,c
   621   00068C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   622   00068E  A0D8               	btfss	status,0,c
   623   000690  EF4C  F003         	goto	i2u11_41
   624   000694  EF4E  F003         	goto	i2u11_40
   625   000698                     i2u11_41:
   626   000698  EF53  F003         	goto	i2l827
   627   00069C                     i2u11_40:
   628   00069C  5003               	movf	___awdiv@divisor^0,w,c
   629   00069E  5E01               	subwf	___awdiv@dividend^0,f,c
   630   0006A0  5004               	movf	(___awdiv@divisor+1)^0,w,c
   631   0006A2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   632   0006A4  8007               	bsf	___awdiv@quotient^0,0,c
   633   0006A6                     i2l827:
   634   0006A6  90D8               	bcf	status,0,c
   635   0006A8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   636   0006AA  3203               	rrcf	___awdiv@divisor^0,f,c
   637   0006AC  2E05               	decfsz	___awdiv@counter^0,f,c
   638   0006AE  EF40  F003         	goto	i2l819
   639   0006B2                     i2l831:
   640   0006B2  5006               	movf	___awdiv@sign^0,w,c
   641   0006B4  B4D8               	btfsc	status,2,c
   642   0006B6  EF5F  F003         	goto	i2u12_41
   643   0006BA  EF61  F003         	goto	i2u12_40
   644   0006BE                     i2u12_41:
   645   0006BE  EF65  F003         	goto	i2l835
   646   0006C2                     i2u12_40:
   647   0006C2  6C07               	negf	___awdiv@quotient^0,c
   648   0006C4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   649   0006C6  B0D8               	btfsc	status,0,c
   650   0006C8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   651   0006CA                     i2l835:
   652   0006CA  C007  F001         	movff	___awdiv@quotient,?___awdiv
   653   0006CE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   654   0006D2  0012               	return		;funcret
   655   0006D4                     __end_of___awdiv:
   656                           	callstack 0
   657                           
   658                           	psect	rparam
   659   000001                     ___rparam_used  equ	1
   660   000000                     ___param_bank   equ	0
   661   000000                     __Lparam        equ	__Lrparam
   662   000000                     __Hparam        equ	__Hrparam
   663                           
   664                           	psect	temp
   665   000012                     btemp:
   666                           	callstack 0
   667   000012                     	ds	1
   668   000012                     int$flags       set	btemp
   669   000013                     wtemp8          set	btemp+1
   670   000013                     ttemp5          set	btemp+1
   671   000016                     ttemp6          set	btemp+4
   672   00001A                     ttemp7          set	btemp+8
   673                           
   674                           	psect	idloc
   675                           
   676                           ;Config register IDLOC0 @ 0x200000
   677                           ;	unspecified, using default values
   678   200000                     	org	2097152
   679   200000  FF                 	db	255
   680                           
   681                           ;Config register IDLOC1 @ 0x200001
   682                           ;	unspecified, using default values
   683   200001                     	org	2097153
   684   200001  FF                 	db	255
   685                           
   686                           ;Config register IDLOC2 @ 0x200002
   687                           ;	unspecified, using default values
   688   200002                     	org	2097154
   689   200002  FF                 	db	255
   690                           
   691                           ;Config register IDLOC3 @ 0x200003
   692                           ;	unspecified, using default values
   693   200003                     	org	2097155
   694   200003  FF                 	db	255
   695                           
   696                           ;Config register IDLOC4 @ 0x200004
   697                           ;	unspecified, using default values
   698   200004                     	org	2097156
   699   200004  FF                 	db	255
   700                           
   701                           ;Config register IDLOC5 @ 0x200005
   702                           ;	unspecified, using default values
   703   200005                     	org	2097157
   704   200005  FF                 	db	255
   705                           
   706                           ;Config register IDLOC6 @ 0x200006
   707                           ;	unspecified, using default values
   708   200006                     	org	2097158
   709   200006  FF                 	db	255
   710                           
   711                           ;Config register IDLOC7 @ 0x200007
   712                           ;	unspecified, using default values
   713   200007                     	org	2097159
   714   200007  FF                 	db	255
   715                           
   716                           	psect	config
   717                           
   718                           ; Padding undefined space
   719   300000                     	org	3145728
   720   300000  FF                 	db	255
   721                           
   722                           ;Config register CONFIG1H @ 0x300001
   723                           ;	Oscillator Selection bits
   724                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   725                           ;	Fail-Safe Clock Monitor Enable bit
   726                           ;	FCMEN = 0x0, unprogrammed default
   727                           ;	Internal/External Oscillator Switchover bit
   728                           ;	IESO = 0x0, unprogrammed default
   729   300001                     	org	3145729
   730   300001  08                 	db	8
   731                           
   732                           ;Config register CONFIG2L @ 0x300002
   733                           ;	Power-up Timer Enable bit
   734                           ;	PWRT = OFF, PWRT disabled
   735                           ;	Brown-out Reset Enable bits
   736                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
   737                           ;	Brown Out Reset Voltage bits
   738                           ;	BORV = 0x3, unprogrammed default
   739   300002                     	org	3145730
   740   300002  1B                 	db	27
   741                           
   742                           ;Config register CONFIG2H @ 0x300003
   743                           ;	Watchdog Timer Enable bit
   744                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   745                           ;	Watchdog Timer Postscale Select bits
   746                           ;	WDTPS = 0xF, unprogrammed default
   747   300003                     	org	3145731
   748   300003  1E                 	db	30
   749                           
   750                           ; Padding undefined space
   751   300004                     	org	3145732
   752   300004  FF                 	db	255
   753                           
   754                           ;Config register CONFIG3H @ 0x300005
   755                           ;	CCP2 MUX bit
   756                           ;	CCP2MX = 0x1, unprogrammed default
   757                           ;	PORTB A/D Enable bit
   758                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   759                           ;	Low-Power Timer1 Oscillator Enable bit
   760                           ;	LPT1OSC = 0x0, unprogrammed default
   761                           ;	MCLR Pin Enable bit
   762                           ;	MCLRE = 0x1, unprogrammed default
   763   300005                     	org	3145733
   764   300005  81                 	db	129
   765                           
   766                           ;Config register CONFIG4L @ 0x300006
   767                           ;	Stack Full/Underflow Reset Enable bit
   768                           ;	STVREN = 0x1, unprogrammed default
   769                           ;	Single-Supply ICSP Enable bit
   770                           ;	LVP = OFF, Single-Supply ICSP disabled
   771                           ;	Extended Instruction Set Enable bit
   772                           ;	XINST = 0x0, unprogrammed default
   773                           ;	Background Debugger Enable bit
   774                           ;	DEBUG = 0x1, unprogrammed default
   775   300006                     	org	3145734
   776   300006  81                 	db	129
   777                           
   778                           ; Padding undefined space
   779   300007                     	org	3145735
   780   300007  FF                 	db	255
   781                           
   782                           ;Config register CONFIG5L @ 0x300008
   783                           ;	unspecified, using default values
   784                           ;	Code Protection bit
   785                           ;	CP0 = 0x1, unprogrammed default
   786                           ;	Code Protection bit
   787                           ;	CP1 = 0x1, unprogrammed default
   788                           ;	Code Protection bit
   789                           ;	CP2 = 0x1, unprogrammed default
   790                           ;	Code Protection bit
   791                           ;	CP3 = 0x1, unprogrammed default
   792   300008                     	org	3145736
   793   300008  0F                 	db	15
   794                           
   795                           ;Config register CONFIG5H @ 0x300009
   796                           ;	Boot Block Code Protection bit
   797                           ;	CPB = 0x1, unprogrammed default
   798                           ;	Data EEPROM Code Protection bit
   799                           ;	CPD = OFF, Data EEPROM not code-protected
   800   300009                     	org	3145737
   801   300009  C0                 	db	192
   802                           
   803                           ;Config register CONFIG6L @ 0x30000A
   804                           ;	unspecified, using default values
   805                           ;	Write Protection bit
   806                           ;	WRT0 = 0x1, unprogrammed default
   807                           ;	Write Protection bit
   808                           ;	WRT1 = 0x1, unprogrammed default
   809                           ;	Write Protection bit
   810                           ;	WRT2 = 0x1, unprogrammed default
   811                           ;	Write Protection bit
   812                           ;	WRT3 = 0x1, unprogrammed default
   813   30000A                     	org	3145738
   814   30000A  0F                 	db	15
   815                           
   816                           ;Config register CONFIG6H @ 0x30000B
   817                           ;	unspecified, using default values
   818                           ;	Configuration Register Write Protection bit
   819                           ;	WRTC = 0x1, unprogrammed default
   820                           ;	Boot Block Write Protection bit
   821                           ;	WRTB = 0x1, unprogrammed default
   822                           ;	Data EEPROM Write Protection bit
   823                           ;	WRTD = 0x1, unprogrammed default
   824   30000B                     	org	3145739
   825   30000B  E0                 	db	224
   826                           
   827                           ;Config register CONFIG7L @ 0x30000C
   828                           ;	unspecified, using default values
   829                           ;	Table Read Protection bit
   830                           ;	EBTR0 = 0x1, unprogrammed default
   831                           ;	Table Read Protection bit
   832                           ;	EBTR1 = 0x1, unprogrammed default
   833                           ;	Table Read Protection bit
   834                           ;	EBTR2 = 0x1, unprogrammed default
   835                           ;	Table Read Protection bit
   836                           ;	EBTR3 = 0x1, unprogrammed default
   837   30000C                     	org	3145740
   838   30000C  0F                 	db	15
   839                           
   840                           ;Config register CONFIG7H @ 0x30000D
   841                           ;	unspecified, using default values
   842                           ;	Boot Block Table Read Protection bit
   843                           ;	EBTRB = 0x1, unprogrammed default
   844   30000D                     	org	3145741
   845   30000D  40                 	db	64
   846                           tosu	equ	0xFFF
   847                           tosh	equ	0xFFE
   848                           tosl	equ	0xFFD
   849                           stkptr	equ	0xFFC
   850                           pclatu	equ	0xFFB
   851                           pclath	equ	0xFFA
   852                           pcl	equ	0xFF9
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           prodh	equ	0xFF4
   858                           prodl	equ	0xFF3
   859                           indf0	equ	0xFEF
   860                           postinc0	equ	0xFEE
   861                           postdec0	equ	0xFED
   862                           preinc0	equ	0xFEC
   863                           plusw0	equ	0xFEB
   864                           fsr0h	equ	0xFEA
   865                           fsr0l	equ	0xFE9
   866                           wreg	equ	0xFE8
   867                           indf1	equ	0xFE7
   868                           postinc1	equ	0xFE6
   869                           postdec1	equ	0xFE5
   870                           preinc1	equ	0xFE4
   871                           plusw1	equ	0xFE3
   872                           fsr1h	equ	0xFE2
   873                           fsr1l	equ	0xFE1
   874                           bsr	equ	0xFE0
   875                           indf2	equ	0xFDF
   876                           postinc2	equ	0xFDE
   877                           postdec2	equ	0xFDD
   878                           preinc2	equ	0xFDC
   879                           plusw2	equ	0xFDB
   880                           fsr2h	equ	0xFDA
   881                           fsr2l	equ	0xFD9
   882                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17      17
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    _H_ISR->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _H_ISR                                                9     9      0     325
                                              8 COMRAM     9     9      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _H_ISR (ROOT)
   ___awdiv

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM          126      0       0      0.0%
BITBANK0           128      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BITBIGSFR_1llh      33      0       0      0.0%
BITBIGSFRh          17      0       0      0.0%
BITBIGSFR_1h        17      0       0      0.0%
BITBIGSFRl          10      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
COMRAM             126     17      17     13.5%
BANK0              128      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              244      0       0      0.0%
BIGRAM            1523      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      17      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 02 13:40:20 2025

                     l36 077C                       l37 077C                       _ID 0601  
           ___awdiv@sign 0006                      l771 0746                      l781 076E  
                    l773 0752                      l791 0778                      l783 0770  
                    l775 0754                      l793 077A                      l785 0772  
                    l777 075E                      l769 0744                      l787 0774  
                    l779 0760                      l789 0776                      wreg 0FE8  
                   _LATB 0F8A                     i2l31 0728                     _main 0744  
                   btemp 0012                     prodh 0FF4                     prodl 0FF3  
                   start 000E             ___param_bank 0000                    ?_main 0001  
        __end_of___awdiv 06D4          ___awdiv@divisor 0003                    i2l273 06D2  
                  i2l801 062A                    i2l811 0650                    i2l803 062E  
                  i2l821 0686                    i2l813 0662                    i2l805 063C  
                  i2l823 069C                    i2l815 066A                    i2l831 06B2  
                  i2l807 0644                    i2l833 06C2                    i2l825 06A4  
                  i2l817 0672                    i2l809 0648                    i2l841 06F4  
                  i2l835 06CA                    i2l827 06A6                    i2l819 0680  
                  i2l843 071C                    i2l829 06AC                    i2l845 071E  
                  i2l847 0726                    i2l839 06EE                    i2l795 0612  
        ___awdiv@counter 0005                    i2l797 0614                    i2l799 0622  
                  _H_ISR 0008                    _TRISB 0F93                    tablat 0FF5  
                  ttemp5 0013                    ttemp6 0016                    ttemp7 001A  
                  status 0FD8                    wtemp8 0013          __initialization 0784  
           __end_of_main 0784                   ??_main 0012            __activetblptr 0001  
                 ?_H_ISR 0001                   _ADRESH 0FC4         ___awdiv@dividend 0001  
                 i2u7_40 0622                   i2u7_41 061E                   i2u8_40 063C  
                 i2u8_41 0638                   i2u9_40 0662                   i2u9_41 065E  
              ??___awdiv 0005         ___awdiv@quotient 0007                   isa$std 0001  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0080  __end_of__initialization 0784  
          ___rparam_used 0001            __end_of_H_ISR 0744           __pcstackCOMRAM 0001  
             __end_of_ID 0611                  ??_H_ISR 0009                  i2u10_40 0680  
                i2u10_41 067C                  i2u11_40 069C                  i2u11_41 0698  
                i2u12_40 06C2                  i2u12_41 06BE                  i2u13_47 0720  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 0612  
           __psmallconst 0600                  __pcinit 0784                  __ramtop 0600  
                __ptext0 0744                  __ptext2 0612           __pintcode_body 06D4  
   end_of_initialization 0784                  int_func 06D4                _TRISAbits 0F92  
    start_initialization 0784                __pintcode 0008                 ?___awdiv 0001  
             H_ISR@value 0010              __smallconst 0600                 _PIE1bits 0F9D  
               _PIR1bits 0F9E               _ADCON0bits 0FC2               _ADCON1bits 0FC1  
             _ADCON2bits 0FC0                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600                 isa$xinst 0000                 int$flags 0012  
             _INTCONbits 0FF2                 intlevel2 0000               _OSCCONbits 0FD3  
