

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jan 02 17:02:26 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 25/07/2024 GMT
    39                           ; 
    40                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4520 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F80                     PORTA           equ	3968	;# 
   114   000F81                     PORTB           equ	3969	;# 
   115   000F82                     PORTC           equ	3970	;# 
   116   000F83                     PORTD           equ	3971	;# 
   117   000F84                     PORTE           equ	3972	;# 
   118   000F89                     LATA            equ	3977	;# 
   119   000F8A                     LATB            equ	3978	;# 
   120   000F8B                     LATC            equ	3979	;# 
   121   000F8C                     LATD            equ	3980	;# 
   122   000F8D                     LATE            equ	3981	;# 
   123   000F92                     TRISA           equ	3986	;# 
   124   000F92                     DDRA            equ	3986	;# 
   125   000F93                     TRISB           equ	3987	;# 
   126   000F93                     DDRB            equ	3987	;# 
   127   000F94                     TRISC           equ	3988	;# 
   128   000F94                     DDRC            equ	3988	;# 
   129   000F95                     TRISD           equ	3989	;# 
   130   000F95                     DDRD            equ	3989	;# 
   131   000F96                     TRISE           equ	3990	;# 
   132   000F96                     DDRE            equ	3990	;# 
   133   000F9B                     OSCTUNE         equ	3995	;# 
   134   000F9D                     PIE1            equ	3997	;# 
   135   000F9E                     PIR1            equ	3998	;# 
   136   000F9F                     IPR1            equ	3999	;# 
   137   000FA0                     PIE2            equ	4000	;# 
   138   000FA1                     PIR2            equ	4001	;# 
   139   000FA2                     IPR2            equ	4002	;# 
   140   000FA6                     EECON1          equ	4006	;# 
   141   000FA7                     EECON2          equ	4007	;# 
   142   000FA8                     EEDATA          equ	4008	;# 
   143   000FA9                     EEADR           equ	4009	;# 
   144   000FAB                     RCSTA           equ	4011	;# 
   145   000FAB                     RCSTA1          equ	4011	;# 
   146   000FAC                     TXSTA           equ	4012	;# 
   147   000FAC                     TXSTA1          equ	4012	;# 
   148   000FAD                     TXREG           equ	4013	;# 
   149   000FAD                     TXREG1          equ	4013	;# 
   150   000FAE                     RCREG           equ	4014	;# 
   151   000FAE                     RCREG1          equ	4014	;# 
   152   000FAF                     SPBRG           equ	4015	;# 
   153   000FAF                     SPBRG1          equ	4015	;# 
   154   000FB0                     SPBRGH          equ	4016	;# 
   155   000FB1                     T3CON           equ	4017	;# 
   156   000FB2                     TMR3            equ	4018	;# 
   157   000FB2                     TMR3L           equ	4018	;# 
   158   000FB3                     TMR3H           equ	4019	;# 
   159   000FB4                     CMCON           equ	4020	;# 
   160   000FB5                     CVRCON          equ	4021	;# 
   161   000FB6                     ECCP1AS         equ	4022	;# 
   162   000FB6                     ECCPAS          equ	4022	;# 
   163   000FB7                     PWM1CON         equ	4023	;# 
   164   000FB7                     ECCP1DEL        equ	4023	;# 
   165   000FB8                     BAUDCON         equ	4024	;# 
   166   000FB8                     BAUDCTL         equ	4024	;# 
   167   000FBA                     CCP2CON         equ	4026	;# 
   168   000FBB                     CCPR2           equ	4027	;# 
   169   000FBB                     CCPR2L          equ	4027	;# 
   170   000FBC                     CCPR2H          equ	4028	;# 
   171   000FBD                     CCP1CON         equ	4029	;# 
   172   000FBE                     CCPR1           equ	4030	;# 
   173   000FBE                     CCPR1L          equ	4030	;# 
   174   000FBF                     CCPR1H          equ	4031	;# 
   175   000FC0                     ADCON2          equ	4032	;# 
   176   000FC1                     ADCON1          equ	4033	;# 
   177   000FC2                     ADCON0          equ	4034	;# 
   178   000FC3                     ADRES           equ	4035	;# 
   179   000FC3                     ADRESL          equ	4035	;# 
   180   000FC4                     ADRESH          equ	4036	;# 
   181   000FC5                     SSPCON2         equ	4037	;# 
   182   000FC6                     SSPCON1         equ	4038	;# 
   183   000FC7                     SSPSTAT         equ	4039	;# 
   184   000FC8                     SSPADD          equ	4040	;# 
   185   000FC9                     SSPBUF          equ	4041	;# 
   186   000FCA                     T2CON           equ	4042	;# 
   187   000FCB                     PR2             equ	4043	;# 
   188   000FCB                     MEMCON          equ	4043	;# 
   189   000FCC                     TMR2            equ	4044	;# 
   190   000FCD                     T1CON           equ	4045	;# 
   191   000FCE                     TMR1            equ	4046	;# 
   192   000FCE                     TMR1L           equ	4046	;# 
   193   000FCF                     TMR1H           equ	4047	;# 
   194   000FD0                     RCON            equ	4048	;# 
   195   000FD1                     WDTCON          equ	4049	;# 
   196   000FD2                     HLVDCON         equ	4050	;# 
   197   000FD2                     LVDCON          equ	4050	;# 
   198   000FD3                     OSCCON          equ	4051	;# 
   199   000FD5                     T0CON           equ	4053	;# 
   200   000FD6                     TMR0            equ	4054	;# 
   201   000FD6                     TMR0L           equ	4054	;# 
   202   000FD7                     TMR0H           equ	4055	;# 
   203   000FD8                     STATUS          equ	4056	;# 
   204   000FD9                     FSR2            equ	4057	;# 
   205   000FD9                     FSR2L           equ	4057	;# 
   206   000FDA                     FSR2H           equ	4058	;# 
   207   000FDB                     PLUSW2          equ	4059	;# 
   208   000FDC                     PREINC2         equ	4060	;# 
   209   000FDD                     POSTDEC2        equ	4061	;# 
   210   000FDE                     POSTINC2        equ	4062	;# 
   211   000FDF                     INDF2           equ	4063	;# 
   212   000FE0                     BSR             equ	4064	;# 
   213   000FE1                     FSR1            equ	4065	;# 
   214   000FE1                     FSR1L           equ	4065	;# 
   215   000FE2                     FSR1H           equ	4066	;# 
   216   000FE3                     PLUSW1          equ	4067	;# 
   217   000FE4                     PREINC1         equ	4068	;# 
   218   000FE5                     POSTDEC1        equ	4069	;# 
   219   000FE6                     POSTINC1        equ	4070	;# 
   220   000FE7                     INDF1           equ	4071	;# 
   221   000FE8                     WREG            equ	4072	;# 
   222   000FE9                     FSR0            equ	4073	;# 
   223   000FE9                     FSR0L           equ	4073	;# 
   224   000FEA                     FSR0H           equ	4074	;# 
   225   000FEB                     PLUSW0          equ	4075	;# 
   226   000FEC                     PREINC0         equ	4076	;# 
   227   000FED                     POSTDEC0        equ	4077	;# 
   228   000FEE                     POSTINC0        equ	4078	;# 
   229   000FEF                     INDF0           equ	4079	;# 
   230   000FF0                     INTCON3         equ	4080	;# 
   231   000FF1                     INTCON2         equ	4081	;# 
   232   000FF2                     INTCON          equ	4082	;# 
   233   000FF3                     PROD            equ	4083	;# 
   234   000FF3                     PRODL           equ	4083	;# 
   235   000FF4                     PRODH           equ	4084	;# 
   236   000FF5                     TABLAT          equ	4085	;# 
   237   000FF6                     TBLPTR          equ	4086	;# 
   238   000FF6                     TBLPTRL         equ	4086	;# 
   239   000FF7                     TBLPTRH         equ	4087	;# 
   240   000FF8                     TBLPTRU         equ	4088	;# 
   241   000FF9                     PCLAT           equ	4089	;# 
   242   000FF9                     PC              equ	4089	;# 
   243   000FF9                     PCL             equ	4089	;# 
   244   000FFA                     PCLATH          equ	4090	;# 
   245   000FFB                     PCLATU          equ	4091	;# 
   246   000FFC                     STKPTR          equ	4092	;# 
   247   000FFD                     TOS             equ	4093	;# 
   248   000FFD                     TOSL            equ	4093	;# 
   249   000FFE                     TOSH            equ	4094	;# 
   250   000FFF                     TOSU            equ	4095	;# 
   251   007D5C                     _CREN           set	32092
   252   007CF5                     _RCIF           set	31989
   253   000F8B                     _LATC           set	3979
   254   000F89                     _LATA           set	3977
   255   000F94                     _TRISC          set	3988
   256   000F93                     _TRISB          set	3987
   257   000F92                     _TRISA          set	3986
   258   000F94                     _TRISCbits      set	3988
   259   000F92                     _TRISAbits      set	3986
   260   000FC3                     _ADRESL         set	4035
   261   000FC4                     _ADRESH         set	4036
   262   000FBE                     _CCPR1L         set	4030
   263   000F9F                     _IPR1bits       set	3999
   264   000FAF                     _SPBRG          set	4015
   265   000FB8                     _BAUDCONbits    set	4024
   266   000FD0                     _RCONbits       set	4048
   267   000F9D                     _PIE1bits       set	3997
   268   000FCD                     _T1CONbits      set	4045
   269   000F9E                     _PIR1bits       set	3998
   270   000FCE                     _TMR1L          set	4046
   271   000FCF                     _TMR1H          set	4047
   272   000FCD                     _T1CON          set	4045
   273   000FCB                     _PR2            set	4043
   274   000FBD                     _CCP1CONbits    set	4029
   275   000FCA                     _T2CONbits      set	4042
   276   000FC0                     _ADCON2bits     set	4032
   277   000FC2                     _ADCON0bits     set	4034
   278   000FC1                     _ADCON1bits     set	4033
   279   000FD3                     _OSCCONbits     set	4051
   280   000FAB                     _RCSTAbits      set	4011
   281   000FAE                     _RCREG          set	4014
   282   000FAD                     _TXREG          set	4013
   283   000FAC                     _TXSTAbits      set	4012
   284   000FF2                     _INTCONbits     set	4082
   285                           
   286                           	psect	smallconst
   287   000600                     __psmallconst:
   288                           	callstack 0
   289   000600  00                 	db	0
   290   000601                     STR_2:
   291   000601  25                 	db	37
   292   000602  64                 	db	100	;'d'
   293   000603  25                 	db	37
   294   000604  64                 	db	100	;'d'
   295   000605  00                 	db	0
   296   000606                     STR_1:
   297   000606  08                 	db	8
   298   000607  08                 	db	8
   299   000608  00                 	db	0
   300   000609  00                 	db	0	; dummy byte at the end
   301   000001                     __activetblptr  equ	1
   302                           
   303                           ; #config settings
   304                           
   305                           	psect	cinit
   306   000E54                     __pcinit:
   307                           	callstack 0
   308   000E54                     start_initialization:
   309                           	callstack 0
   310   000E54                     __initialization:
   311                           	callstack 0
   312                           
   313                           ; Clear objects allocated to BANK1 (100 bytes)
   314   000E54  EE01  F000         	lfsr	0,__pbssBANK1
   315   000E58  0E64               	movlw	100
   316   000E5A                     clear_0:
   317   000E5A  6AEE               	clrf	postinc0,c
   318   000E5C  06E8               	decf	wreg,f,c
   319   000E5E  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to COMRAM (47 bytes)
   322   000E60  EE00  F001         	lfsr	0,__pbssCOMRAM
   323   000E64  0E2F               	movlw	47
   324   000E66                     clear_1:
   325   000E66  6AEE               	clrf	postinc0,c
   326   000E68  06E8               	decf	wreg,f,c
   327   000E6A  E1FD               	bnz	clear_1
   328   000E6C                     end_of_initialization:
   329                           	callstack 0
   330   000E6C                     __end_of__initialization:
   331                           	callstack 0
   332   000E6C  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   333   000E6E  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   334   000E70  0E00               	movlw	low (__Lsmallconst shr (0+16))
   335   000E72  6EF8               	movwf	tblptru,c
   336   000E74  0E06               	movlw	high __Lsmallconst
   337   000E76  6EF7               	movwf	tblptrh,c
   338   000E78  0100               	movlb	0
   339   000E7A  EF97  F006         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMRAM
   342   000001                     __pbssCOMRAM:
   343                           	callstack 0
   344   000001                     _dbuf:
   345                           	callstack 0
   346   000001                     	ds	32
   347   000021                     _width:
   348                           	callstack 0
   349   000021                     	ds	2
   350   000023                     _prec:
   351                           	callstack 0
   352   000023                     	ds	2
   353   000025                     _two:
   354                           	callstack 0
   355   000025                     	ds	2
   356   000027                     _one:
   357                           	callstack 0
   358   000027                     	ds	2
   359   000029                     _ccc:
   360                           	callstack 0
   361   000029                     	ds	2
   362   00002B                     _current_servo_angle:
   363                           	callstack 0
   364   00002B                     	ds	2
   365   00002D                     _buffer_size:
   366                           	callstack 0
   367   00002D                     	ds	2
   368   00002F                     _flags:
   369                           	callstack 0
   370   00002F                     	ds	1
   371                           
   372                           	psect	bssBANK1
   373   000100                     __pbssBANK1:
   374                           	callstack 0
   375   000100                     _buffer:
   376                           	callstack 0
   377   000100                     	ds	100
   378                           
   379                           	psect	cstackBANK0
   380   000080                     __pcstackBANK0:
   381                           	callstack 0
   382   000080                     putch@data:
   383                           	callstack 0
   384   000080                     
   385                           ; 1 bytes @ 0x0
   386   000080                     	ds	1
   387   000081                     ??_MyusartRead:
   388                           
   389                           ; 1 bytes @ 0x1
   390   000081                     	ds	1
   391   000082                     MyusartRead@data:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x2
   395   000082                     	ds	1
   396   000083                     ??_Lo_ISR:
   397                           
   398                           ; 1 bytes @ 0x3
   399   000083                     	ds	5
   400   000088                     keyboard_input@str:
   401                           	callstack 0
   402   000088                     strcpy@dest:
   403                           	callstack 0
   404   000088                     ClearBuffer@i:
   405                           	callstack 0
   406   000088                     
   407                           ; 1 bytes @ 0x8
   408   000088                     	ds	1
   409   000089                     strcpy@src:
   410                           	callstack 0
   411   000089                     
   412                           ; 1 bytes @ 0x9
   413   000089                     	ds	2
   414   00008B                     strcpy@d:
   415                           	callstack 0
   416   00008B                     
   417                           ; 1 bytes @ 0xB
   418   00008B                     	ds	1
   419   00008C                     ?_GetString:
   420                           	callstack 0
   421   00008C                     GetString@str:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0xC
   425   00008C                     	ds	2
   426   00008E                     
   427                           ; 1 bytes @ 0xE
   428   00008E                     	ds	1
   429   00008F                     main@str:
   430                           	callstack 0
   431   00008F                     
   432                           ; 1 bytes @ 0xF
   433   00008F                     	ds	100
   434                           
   435                           	psect	cstackCOMRAM
   436   000030                     __pcstackCOMRAM:
   437                           	callstack 0
   438   000030                     ?___awdiv:
   439                           	callstack 0
   440   000030                     ?___awmod:
   441                           	callstack 0
   442   000030                     i2putch@data:
   443                           	callstack 0
   444   000030                     variable_register_changed@value:
   445                           	callstack 0
   446   000030                     ___awdiv@dividend:
   447                           	callstack 0
   448   000030                     ___awmod@dividend:
   449                           	callstack 0
   450   000030                     
   451                           ; 1 bytes @ 0x0
   452   000030                     	ds	1
   453   000031                     fputc@c:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x1
   457   000031                     	ds	1
   458   000032                     ___awdiv@divisor:
   459                           	callstack 0
   460   000032                     ___awmod@divisor:
   461                           	callstack 0
   462   000032                     
   463                           ; 1 bytes @ 0x2
   464   000032                     	ds	1
   465   000033                     fputc@fp:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x3
   469   000033                     	ds	1
   470   000034                     ___awdiv@counter:
   471                           	callstack 0
   472   000034                     ___awmod@counter:
   473                           	callstack 0
   474   000034                     
   475                           ; 1 bytes @ 0x4
   476   000034                     	ds	1
   477   000035                     ___awdiv@sign:
   478                           	callstack 0
   479   000035                     ___awmod@sign:
   480                           	callstack 0
   481   000035                     ??_fputc:
   482                           
   483                           ; 1 bytes @ 0x5
   484   000035                     	ds	1
   485   000036                     ?_abs:
   486                           	callstack 0
   487   000036                     ___awdiv@quotient:
   488                           	callstack 0
   489   000036                     abs@a:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x6
   493   000036                     	ds	2
   494   000038                     ??_abs:
   495                           
   496                           ; 1 bytes @ 0x8
   497   000038                     	ds	2
   498   00003A                     vfpfcnvrt@fp:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0xA
   502   00003A                     	ds	2
   503   00003C                     vfpfcnvrt@fmt:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0xC
   507   00003C                     	ds	1
   508   00003D                     vfpfcnvrt@ap:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0xD
   512   00003D                     	ds	1
   513   00003E                     ??_vfpfcnvrt:
   514                           
   515                           ; 1 bytes @ 0xE
   516   00003E                     	ds	1
   517   00003F                     vfpfcnvrt@done:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0xF
   521   00003F                     	ds	1
   522   000040                     vfpfcnvrt@cp:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x10
   526   000040                     	ds	1
   527   000041                     vfpfcnvrt@convarg:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x11
   531   000041                     	ds	4
   532   000045                     vfpfcnvrt@c:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x15
   536   000045                     	ds	1
   537   000046                     ?_vfprintf:
   538                           	callstack 0
   539   000046                     vfprintf@fp:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x16
   543   000046                     	ds	2
   544   000048                     vfprintf@fmt:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x18
   548   000048                     	ds	1
   549   000049                     vfprintf@ap:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x19
   553   000049                     	ds	1
   554   00004A                     vfprintf@cfmt:
   555                           	callstack 0
   556   00004A                     
   557                           ; 1 bytes @ 0x1A
   558   00004A                     	ds	1
   559   00004B                     ?_printf:
   560                           	callstack 0
   561   00004B                     printf@fmt:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x1B
   565   00004B                     	ds	5
   566   000050                     printf@ap:
   567                           	callstack 0
   568   000050                     
   569                           ; 1 bytes @ 0x20
   570   000050                     	ds	1
   571   000051                     ??_H_ISR:
   572                           
   573                           ; 1 bytes @ 0x21
   574   000051                     	ds	10
   575   00005B                     H_ISR@value:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x2B
   579   00005B                     	ds	2
   580                           
   581 ;;
   582 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   583 ;;
   584 ;; *************** function _main *****************
   585 ;; Defined at:
   586 ;;		line 338 in file "2b.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  str           100   15[BANK0 ] unsigned char [100]
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   600 ;;      Params:         0       0       0       0       0       0       0
   601 ;;      Locals:         0     100       0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0
   603 ;;      Totals:         0     100       0       0       0       0       0
   604 ;;Total ram usage:      100 bytes
   605 ;; Hardware stack levels required when called: 11
   606 ;; This function calls:
   607 ;;		_GetString
   608 ;;		_Initialize
   609 ;;		_keyboard_input
   610 ;; This function is called by:
   611 ;;		Startup code after reset
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text0
   616   000D2E                     __ptext0:
   617                           	callstack 0
   618   000D2E                     _main:
   619                           	callstack 20
   620   000D2E  EC8D  F005         	call	_Initialize	;wreg free
   621   000D32                     l1876:
   622   000D32  0E8F               	movlw	low main@str
   623   000D34  0100               	movlb	0	; () banked
   624   000D36  6F8C               	movwf	GetString@str& (0+255),b
   625   000D38  ECD6  F005         	call	_GetString	;wreg free
   626   000D3C  0100               	movlb	0	; () banked
   627   000D3E  518C               	movf	?_GetString& (0+255),w,b
   628   000D40  118D               	iorwf	(?_GetString+1)& (0+255),w,b
   629   000D42  B4D8               	btfsc	status,2,c
   630   000D44  EFA6  F006         	goto	u1191
   631   000D48  EFA8  F006         	goto	u1190
   632   000D4C                     u1191:
   633   000D4C  EFAC  F006         	goto	l1880
   634   000D50                     u1190:
   635   000D50                     
   636                           ; BSR set to: 0
   637   000D50  0E8F               	movlw	low main@str
   638   000D52  6F88               	movwf	keyboard_input@str& (0+255),b
   639   000D54  EC4C  F007         	call	_keyboard_input	;wreg free
   640   000D58                     l1880:
   641   000D58  B2C2               	btfsc	194,1,c	;volatile
   642   000D5A  EFB1  F006         	goto	u1201
   643   000D5E  EFB3  F006         	goto	u1200
   644   000D62                     u1201:
   645   000D62  EF99  F006         	goto	l1876
   646   000D66                     u1200:
   647   000D66  82C2               	bsf	194,1,c	;volatile
   648   000D68  EF99  F006         	goto	l1876
   649   000D6C  EF36  F000         	goto	start
   650   000D70                     __end_of_main:
   651                           	callstack 0
   652                           
   653 ;; *************** function _keyboard_input *****************
   654 ;; Defined at:
   655 ;;		line 323 in file "2b.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;  str             1    8[BANK0 ] PTR unsigned char 
   658 ;;		 -> main@str(100), 
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		None
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   670 ;;      Params:         0       1       0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0       0       0
   673 ;;      Totals:         0       1       0       0       0       0       0
   674 ;;Total ram usage:        1 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; Hardware stack levels required when called: 9
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text1
   685   000E98                     __ptext1:
   686                           	callstack 0
   687   000E98                     _keyboard_input:
   688                           	callstack 21
   689   000E98  0012               	return		;funcret
   690   000E9A                     __end_of_keyboard_input:
   691                           	callstack 0
   692                           
   693 ;; *************** function _Initialize *****************
   694 ;; Defined at:
   695 ;;		line 126 in file "2b.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   709 ;;      Params:         0       0       0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0       0       0
   712 ;;      Totals:         0       0       0       0       0       0       0
   713 ;;Total ram usage:        0 bytes
   714 ;; Hardware stack levels used: 1
   715 ;; Hardware stack levels required when called: 9
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text2
   724   000B1A                     __ptext2:
   725                           	callstack 0
   726   000B1A                     _Initialize:
   727                           	callstack 21
   728   000B1A  50D3               	movf	211,w,c	;volatile
   729   000B1C  0B8F               	andlw	-113
   730   000B1E  0960               	iorlw	96
   731   000B20  6ED3               	movwf	211,c	;volatile
   732   000B22  8092               	bsf	146,0,c	;volatile
   733   000B24  50C1               	movf	193,w,c	;volatile
   734   000B26  0BF0               	andlw	-16
   735   000B28  090E               	iorlw	14
   736   000B2A  6EC1               	movwf	193,c	;volatile
   737   000B2C  0EC3               	movlw	-61
   738   000B2E  16C2               	andwf	194,f,c	;volatile
   739   000B30  98C1               	bcf	193,4,c	;volatile
   740   000B32  9AC1               	bcf	193,5,c	;volatile
   741   000B34  0EF8               	movlw	-8
   742   000B36  16C0               	andwf	192,f,c	;volatile
   743   000B38  50C0               	movf	192,w,c	;volatile
   744   000B3A  0BC7               	andlw	-57
   745   000B3C  0908               	iorlw	8
   746   000B3E  6EC0               	movwf	192,c	;volatile
   747   000B40  80C2               	bsf	194,0,c	;volatile
   748   000B42  8EC0               	bsf	192,7,c	;volatile
   749   000B44  84CA               	bsf	202,2,c	;volatile
   750   000B46  0E03               	movlw	3
   751   000B48  12CA               	iorwf	202,f,c	;volatile
   752   000B4A  50BD               	movf	189,w,c	;volatile
   753   000B4C  0BF0               	andlw	-16
   754   000B4E  090C               	iorlw	12
   755   000B50  6EBD               	movwf	189,c	;volatile
   756   000B52  0E9B               	movlw	155
   757   000B54  6ECB               	movwf	203,c	;volatile
   758   000B56  9494               	bcf	148,2,c	;volatile
   759   000B58  0EA0               	movlw	160
   760   000B5A  6ECD               	movwf	205,c	;volatile
   761   000B5C  68CF               	setf	207,c	;volatile
   762   000B5E  0E06               	movlw	6
   763   000B60  6ECE               	movwf	206,c	;volatile
   764   000B62  909E               	bcf	158,0,c	;volatile
   765   000B64  80CD               	bsf	205,0,c	;volatile
   766   000B66  0EF1               	movlw	241
   767   000B68  1692               	andwf	146,f,c	;volatile
   768   000B6A  0E01               	movlw	1
   769   000B6C  6E93               	movwf	147,c	;volatile
   770   000B6E  6A94               	clrf	148,c	;volatile
   771   000B70  0EF1               	movlw	241
   772   000B72  1689               	andwf	137,f,c	;volatile
   773   000B74  6A8B               	clrf	139,c	;volatile
   774   000B76  92F2               	bcf	242,1,c	;volatile
   775   000B78  88F2               	bsf	242,4,c	;volatile
   776   000B7A  8C9D               	bsf	157,6,c	;volatile
   777   000B7C  9C9E               	bcf	158,6,c	;volatile
   778   000B7E  8CF2               	bsf	242,6,c	;volatile
   779   000B80  8EF2               	bsf	242,7,c	;volatile
   780   000B82  8ED0               	bsf	208,7,c	;volatile
   781   000B84  8EF2               	bsf	242,7,c	;volatile
   782   000B86  8CF2               	bsf	242,6,c	;volatile
   783   000B88  8C94               	bsf	148,6,c	;volatile
   784   000B8A  8E94               	bsf	148,7,c	;volatile
   785   000B8C  98AC               	bcf	172,4,c	;volatile
   786   000B8E  96B8               	bcf	184,3,c	;volatile
   787   000B90  94AC               	bcf	172,2,c	;volatile
   788   000B92  0E33               	movlw	51
   789   000B94  6EAF               	movwf	175,c	;volatile
   790   000B96  8EAB               	bsf	171,7,c	;volatile
   791   000B98  989E               	bcf	158,4,c	;volatile
   792   000B9A  9A9E               	bcf	158,5,c	;volatile
   793   000B9C  8AAC               	bsf	172,5,c	;volatile
   794   000B9E  88AB               	bsf	171,4,c	;volatile
   795   000BA0  989D               	bcf	157,4,c	;volatile
   796   000BA2  989F               	bcf	159,4,c	;volatile
   797   000BA4  8A9D               	bsf	157,5,c	;volatile
   798   000BA6  9A9F               	bcf	159,5,c	;volatile
   799   000BA8  82C2               	bsf	194,1,c	;volatile
   800   000BAA  0012               	return		;funcret
   801   000BAC                     __end_of_Initialize:
   802                           	callstack 0
   803                           
   804 ;; *************** function _GetString *****************
   805 ;; Defined at:
   806 ;;		line 97 in file "2b.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  str             1   12[BANK0 ] PTR unsigned char 
   809 ;;		 -> main@str(100), 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  2   12[BANK0 ] int 
   814 ;; Registers used:
   815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   821 ;;      Params:         0       2       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0
   823 ;;      Temps:          0       1       0       0       0       0       0
   824 ;;      Totals:         0       3       0       0       0       0       0
   825 ;;Total ram usage:        3 bytes
   826 ;; Hardware stack levels used: 1
   827 ;; Hardware stack levels required when called: 10
   828 ;; This function calls:
   829 ;;		_ClearBuffer
   830 ;;		_strcpy
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text3
   837   000BAC                     __ptext3:
   838                           	callstack 0
   839   000BAC                     _GetString:
   840                           	callstack 20
   841   000BAC  0EFF               	movlw	low (_buffer+65535)
   842   000BAE  242D               	addwf	_buffer_size^0,w,c
   843   000BB0  6ED9               	movwf	fsr2l,c
   844   000BB2  0E00               	movlw	high (_buffer+65535)
   845   000BB4  202E               	addwfc	(_buffer_size+1)^0,w,c
   846   000BB6  6EDA               	movwf	fsr2h,c
   847   000BB8  0E0D               	movlw	13
   848   000BBA  18DE               	xorwf	postinc2,w,c
   849   000BBC  A4D8               	btfss	status,2,c
   850   000BBE  EFE3  F005         	goto	u1161
   851   000BC2  EFE5  F005         	goto	u1160
   852   000BC6                     u1161:
   853   000BC6  EF01  F006         	goto	l1778
   854   000BCA                     u1160:
   855   000BCA  062D               	decf	_buffer_size^0,f,c
   856   000BCC  A0D8               	btfss	status,0,c
   857   000BCE  062E               	decf	(_buffer_size+1)^0,f,c
   858   000BD0  0E00               	movlw	low _buffer
   859   000BD2  242D               	addwf	_buffer_size^0,w,c
   860   000BD4  6ED9               	movwf	fsr2l,c
   861   000BD6  0E01               	movlw	high _buffer
   862   000BD8  202E               	addwfc	(_buffer_size+1)^0,w,c
   863   000BDA  6EDA               	movwf	fsr2h,c
   864   000BDC  6ADF               	clrf	indf2,c
   865   000BDE  C08C  F088         	movff	GetString@str,strcpy@dest
   866   000BE2  0E00               	movlw	low _buffer
   867   000BE4  0100               	movlb	0	; () banked
   868   000BE6  6F89               	movwf	strcpy@src& (0+255),b
   869   000BE8  0E01               	movlw	high _buffer
   870   000BEA  6F8A               	movwf	(strcpy@src+1)& (0+255),b
   871   000BEC  EC12  F007         	call	_strcpy	;wreg free
   872   000BF0  ECB8  F006         	call	_ClearBuffer	;wreg free
   873   000BF4  0E00               	movlw	0
   874   000BF6  0100               	movlb	0	; () banked
   875   000BF8  6F8D               	movwf	(?_GetString+1)& (0+255),b
   876   000BFA  0E01               	movlw	1
   877   000BFC  6F8C               	movwf	?_GetString& (0+255),b
   878   000BFE  EF0A  F006         	goto	l113
   879   000C02                     l1778:
   880   000C02  0100               	movlb	0	; () banked
   881   000C04  518C               	movf	GetString@str& (0+255),w,b
   882   000C06  6ED9               	movwf	fsr2l,c
   883   000C08  6ADA               	clrf	fsr2h,c
   884   000C0A  6ADF               	clrf	indf2,c
   885   000C0C                     
   886                           ; BSR set to: 0
   887   000C0C  0E00               	movlw	0
   888   000C0E  6F8D               	movwf	(?_GetString+1)& (0+255),b
   889   000C10  0E00               	movlw	0
   890   000C12  6F8C               	movwf	?_GetString& (0+255),b
   891   000C14                     l113:
   892                           
   893                           ; BSR set to: 0
   894   000C14  0012               	return		;funcret
   895   000C16                     __end_of_GetString:
   896                           	callstack 0
   897                           
   898 ;; *************** function _strcpy *****************
   899 ;; Defined at:
   900 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  dest            1    8[BANK0 ] PTR unsigned char 
   903 ;;		 -> main@str(100), 
   904 ;;  src             2    9[BANK0 ] PTR const unsigned char 
   905 ;;		 -> buffer(100), 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  d               1   11[BANK0 ] PTR unsigned char 
   908 ;;		 -> main@str(100), 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    8[BANK0 ] PTR unsigned char 
   911 ;; Registers used:
   912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   918 ;;      Params:         0       3       0       0       0       0       0
   919 ;;      Locals:         0       1       0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0
   921 ;;      Totals:         0       4       0       0       0       0       0
   922 ;;Total ram usage:        4 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; Hardware stack levels required when called: 9
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_GetString
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text4
   933   000E24                     __ptext4:
   934                           	callstack 0
   935   000E24                     _strcpy:
   936                           	callstack 20
   937   000E24  C088  F08B         	movff	strcpy@dest,strcpy@d
   938   000E28                     l1748:
   939   000E28  C089  FFD9         	movff	strcpy@src,fsr2l
   940   000E2C  C08A  FFDA         	movff	strcpy@src+1,fsr2h
   941   000E30  0100               	movlb	0	; () banked
   942   000E32  4B89               	infsnz	strcpy@src& (0+255),f,b
   943   000E34  2B8A               	incf	(strcpy@src+1)& (0+255),f,b
   944   000E36  2B8B               	incf	strcpy@d& (0+255),f,b
   945   000E38  058B               	decf	strcpy@d& (0+255),w,b
   946   000E3A  6EE1               	movwf	fsr1l,c
   947   000E3C  6AE2               	clrf	fsr1h,c
   948   000E3E  CFDF FFE7          	movff	indf2,indf1
   949   000E42  50E7               	movf	indf1,w,c
   950   000E44  A4D8               	btfss	status,2,c
   951   000E46  EF27  F007         	goto	u1131
   952   000E4A  EF29  F007         	goto	u1130
   953   000E4E                     u1131:
   954   000E4E  EF14  F007         	goto	l1748
   955   000E52                     u1130:
   956   000E52                     
   957                           ; BSR set to: 0
   958   000E52  0012               	return		;funcret
   959   000E54                     __end_of_strcpy:
   960                           	callstack 0
   961                           
   962 ;; *************** function _ClearBuffer *****************
   963 ;; Defined at:
   964 ;;		line 84 in file "2b.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  i               2    8[BANK0 ] int 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   978 ;;      Params:         0       0       0       0       0       0       0
   979 ;;      Locals:         0       2       0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0
   981 ;;      Totals:         0       2       0       0       0       0       0
   982 ;;Total ram usage:        2 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 9
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_GetString
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text5
   993   000D70                     __ptext5:
   994                           	callstack 0
   995   000D70                     _ClearBuffer:
   996                           	callstack 20
   997   000D70  0E00               	movlw	0
   998   000D72  0100               	movlb	0	; () banked
   999   000D74  6F89               	movwf	(ClearBuffer@i+1)& (0+255),b
  1000   000D76  0E00               	movlw	0
  1001   000D78  6F88               	movwf	ClearBuffer@i& (0+255),b
  1002   000D7A                     l1738:
  1003                           
  1004                           ; BSR set to: 0
  1005   000D7A  0E00               	movlw	low _buffer
  1006   000D7C  2588               	addwf	ClearBuffer@i& (0+255),w,b
  1007   000D7E  6ED9               	movwf	fsr2l,c
  1008   000D80  0E01               	movlw	high _buffer
  1009   000D82  2189               	addwfc	(ClearBuffer@i+1)& (0+255),w,b
  1010   000D84  6EDA               	movwf	fsr2h,c
  1011   000D86  6ADF               	clrf	indf2,c
  1012   000D88                     
  1013                           ; BSR set to: 0
  1014   000D88  4B88               	infsnz	ClearBuffer@i& (0+255),f,b
  1015   000D8A  2B89               	incf	(ClearBuffer@i+1)& (0+255),f,b
  1016   000D8C                     
  1017                           ; BSR set to: 0
  1018   000D8C  BF89               	btfsc	(ClearBuffer@i+1)& (0+255),7,b
  1019   000D8E  EFD2  F006         	goto	u1121
  1020   000D92  5189               	movf	(ClearBuffer@i+1)& (0+255),w,b
  1021   000D94  E109               	bnz	u1120
  1022   000D96  0E64               	movlw	100
  1023   000D98  5D88               	subwf	ClearBuffer@i& (0+255),w,b
  1024   000D9A  A0D8               	btfss	status,0,c
  1025   000D9C  EFD2  F006         	goto	u1121
  1026   000DA0  EFD4  F006         	goto	u1120
  1027   000DA4                     u1121:
  1028   000DA4  EFBD  F006         	goto	l1738
  1029   000DA8                     u1120:
  1030   000DA8                     
  1031                           ; BSR set to: 0
  1032   000DA8  0E00               	movlw	0
  1033   000DAA  6E2E               	movwf	(_buffer_size+1)^0,c
  1034   000DAC  0E00               	movlw	0
  1035   000DAE  6E2D               	movwf	_buffer_size^0,c
  1036   000DB0                     
  1037                           ; BSR set to: 0
  1038   000DB0  0012               	return		;funcret
  1039   000DB2                     __end_of_ClearBuffer:
  1040                           	callstack 0
  1041                           
  1042 ;; *************** function _Lo_ISR *****************
  1043 ;; Defined at:
  1044 ;;		line 109 in file "2b.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1058 ;;      Params:         0       0       0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0
  1060 ;;      Temps:          0       5       0       0       0       0       0
  1061 ;;      Totals:         0       5       0       0       0       0       0
  1062 ;;Total ram usage:        5 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 8
  1065 ;; This function calls:
  1066 ;;		_MyusartRead
  1067 ;; This function is called by:
  1068 ;;		Interrupt level 1
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	intcodelo
  1073   000018                     __pintcodelo:
  1074                           	callstack 0
  1075   000018                     _Lo_ISR:
  1076                           	callstack 20
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;incstack = 0
  1080   000018  805D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1081   00001A  CFD8 F083          	movff	status,??_Lo_ISR
  1082   00001E  CFE8 F084          	movff	wreg,??_Lo_ISR+1
  1083   000022  CFE0 F085          	movff	bsr,??_Lo_ISR+2
  1084   000026  CFD9 F086          	movff	fsr2l,??_Lo_ISR+3
  1085   00002A  CFDA F087          	movff	fsr2h,??_Lo_ISR+4
  1086   00002E  AA9E               	btfss	3998,5,c	;volatile
  1087   000030  EF1C  F000         	goto	i1u117_21
  1088   000034  EF1E  F000         	goto	i1u117_20
  1089   000038                     i1u117_21:
  1090   000038  EF2A  F000         	goto	i1l121
  1091   00003C                     i1u117_20:
  1092   00003C  A2AB               	btfss	171,1,c	;volatile
  1093   00003E  EF23  F000         	goto	i1u118_21
  1094   000042  EF25  F000         	goto	i1u118_20
  1095   000046                     i1u118_21:
  1096   000046  EF28  F000         	goto	i1l1870
  1097   00004A                     i1u118_20:
  1098   00004A  98AB               	bcf	4011,4,c	;volatile
  1099   00004C  0000               	nop	
  1100   00004E  88AB               	bsf	4011,4,c	;volatile
  1101   000050                     i1l1870:
  1102   000050  EC6F  F006         	call	_MyusartRead	;wreg free
  1103   000054                     i1l121:
  1104   000054  C087  FFDA         	movff	??_Lo_ISR+4,fsr2h
  1105   000058  C086  FFD9         	movff	??_Lo_ISR+3,fsr2l
  1106   00005C  C085  FFE0         	movff	??_Lo_ISR+2,bsr
  1107   000060  C084  FFE8         	movff	??_Lo_ISR+1,wreg
  1108   000064  C083  FFD8         	movff	??_Lo_ISR,status
  1109   000068  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1110   00006A  0010               	retfie	
  1111   00006C                     __end_of_Lo_ISR:
  1112                           	callstack 0
  1113                           
  1114 ;; *************** function _MyusartRead *****************
  1115 ;; Defined at:
  1116 ;;		line 90 in file "2b.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  data            1    2[BANK0 ] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1130 ;;      Params:         0       0       0       0       0       0       0
  1131 ;;      Locals:         0       1       0       0       0       0       0
  1132 ;;      Temps:          0       1       0       0       0       0       0
  1133 ;;      Totals:         0       2       0       0       0       0       0
  1134 ;;Total ram usage:        2 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 7
  1137 ;; This function calls:
  1138 ;;		_putch
  1139 ;; This function is called by:
  1140 ;;		_Lo_ISR
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text7
  1145   000CDE                     __ptext7:
  1146                           	callstack 0
  1147   000CDE                     _MyusartRead:
  1148                           	callstack 20
  1149   000CDE  CFAE F082          	movff	4014,MyusartRead@data	;volatile
  1150   000CE2  C082  F081         	movff	MyusartRead@data,??_MyusartRead
  1151   000CE6  0EE0               	movlw	224
  1152   000CE8  0100               	movlb	0	; () banked
  1153   000CEA  2781               	addwf	??_MyusartRead& (0+255),f,b
  1154   000CEC  0E5E               	movlw	94
  1155   000CEE  6581               	cpfsgt	??_MyusartRead& (0+255),b
  1156   000CF0  EF7C  F006         	goto	i1u114_21
  1157   000CF4  EF7E  F006         	goto	i1u114_20
  1158   000CF8                     i1u114_21:
  1159   000CF8  EF89  F006         	goto	i1l1758
  1160   000CFC                     i1u114_20:
  1161   000CFC                     
  1162                           ; BSR set to: 0
  1163   000CFC  0E0D               	movlw	13
  1164   000CFE  1982               	xorwf	MyusartRead@data& (0+255),w,b
  1165   000D00  B4D8               	btfsc	status,2,c
  1166   000D02  EF85  F006         	goto	i1u115_21
  1167   000D06  EF87  F006         	goto	i1u115_20
  1168   000D0A                     i1u115_21:
  1169   000D0A  EF89  F006         	goto	i1l1758
  1170   000D0E                     i1u115_20:
  1171   000D0E  EF96  F006         	goto	i1l109
  1172   000D12                     i1l1758:
  1173                           
  1174                           ; BSR set to: 0
  1175   000D12  0E00               	movlw	low _buffer
  1176   000D14  242D               	addwf	_buffer_size^0,w,c
  1177   000D16  6ED9               	movwf	fsr2l,c
  1178   000D18  0E01               	movlw	high _buffer
  1179   000D1A  202E               	addwfc	(_buffer_size+1)^0,w,c
  1180   000D1C  6EDA               	movwf	fsr2h,c
  1181   000D1E  C082  FFDF         	movff	MyusartRead@data,indf2
  1182   000D22                     
  1183                           ; BSR set to: 0
  1184   000D22  4A2D               	infsnz	_buffer_size^0,f,c
  1185   000D24  2A2E               	incf	(_buffer_size+1)^0,f,c
  1186   000D26                     
  1187                           ; BSR set to: 0
  1188   000D26  5182               	movf	MyusartRead@data& (0+255),w,b
  1189   000D28  EC0B  F006         	call	_putch
  1190   000D2C                     i1l109:
  1191   000D2C  0012               	return		;funcret
  1192   000D2E                     __end_of_MyusartRead:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function _putch *****************
  1196 ;; Defined at:
  1197 ;;		line 72 in file "2b.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  data            1    wreg     unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  data            1    0[BANK0 ] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1211 ;;      Params:         0       0       0       0       0       0       0
  1212 ;;      Locals:         0       1       0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0
  1214 ;;      Totals:         0       1       0       0       0       0       0
  1215 ;;Total ram usage:        1 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 6
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_MyusartRead
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text8
  1226   000C16                     __ptext8:
  1227                           	callstack 0
  1228   000C16                     _putch:
  1229                           	callstack 20
  1230                           
  1231                           ;incstack = 0
  1232                           ;putch@data stored from wreg
  1233   000C16  0100               	movlb	0	; () banked
  1234   000C18  6F80               	movwf	putch@data& (0+255),b
  1235   000C1A  0E0A               	movlw	10
  1236   000C1C  0100               	movlb	0	; () banked
  1237   000C1E  1980               	xorwf	putch@data& (0+255),w,b
  1238   000C20  B4D8               	btfsc	status,2,c
  1239   000C22  EF15  F006         	goto	i1u107_21
  1240   000C26  EF17  F006         	goto	i1u107_20
  1241   000C2A                     i1u107_21:
  1242   000C2A  EF20  F006         	goto	i1l90
  1243   000C2E                     i1u107_20:
  1244   000C2E                     
  1245                           ; BSR set to: 0
  1246   000C2E  0E0D               	movlw	13
  1247   000C30  1980               	xorwf	putch@data& (0+255),w,b
  1248   000C32  A4D8               	btfss	status,2,c
  1249   000C34  EF1E  F006         	goto	i1u108_21
  1250   000C38  EF20  F006         	goto	i1u108_20
  1251   000C3C                     i1u108_21:
  1252   000C3C  EF34  F006         	goto	i1l97
  1253   000C40                     i1u108_20:
  1254   000C40                     i1l90:
  1255   000C40  A2AC               	btfss	172,1,c	;volatile
  1256   000C42  EF25  F006         	goto	i1u109_21
  1257   000C46  EF27  F006         	goto	i1u109_20
  1258   000C4A                     i1u109_21:
  1259   000C4A  EF20  F006         	goto	i1l90
  1260   000C4E                     i1u109_20:
  1261   000C4E  0E0D               	movlw	13
  1262   000C50  6EAD               	movwf	173,c	;volatile
  1263   000C52                     i1l93:
  1264   000C52  A2AC               	btfss	172,1,c	;volatile
  1265   000C54  EF2E  F006         	goto	i1u110_21
  1266   000C58  EF30  F006         	goto	i1u110_20
  1267   000C5C                     i1u110_21:
  1268   000C5C  EF29  F006         	goto	i1l93
  1269   000C60                     i1u110_20:
  1270   000C60  0E0A               	movlw	10
  1271   000C62  6EAD               	movwf	173,c	;volatile
  1272   000C64  EF3D  F006         	goto	i1l100
  1273   000C68                     i1l97:
  1274   000C68  A2AC               	btfss	172,1,c	;volatile
  1275   000C6A  EF39  F006         	goto	i1u111_21
  1276   000C6E  EF3B  F006         	goto	i1u111_20
  1277   000C72                     i1u111_21:
  1278   000C72  EF34  F006         	goto	i1l97
  1279   000C76                     i1u111_20:
  1280   000C76  C080  FFAD         	movff	putch@data,4013	;volatile
  1281   000C7A                     i1l100:
  1282   000C7A  0012               	return		;funcret
  1283   000C7C                     __end_of_putch:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _H_ISR *****************
  1287 ;; Defined at:
  1288 ;;		line 273 in file "2b.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  value           2   43[COMRAM] int 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1302 ;;      Params:         0       0       0       0       0       0       0
  1303 ;;      Locals:         2       0       0       0       0       0       0
  1304 ;;      Temps:         10       0       0       0       0       0       0
  1305 ;;      Totals:        12       0       0       0       0       0       0
  1306 ;;Total ram usage:       12 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 5
  1309 ;; This function calls:
  1310 ;;		_button_pressed
  1311 ;;		_printf
  1312 ;;		_variable_register_changed
  1313 ;; This function is called by:
  1314 ;;		Interrupt level 2
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	intcode
  1319   000008                     __pintcode:
  1320                           	callstack 0
  1321   000008                     _H_ISR:
  1322                           	callstack 20
  1323                           
  1324                           ;incstack = 0
  1325   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1326   00000A  EDDD  F003         	call	int_func,f	;refresh shadow registers
  1327                           
  1328                           	psect	intcode_body
  1329   0007BA                     __pintcode_body:
  1330                           	callstack 20
  1331   0007BA                     int_func:
  1332                           	callstack 20
  1333   0007BA  0006               	pop		; remove dummy address from shadow register refresh
  1334   0007BC  CFE1 F053          	movff	fsr1l,??_H_ISR+2
  1335   0007C0  CFE2 F054          	movff	fsr1h,??_H_ISR+3
  1336   0007C4  CFD9 F055          	movff	fsr2l,??_H_ISR+4
  1337   0007C8  CFDA F056          	movff	fsr2h,??_H_ISR+5
  1338   0007CC  CFF6 F057          	movff	tblptrl,??_H_ISR+6
  1339   0007D0  CFF7 F058          	movff	tblptrh,??_H_ISR+7
  1340   0007D4  CFF8 F059          	movff	tblptru,??_H_ISR+8
  1341   0007D8  CFF5 F05A          	movff	tablat,??_H_ISR+9
  1342   0007DC  AC9E               	btfss	158,6,c	;volatile
  1343   0007DE  EFF3  F003         	goto	i2u100_41
  1344   0007E2  EFF5  F003         	goto	i2u100_40
  1345   0007E6                     i2u100_41:
  1346   0007E6  EF0D  F004         	goto	i2l1688
  1347   0007EA                     i2u100_40:
  1348   0007EA  50C4               	movf	196,w,c	;volatile
  1349   0007EC  6E52               	movwf	(??_H_ISR+1)^0,c
  1350   0007EE  6A51               	clrf	??_H_ISR^0,c
  1351   0007F0  50C3               	movf	195,w,c	;volatile
  1352   0007F2  2451               	addwf	??_H_ISR^0,w,c
  1353   0007F4  6E5B               	movwf	H_ISR@value^0,c
  1354   0007F6  0E00               	movlw	0
  1355   0007F8  2052               	addwfc	(??_H_ISR+1)^0,w,c
  1356   0007FA  6E5C               	movwf	(H_ISR@value+1)^0,c
  1357   0007FC  C05B  F030         	movff	H_ISR@value,variable_register_changed@value
  1358   000800  C05C  F031         	movff	H_ISR@value+1,variable_register_changed@value+1
  1359   000804  EC4D  F007         	call	_variable_register_changed	;wreg free
  1360   000808  9C9E               	bcf	158,6,c	;volatile
  1361   00080A  0E07               	movlw	7
  1362   00080C  6E51               	movwf	??_H_ISR^0,c
  1363   00080E  0E7D               	movlw	125
  1364   000810                     i2u121_47:
  1365   000810  2EE8               	decfsz	wreg,f,c
  1366   000812  D7FE               	bra	i2u121_47
  1367   000814  2E51               	decfsz	??_H_ISR^0,f,c
  1368   000816  D7FC               	bra	i2u121_47
  1369   000818  0000               	nop	
  1370   00081A                     i2l1688:
  1371   00081A  A2F2               	btfss	242,1,c	;volatile
  1372   00081C  EF12  F004         	goto	i2u101_41
  1373   000820  EF14  F004         	goto	i2u101_40
  1374   000824                     i2u101_41:
  1375   000824  EF1F  F004         	goto	i2l1696
  1376   000828                     i2u101_40:
  1377   000828  EC4E  F007         	call	_button_pressed	;wreg free
  1378   00082C  0E41               	movlw	65
  1379   00082E  6E51               	movwf	??_H_ISR^0,c
  1380   000830  0EEE               	movlw	238
  1381   000832                     i2u122_47:
  1382   000832  2EE8               	decfsz	wreg,f,c
  1383   000834  D7FE               	bra	i2u122_47
  1384   000836  2E51               	decfsz	??_H_ISR^0,f,c
  1385   000838  D7FC               	bra	i2u122_47
  1386   00083A  D000               	nop2	
  1387   00083C  92F2               	bcf	242,1,c	;volatile
  1388   00083E                     i2l1696:
  1389   00083E  A09E               	btfss	158,0,c	;volatile
  1390   000840  EF24  F004         	goto	i2u102_41
  1391   000844  EF26  F004         	goto	i2u102_40
  1392   000848                     i2u102_41:
  1393   000848  EF5E  F004         	goto	i2l171
  1394   00084C                     i2u102_40:
  1395   00084C  4A29               	infsnz	_ccc^0,f,c
  1396   00084E  2A2A               	incf	(_ccc+1)^0,f,c
  1397   000850  0EE8               	movlw	232
  1398   000852  1829               	xorwf	_ccc^0,w,c
  1399   000854  E107               	bnz	i2u103_41
  1400   000856  0E03               	movlw	3
  1401   000858  182A               	xorwf	(_ccc+1)^0,w,c
  1402   00085A  A4D8               	btfss	status,2,c
  1403   00085C  EF32  F004         	goto	i2u103_41
  1404   000860  EF34  F004         	goto	i2u103_40
  1405   000864                     i2u103_41:
  1406   000864  EF5E  F004         	goto	i2l171
  1407   000868                     i2u103_40:
  1408   000868  0E06               	movlw	low STR_1
  1409   00086A  6E4B               	movwf	printf@fmt^0,c
  1410   00086C  EC3F  F007         	call	_printf	;wreg free
  1411   000870  0E01               	movlw	low STR_2
  1412   000872  6E4B               	movwf	printf@fmt^0,c
  1413   000874  C027  F04C         	movff	_one,?_printf+1
  1414   000878  C028  F04D         	movff	_one+1,?_printf+2
  1415   00087C  C025  F04E         	movff	_two,?_printf+3
  1416   000880  C026  F04F         	movff	_two+1,?_printf+4
  1417   000884  EC3F  F007         	call	_printf	;wreg free
  1418   000888  4A25               	infsnz	_two^0,f,c
  1419   00088A  2A26               	incf	(_two+1)^0,f,c
  1420   00088C  BE26               	btfsc	(_two+1)^0,7,c
  1421   00088E  EF52  F004         	goto	i2u104_41
  1422   000892  5026               	movf	(_two+1)^0,w,c
  1423   000894  E109               	bnz	i2u104_40
  1424   000896  0E0A               	movlw	10
  1425   000898  5C25               	subwf	_two^0,w,c
  1426   00089A  A0D8               	btfss	status,0,c
  1427   00089C  EF52  F004         	goto	i2u104_41
  1428   0008A0  EF54  F004         	goto	i2u104_40
  1429   0008A4                     i2u104_41:
  1430   0008A4  EF5A  F004         	goto	i2l1712
  1431   0008A8                     i2u104_40:
  1432   0008A8  0E00               	movlw	0
  1433   0008AA  6E26               	movwf	(_two+1)^0,c
  1434   0008AC  0E00               	movlw	0
  1435   0008AE  6E25               	movwf	_two^0,c
  1436   0008B0  4A27               	infsnz	_one^0,f,c
  1437   0008B2  2A28               	incf	(_one+1)^0,f,c
  1438   0008B4                     i2l1712:
  1439   0008B4  0E00               	movlw	0
  1440   0008B6  6E2A               	movwf	(_ccc+1)^0,c
  1441   0008B8  0E00               	movlw	0
  1442   0008BA  6E29               	movwf	_ccc^0,c
  1443   0008BC                     i2l171:
  1444   0008BC  C05A  FFF5         	movff	??_H_ISR+9,tablat
  1445   0008C0  C059  FFF8         	movff	??_H_ISR+8,tblptru
  1446   0008C4  C058  FFF7         	movff	??_H_ISR+7,tblptrh
  1447   0008C8  C057  FFF6         	movff	??_H_ISR+6,tblptrl
  1448   0008CC  C056  FFDA         	movff	??_H_ISR+5,fsr2h
  1449   0008D0  C055  FFD9         	movff	??_H_ISR+4,fsr2l
  1450   0008D4  C054  FFE2         	movff	??_H_ISR+3,fsr1h
  1451   0008D8  C053  FFE1         	movff	??_H_ISR+2,fsr1l
  1452   0008DC  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1453   0008DE  0011               	retfie		f
  1454   0008E0                     __end_of_H_ISR:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _variable_register_changed *****************
  1458 ;; Defined at:
  1459 ;;		line 312 in file "2b.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  value           2    0[COMRAM] int 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		None
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1473 ;;      Params:         2       0       0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0
  1476 ;;      Totals:         2       0       0       0       0       0       0
  1477 ;;Total ram usage:        2 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_H_ISR
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text10
  1487   000E9A                     __ptext10:
  1488                           	callstack 0
  1489   000E9A                     _variable_register_changed:
  1490                           	callstack 24
  1491   000E9A  0012               	return		;funcret
  1492   000E9C                     __end_of_variable_register_changed:
  1493                           	callstack 0
  1494                           
  1495 ;; *************** function _printf *****************
  1496 ;; Defined at:
  1497 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
  1500 ;;		 -> STR_2(5), STR_1(3), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  ret             2    0        int 
  1503 ;;  ap              1   32[COMRAM] PTR void [1]
  1504 ;;		 -> ?_printf(2), 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  2   27[COMRAM] int 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1514 ;;      Params:         5       0       0       0       0       0       0
  1515 ;;      Locals:         1       0       0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0
  1517 ;;      Totals:         6       0       0       0       0       0       0
  1518 ;;Total ram usage:        6 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 4
  1521 ;; This function calls:
  1522 ;;		_vfprintf
  1523 ;; This function is called by:
  1524 ;;		_H_ISR
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text11
  1529   000E7E                     __ptext11:
  1530                           	callstack 0
  1531   000E7E                     _printf:
  1532                           	callstack 20
  1533   000E7E  0E4C               	movlw	low (?_printf+1)
  1534   000E80  6E50               	movwf	printf@ap^0,c
  1535   000E82  0E00               	movlw	0
  1536   000E84  6E46               	movwf	vfprintf@fp^0,c
  1537   000E86  0E00               	movlw	0
  1538   000E88  6E47               	movwf	(vfprintf@fp+1)^0,c
  1539   000E8A  C04B  F048         	movff	printf@fmt,vfprintf@fmt
  1540   000E8E  0E50               	movlw	low printf@ap
  1541   000E90  6E49               	movwf	vfprintf@ap^0,c
  1542   000E92  ECD9  F006         	call	_vfprintf	;wreg free
  1543   000E96  0012               	return		;funcret
  1544   000E98                     __end_of_printf:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _vfprintf *****************
  1548 ;; Defined at:
  1549 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  1552 ;;		 -> NULL(0), 
  1553 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1554 ;;		 -> STR_2(5), STR_1(3), 
  1555 ;;  ap              1   25[COMRAM] PTR PTR void 
  1556 ;;		 -> printf@ap(1), 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1559 ;;		 -> STR_2(5), STR_1(3), 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  2   22[COMRAM] int 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1569 ;;      Params:         4       0       0       0       0       0       0
  1570 ;;      Locals:         1       0       0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0
  1572 ;;      Totals:         5       0       0       0       0       0       0
  1573 ;;Total ram usage:        5 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; Hardware stack levels required when called: 3
  1576 ;; This function calls:
  1577 ;;		_vfpfcnvrt
  1578 ;; This function is called by:
  1579 ;;		_printf
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text12
  1584   000DB2                     __ptext12:
  1585                           	callstack 0
  1586   000DB2                     _vfprintf:
  1587                           	callstack 20
  1588   000DB2                     
  1589                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1590   000DB2  C048  F04A         	movff	vfprintf@fmt,vfprintf@cfmt
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1593   000DB6  EFE7  F006         	goto	i2l1542
  1594   000DBA                     i2l1540:
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1597   000DBA  C046  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1598   000DBE  C047  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1599   000DC2  0E4A               	movlw	low vfprintf@cfmt
  1600   000DC4  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1601   000DC6  C049  F03D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1602   000DCA  EC05  F003         	call	_vfpfcnvrt	;wreg free
  1603   000DCE                     i2l1542:
  1604                           
  1605                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1606   000DCE  C04A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1607   000DD2                     	if	0	;There is only one active tblptr byte
  1608   000DD2                     	endif
  1609   000DD2                     	if	0	;tblptru may be non-zero
  1610   000DD2                     	endif
  1611   000DD2                     	if	0	;tblptru may be non-zero
  1612   000DD2                     	endif
  1613   000DD2  0008               	tblrd		*
  1614   000DD4  50F5               	movf	tablat,w,c
  1615   000DD6  0900               	iorlw	0
  1616   000DD8  A4D8               	btfss	status,2,c
  1617   000DDA  EFF1  F006         	goto	i2u94_41
  1618   000DDE  EFF3  F006         	goto	i2u94_40
  1619   000DE2                     i2u94_41:
  1620   000DE2  EFDD  F006         	goto	i2l1540
  1621   000DE6                     i2u94_40:
  1622   000DE6                     
  1623                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1624   000DE6  0E00               	movlw	0
  1625   000DE8  6E47               	movwf	(?_vfprintf+1)^0,c
  1626   000DEA  0E00               	movlw	0
  1627   000DEC  6E46               	movwf	?_vfprintf^0,c
  1628   000DEE  0012               	return		;funcret
  1629   000DF0                     __end_of_vfprintf:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function _vfpfcnvrt *****************
  1633 ;; Defined at:
  1634 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  1637 ;;		 -> NULL(0), 
  1638 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  1639 ;;		 -> vfprintf@cfmt(1), 
  1640 ;;  ap              1   13[COMRAM] PTR PTR void 
  1641 ;;		 -> printf@ap(1), 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  convarg         4   17[COMRAM] struct .
  1644 ;;  c               1   21[COMRAM] unsigned char 
  1645 ;;  cp              1   16[COMRAM] PTR unsigned char 
  1646 ;;		 -> STR_2(5), STR_1(3), 
  1647 ;;  done            1   15[COMRAM] _Bool 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1657 ;;      Params:         4       0       0       0       0       0       0
  1658 ;;      Locals:         7       0       0       0       0       0       0
  1659 ;;      Temps:          1       0       0       0       0       0       0
  1660 ;;      Totals:        12       0       0       0       0       0       0
  1661 ;;Total ram usage:       12 bytes
  1662 ;; Hardware stack levels used: 1
  1663 ;; Hardware stack levels required when called: 2
  1664 ;; This function calls:
  1665 ;;		___awdiv
  1666 ;;		___awmod
  1667 ;;		_abs
  1668 ;;		_fputc
  1669 ;; This function is called by:
  1670 ;;		_vfprintf
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text13
  1675   00060A                     __ptext13:
  1676                           	callstack 0
  1677   00060A                     _vfpfcnvrt:
  1678                           	callstack 20
  1679   00060A                     
  1680                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1681   00060A  503C               	movf	vfpfcnvrt@fmt^0,w,c
  1682   00060C  6ED9               	movwf	fsr2l,c
  1683   00060E  6ADA               	clrf	fsr2h,c
  1684   000610  CFDF FFF6          	movff	indf2,tblptrl
  1685   000614                     	if	0	;There is only one active tblptr byte
  1686   000614                     	endif
  1687   000614                     	if	0	;tblptru may be non-zero
  1688   000614                     	endif
  1689   000614                     	if	0	;tblptru may be non-zero
  1690   000614                     	endif
  1691   000614  0008               	tblrd		*
  1692   000616  50F5               	movf	tablat,w,c
  1693   000618  0A25               	xorlw	37
  1694   00061A  A4D8               	btfss	status,2,c
  1695   00061C  EF12  F003         	goto	i2u77_41
  1696   000620  EF14  F003         	goto	i2u77_40
  1697   000624                     i2u77_41:
  1698   000624  EFCB  F003         	goto	i2l1506
  1699   000628                     i2u77_40:
  1700   000628                     
  1701                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1702   000628  503C               	movf	vfpfcnvrt@fmt^0,w,c
  1703   00062A  6ED9               	movwf	fsr2l,c
  1704   00062C  6ADA               	clrf	fsr2h,c
  1705   00062E  2ADF               	incf	indf2,f,c
  1706   000630                     
  1707                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1708   000630  0E00               	movlw	0
  1709   000632  6E22               	movwf	(_width+1)^0,c
  1710   000634  0E00               	movlw	0
  1711   000636  6E21               	movwf	_width^0,c
  1712   000638  C021  F02F         	movff	_width,_flags
  1713   00063C                     
  1714                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1715   00063C  6823               	setf	_prec^0,c
  1716   00063E  6824               	setf	(_prec+1)^0,c
  1717   000640                     
  1718                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1719   000640  503C               	movf	vfpfcnvrt@fmt^0,w,c
  1720   000642  6ED9               	movwf	fsr2l,c
  1721   000644  6ADA               	clrf	fsr2h,c
  1722   000646  50DF               	movf	indf2,w,c
  1723   000648  6E40               	movwf	vfpfcnvrt@cp^0,c
  1724   00064A                     
  1725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1726   00064A  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1727   00064E                     	if	0	;There is only one active tblptr byte
  1728   00064E                     	endif
  1729   00064E                     	if	0	;tblptru may be non-zero
  1730   00064E                     	endif
  1731   00064E                     	if	0	;tblptru may be non-zero
  1732   00064E                     	endif
  1733   00064E  0008               	tblrd		*
  1734   000650  50F5               	movf	tablat,w,c
  1735   000652  0A64               	xorlw	100
  1736   000654  B4D8               	btfsc	status,2,c
  1737   000656  EF2F  F003         	goto	i2u78_41
  1738   00065A  EF31  F003         	goto	i2u78_40
  1739   00065E                     i2u78_41:
  1740   00065E  EF3D  F003         	goto	i2l1476
  1741   000662                     i2u78_40:
  1742   000662  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1743   000666                     	if	0	;There is only one active tblptr byte
  1744   000666                     	endif
  1745   000666                     	if	0	;tblptru may be non-zero
  1746   000666                     	endif
  1747   000666                     	if	0	;tblptru may be non-zero
  1748   000666                     	endif
  1749   000666  0008               	tblrd		*
  1750   000668  50F5               	movf	tablat,w,c
  1751   00066A  0A69               	xorlw	105
  1752   00066C  A4D8               	btfss	status,2,c
  1753   00066E  EF3B  F003         	goto	i2u79_41
  1754   000672  EF3D  F003         	goto	i2u79_40
  1755   000676                     i2u79_41:
  1756   000676  EFC5  F003         	goto	i2l1502
  1757   00067A                     i2u79_40:
  1758   00067A                     i2l1476:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1761   00067A  503D               	movf	vfpfcnvrt@ap^0,w,c
  1762   00067C  6ED9               	movwf	fsr2l,c
  1763   00067E  6ADA               	clrf	fsr2h,c
  1764   000680  0E02               	movlw	2
  1765   000682  26DF               	addwf	indf2,f,c
  1766   000684  5CDF               	subwf	indf2,w,c
  1767   000686  6ED9               	movwf	fsr2l,c
  1768   000688  6ADA               	clrf	fsr2h,c
  1769   00068A  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg
  1770   00068E  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+1
  1771   000692                     
  1772                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1773   000692  503C               	movf	vfpfcnvrt@fmt^0,w,c
  1774   000694  6ED9               	movwf	fsr2l,c
  1775   000696  6ADA               	clrf	fsr2h,c
  1776   000698  2840               	incf	vfpfcnvrt@cp^0,w,c
  1777   00069A  6EDF               	movwf	indf2,c
  1778   00069C                     
  1779                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1780   00069C  0E20               	movlw	32
  1781   00069E  6E45               	movwf	vfpfcnvrt@c^0,c
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1784   0006A0  BE42               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1785   0006A2  EF55  F003         	goto	i2u80_41
  1786   0006A6  EF58  F003         	goto	i2u80_40
  1787   0006AA                     i2u80_41:
  1788   0006AA  0E01               	movlw	1
  1789   0006AC  EF59  F003         	goto	i2u81_40
  1790   0006B0                     i2u80_40:
  1791   0006B0  0E00               	movlw	0
  1792   0006B2                     i2u81_40:
  1793   0006B2  6E3F               	movwf	vfpfcnvrt@done^0,c
  1794   0006B4                     i2l1482:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1797   0006B4  0645               	decf	vfpfcnvrt@c^0,f,c
  1798   0006B6  5045               	movf	vfpfcnvrt@c^0,w,c
  1799   0006B8  0F01               	addlw	low _dbuf
  1800   0006BA  6ED9               	movwf	fsr2l,c
  1801   0006BC  6ADA               	clrf	fsr2h,c
  1802   0006BE  C041  F030         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1803   0006C2  C042  F031         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1804   0006C6  0E00               	movlw	0
  1805   0006C8  6E33               	movwf	(___awmod@divisor+1)^0,c
  1806   0006CA  0E0A               	movlw	10
  1807   0006CC  6E32               	movwf	___awmod@divisor^0,c
  1808   0006CE  EC36  F005         	call	___awmod	;wreg free
  1809   0006D2  C030  F036         	movff	?___awmod,abs@a
  1810   0006D6  C031  F037         	movff	?___awmod+1,abs@a+1
  1811   0006DA  ECF8  F006         	call	_abs	;wreg free
  1812   0006DE  5036               	movf	?_abs^0,w,c
  1813   0006E0  0F30               	addlw	48
  1814   0006E2  6EDF               	movwf	indf2,c
  1815   0006E4                     
  1816                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1817   0006E4  C041  F030         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1818   0006E8  C042  F031         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1819   0006EC  0E00               	movlw	0
  1820   0006EE  6E33               	movwf	(___awdiv@divisor+1)^0,c
  1821   0006F0  0E0A               	movlw	10
  1822   0006F2  6E32               	movwf	___awdiv@divisor^0,c
  1823   0006F4  ECD5  F004         	call	___awdiv	;wreg free
  1824   0006F8  C030  F041         	movff	?___awdiv,vfpfcnvrt@convarg
  1825   0006FC  C031  F042         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1826   000700                     
  1827                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1828   000700  5041               	movf	vfpfcnvrt@convarg^0,w,c
  1829   000702  1042               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1830   000704  B4D8               	btfsc	status,2,c
  1831   000706  EF87  F003         	goto	i2u82_41
  1832   00070A  EF89  F003         	goto	i2u82_40
  1833   00070E                     i2u82_41:
  1834   00070E  EF91  F003         	goto	i2l1490
  1835   000712                     i2u82_40:
  1836   000712  5045               	movf	vfpfcnvrt@c^0,w,c
  1837   000714  A4D8               	btfss	status,2,c
  1838   000716  EF8F  F003         	goto	i2u83_41
  1839   00071A  EF91  F003         	goto	i2u83_40
  1840   00071E                     i2u83_41:
  1841   00071E  EF5A  F003         	goto	i2l1482
  1842   000722                     i2u83_40:
  1843   000722                     i2l1490:
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1846   000722  5045               	movf	vfpfcnvrt@c^0,w,c
  1847   000724  B4D8               	btfsc	status,2,c
  1848   000726  EF97  F003         	goto	i2u84_41
  1849   00072A  EF99  F003         	goto	i2u84_40
  1850   00072E                     i2u84_41:
  1851   00072E  EFBA  F003         	goto	i2l1500
  1852   000732                     i2u84_40:
  1853   000732  503F               	movf	vfpfcnvrt@done^0,w,c
  1854   000734  B4D8               	btfsc	status,2,c
  1855   000736  EF9F  F003         	goto	i2u85_41
  1856   00073A  EFA1  F003         	goto	i2u85_40
  1857   00073E                     i2u85_41:
  1858   00073E  EFBA  F003         	goto	i2l1500
  1859   000742                     i2u85_40:
  1860   000742                     
  1861                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1862   000742  0645               	decf	vfpfcnvrt@c^0,f,c
  1863   000744  5045               	movf	vfpfcnvrt@c^0,w,c
  1864   000746  0F01               	addlw	low _dbuf
  1865   000748  6ED9               	movwf	fsr2l,c
  1866   00074A  6ADA               	clrf	fsr2h,c
  1867   00074C  0E2D               	movlw	45
  1868   00074E  6EDF               	movwf	indf2,c
  1869   000750  EFBA  F003         	goto	i2l1500
  1870   000754                     i2l1496:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1873   000754  5045               	movf	vfpfcnvrt@c^0,w,c
  1874   000756  0F01               	addlw	low _dbuf
  1875   000758  6ED9               	movwf	fsr2l,c
  1876   00075A  6ADA               	clrf	fsr2h,c
  1877   00075C  50DF               	movf	indf2,w,c
  1878   00075E  6E3E               	movwf	??_vfpfcnvrt^0,c
  1879   000760  503E               	movf	??_vfpfcnvrt^0,w,c
  1880   000762  6E31               	movwf	fputc@c^0,c
  1881   000764  6A32               	clrf	(fputc@c+1)^0,c
  1882   000766  C03A  F033         	movff	vfpfcnvrt@fp,fputc@fp
  1883   00076A  C03B  F034         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1884   00076E  EC70  F004         	call	_fputc	;wreg free
  1885   000772  2A45               	incf	vfpfcnvrt@c^0,f,c
  1886   000774                     i2l1500:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1889   000774  0E20               	movlw	32
  1890   000776  1845               	xorwf	vfpfcnvrt@c^0,w,c
  1891   000778  A4D8               	btfss	status,2,c
  1892   00077A  EFC1  F003         	goto	i2u86_41
  1893   00077E  EFC3  F003         	goto	i2u86_40
  1894   000782                     i2u86_41:
  1895   000782  EFAA  F003         	goto	i2l1496
  1896   000786                     i2u86_40:
  1897   000786  EFDC  F003         	goto	i2l909
  1898   00078A                     i2l1502:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1901   00078A  503C               	movf	vfpfcnvrt@fmt^0,w,c
  1902   00078C  6ED9               	movwf	fsr2l,c
  1903   00078E  6ADA               	clrf	fsr2h,c
  1904   000790  2ADF               	incf	indf2,f,c
  1905   000792  EFDC  F003         	goto	i2l909
  1906   000796                     i2l1506:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1909   000796  503C               	movf	vfpfcnvrt@fmt^0,w,c
  1910   000798  6ED9               	movwf	fsr2l,c
  1911   00079A  6ADA               	clrf	fsr2h,c
  1912   00079C  CFDF FFF6          	movff	indf2,tblptrl
  1913   0007A0                     	if	0	;There is only one active tblptr byte
  1914   0007A0                     	endif
  1915   0007A0                     	if	0	;tblptru may be non-zero
  1916   0007A0                     	endif
  1917   0007A0                     	if	0	;tblptru may be non-zero
  1918   0007A0                     	endif
  1919   0007A0  0008               	tblrd		*
  1920   0007A2  50F5               	movf	tablat,w,c
  1921   0007A4  6E31               	movwf	fputc@c^0,c
  1922   0007A6  6A32               	clrf	(fputc@c+1)^0,c
  1923   0007A8  C03A  F033         	movff	vfpfcnvrt@fp,fputc@fp
  1924   0007AC  C03B  F034         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1925   0007B0  EC70  F004         	call	_fputc	;wreg free
  1926   0007B4  EFC5  F003         	goto	i2l1502
  1927   0007B8                     i2l909:
  1928   0007B8  0012               	return		;funcret
  1929   0007BA                     __end_of_vfpfcnvrt:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _fputc *****************
  1933 ;; Defined at:
  1934 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  c               2    1[COMRAM] int 
  1937 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1938 ;;		 -> NULL(0), 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  2    1[COMRAM] int 
  1943 ;; Registers used:
  1944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1950 ;;      Params:         4       0       0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0
  1952 ;;      Temps:          5       0       0       0       0       0       0
  1953 ;;      Totals:         9       0       0       0       0       0       0
  1954 ;;Total ram usage:        9 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 1
  1957 ;; This function calls:
  1958 ;;		i2_putch
  1959 ;; This function is called by:
  1960 ;;		_vfpfcnvrt
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text14
  1965   0008E0                     __ptext14:
  1966                           	callstack 0
  1967   0008E0                     _fputc:
  1968                           	callstack 20
  1969   0008E0  5033               	movf	fputc@fp^0,w,c
  1970   0008E2  1034               	iorwf	(fputc@fp+1)^0,w,c
  1971   0008E4  B4D8               	btfsc	status,2,c
  1972   0008E6  EF77  F004         	goto	i2u72_41
  1973   0008EA  EF79  F004         	goto	i2u72_40
  1974   0008EE                     i2u72_41:
  1975   0008EE  EF82  F004         	goto	i2l1448
  1976   0008F2                     i2u72_40:
  1977   0008F2  5033               	movf	fputc@fp^0,w,c
  1978   0008F4  1034               	iorwf	(fputc@fp+1)^0,w,c
  1979   0008F6  A4D8               	btfss	status,2,c
  1980   0008F8  EF80  F004         	goto	i2u73_41
  1981   0008FC  EF82  F004         	goto	i2u73_40
  1982   000900                     i2u73_41:
  1983   000900  EF87  F004         	goto	i2l1450
  1984   000904                     i2u73_40:
  1985   000904                     i2l1448:
  1986   000904  5031               	movf	fputc@c^0,w,c
  1987   000906  EC3E  F006         	call	i2_putch
  1988   00090A  EFD4  F004         	goto	i2l934
  1989   00090E                     i2l1450:
  1990   00090E  EE20 F009          	lfsr	2,9
  1991   000912  5033               	movf	fputc@fp^0,w,c
  1992   000914  26D9               	addwf	fsr2l,f,c
  1993   000916  5034               	movf	(fputc@fp+1)^0,w,c
  1994   000918  22DA               	addwfc	fsr2h,f,c
  1995   00091A  50DE               	movf	postinc2,w,c
  1996   00091C  10DE               	iorwf	postinc2,w,c
  1997   00091E  B4D8               	btfsc	status,2,c
  1998   000920  EF94  F004         	goto	i2u74_41
  1999   000924  EF96  F004         	goto	i2u74_40
  2000   000928                     i2u74_41:
  2001   000928  EFB1  F004         	goto	i2l1454
  2002   00092C                     i2u74_40:
  2003   00092C  EE20 F009          	lfsr	2,9
  2004   000930  5033               	movf	fputc@fp^0,w,c
  2005   000932  26D9               	addwf	fsr2l,f,c
  2006   000934  5034               	movf	(fputc@fp+1)^0,w,c
  2007   000936  22DA               	addwfc	fsr2h,f,c
  2008   000938  EE10 F002          	lfsr	1,2
  2009   00093C  5033               	movf	fputc@fp^0,w,c
  2010   00093E  26E1               	addwf	fsr1l,f,c
  2011   000940  5034               	movf	(fputc@fp+1)^0,w,c
  2012   000942  22E2               	addwfc	fsr1h,f,c
  2013   000944  50DE               	movf	postinc2,w,c
  2014   000946  5CE6               	subwf	postinc1,w,c
  2015   000948  50E6               	movf	postinc1,w,c
  2016   00094A  0A80               	xorlw	128
  2017   00094C  6E39               	movwf	(??_fputc+4)^0,c
  2018   00094E  50DE               	movf	postinc2,w,c
  2019   000950  0A80               	xorlw	128
  2020   000952  5839               	subwfb	(??_fputc+4)^0,w,c
  2021   000954  B0D8               	btfsc	status,0,c
  2022   000956  EFAF  F004         	goto	i2u75_41
  2023   00095A  EFB1  F004         	goto	i2u75_40
  2024   00095E                     i2u75_41:
  2025   00095E  EFD4  F004         	goto	i2l934
  2026   000962                     i2u75_40:
  2027   000962                     i2l1454:
  2028   000962  EE20 F002          	lfsr	2,2
  2029   000966  5033               	movf	fputc@fp^0,w,c
  2030   000968  26D9               	addwf	fsr2l,f,c
  2031   00096A  5034               	movf	(fputc@fp+1)^0,w,c
  2032   00096C  22DA               	addwfc	fsr2h,f,c
  2033   00096E  CFDE F035          	movff	postinc2,??_fputc
  2034   000972  CFDD F036          	movff	postdec2,??_fputc+1
  2035   000976  C033  FFD9         	movff	fputc@fp,fsr2l
  2036   00097A  C034  FFDA         	movff	fputc@fp+1,fsr2h
  2037   00097E  CFDE F037          	movff	postinc2,??_fputc+2
  2038   000982  CFDD F038          	movff	postdec2,??_fputc+3
  2039   000986  5035               	movf	??_fputc^0,w,c
  2040   000988  2437               	addwf	(??_fputc+2)^0,w,c
  2041   00098A  6ED9               	movwf	fsr2l,c
  2042   00098C  5036               	movf	(??_fputc+1)^0,w,c
  2043   00098E  2038               	addwfc	(??_fputc+3)^0,w,c
  2044   000990  6EDA               	movwf	fsr2h,c
  2045   000992  C031  FFDF         	movff	fputc@c,indf2
  2046   000996  EE20 F002          	lfsr	2,2
  2047   00099A  5033               	movf	fputc@fp^0,w,c
  2048   00099C  26D9               	addwf	fsr2l,f,c
  2049   00099E  5034               	movf	(fputc@fp+1)^0,w,c
  2050   0009A0  22DA               	addwfc	fsr2h,f,c
  2051   0009A2  2ADE               	incf	postinc2,f,c
  2052   0009A4  0E00               	movlw	0
  2053   0009A6  22DD               	addwfc	postdec2,f,c
  2054   0009A8                     i2l934:
  2055   0009A8  0012               	return		;funcret
  2056   0009AA                     __end_of_fputc:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function i2_putch *****************
  2060 ;; Defined at:
  2061 ;;		line 72 in file "2b.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  data            1    wreg     unsigned char 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  data            1    0[COMRAM] unsigned char 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, status,0
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2075 ;;      Params:         0       0       0       0       0       0       0
  2076 ;;      Locals:         1       0       0       0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0
  2078 ;;      Totals:         1       0       0       0       0       0       0
  2079 ;;Total ram usage:        1 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_fputc
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text15
  2089   000C7C                     __ptext15:
  2090                           	callstack 0
  2091   000C7C                     i2_putch:
  2092                           	callstack 20
  2093                           
  2094                           ;incstack = 0
  2095                           ;i2putch@data stored from wreg
  2096   000C7C  6E30               	movwf	i2putch@data^0,c
  2097   000C7E  0E0A               	movlw	10
  2098   000C80  1830               	xorwf	i2putch@data^0,w,c
  2099   000C82  B4D8               	btfsc	status,2,c
  2100   000C84  EF46  F006         	goto	i2u55_41
  2101   000C88  EF48  F006         	goto	i2u55_40
  2102   000C8C                     i2u55_41:
  2103   000C8C  EF51  F006         	goto	i2l90
  2104   000C90                     i2u55_40:
  2105   000C90  0E0D               	movlw	13
  2106   000C92  1830               	xorwf	i2putch@data^0,w,c
  2107   000C94  A4D8               	btfss	status,2,c
  2108   000C96  EF4F  F006         	goto	i2u56_41
  2109   000C9A  EF51  F006         	goto	i2u56_40
  2110   000C9E                     i2u56_41:
  2111   000C9E  EF65  F006         	goto	i2l97
  2112   000CA2                     i2u56_40:
  2113   000CA2                     i2l90:
  2114   000CA2  A2AC               	btfss	172,1,c	;volatile
  2115   000CA4  EF56  F006         	goto	i2u57_41
  2116   000CA8  EF58  F006         	goto	i2u57_40
  2117   000CAC                     i2u57_41:
  2118   000CAC  EF51  F006         	goto	i2l90
  2119   000CB0                     i2u57_40:
  2120   000CB0  0E0D               	movlw	13
  2121   000CB2  6EAD               	movwf	173,c	;volatile
  2122   000CB4                     i2l93:
  2123   000CB4  A2AC               	btfss	172,1,c	;volatile
  2124   000CB6  EF5F  F006         	goto	i2u58_41
  2125   000CBA  EF61  F006         	goto	i2u58_40
  2126   000CBE                     i2u58_41:
  2127   000CBE  EF5A  F006         	goto	i2l93
  2128   000CC2                     i2u58_40:
  2129   000CC2  0E0A               	movlw	10
  2130   000CC4  6EAD               	movwf	173,c	;volatile
  2131   000CC6  EF6E  F006         	goto	i2l100
  2132   000CCA                     i2l97:
  2133   000CCA  A2AC               	btfss	172,1,c	;volatile
  2134   000CCC  EF6A  F006         	goto	i2u59_41
  2135   000CD0  EF6C  F006         	goto	i2u59_40
  2136   000CD4                     i2u59_41:
  2137   000CD4  EF65  F006         	goto	i2l97
  2138   000CD8                     i2u59_40:
  2139   000CD8  C030  FFAD         	movff	i2putch@data,4013	;volatile
  2140   000CDC                     i2l100:
  2141   000CDC  0012               	return		;funcret
  2142   000CDE                     __end_ofi2_putch:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _abs *****************
  2146 ;; Defined at:
  2147 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  a               2    6[COMRAM] int 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2    6[COMRAM] int 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2161 ;;      Params:         2       0       0       0       0       0       0
  2162 ;;      Locals:         0       0       0       0       0       0       0
  2163 ;;      Temps:          2       0       0       0       0       0       0
  2164 ;;      Totals:         4       0       0       0       0       0       0
  2165 ;;Total ram usage:        4 bytes
  2166 ;; Hardware stack levels used: 1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_vfpfcnvrt
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text16
  2175   000DF0                     __ptext16:
  2176                           	callstack 0
  2177   000DF0                     _abs:
  2178                           	callstack 21
  2179   000DF0  BE37               	btfsc	(abs@a+1)^0,7,c
  2180   000DF2  EFFD  F006         	goto	i2u76_41
  2181   000DF6  EFFF  F006         	goto	i2u76_40
  2182   000DFA                     i2u76_41:
  2183   000DFA  EF05  F007         	goto	i2l919
  2184   000DFE                     i2u76_40:
  2185   000DFE  C036  F036         	movff	abs@a,?_abs
  2186   000E02  C037  F037         	movff	abs@a+1,?_abs+1
  2187   000E06  EF11  F007         	goto	i2l922
  2188   000E0A                     i2l919:
  2189   000E0A  C036  F038         	movff	abs@a,??_abs
  2190   000E0E  C037  F039         	movff	abs@a+1,??_abs+1
  2191   000E12  1E38               	comf	??_abs^0,f,c
  2192   000E14  1E39               	comf	(??_abs+1)^0,f,c
  2193   000E16  4A38               	infsnz	??_abs^0,f,c
  2194   000E18  2A39               	incf	(??_abs+1)^0,f,c
  2195   000E1A  C038  F036         	movff	??_abs,?_abs
  2196   000E1E  C039  F037         	movff	??_abs+1,?_abs+1
  2197   000E22                     i2l922:
  2198   000E22  0012               	return		;funcret
  2199   000E24                     __end_of_abs:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function ___awmod *****************
  2203 ;; Defined at:
  2204 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  dividend        2    0[COMRAM] int 
  2207 ;;  divisor         2    2[COMRAM] int 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  sign            1    5[COMRAM] unsigned char 
  2210 ;;  counter         1    4[COMRAM] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  2    0[COMRAM] int 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2220 ;;      Params:         4       0       0       0       0       0       0
  2221 ;;      Locals:         2       0       0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0
  2223 ;;      Totals:         6       0       0       0       0       0       0
  2224 ;;Total ram usage:        6 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_vfpfcnvrt
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text17
  2234   000A6C                     __ptext17:
  2235                           	callstack 0
  2236   000A6C                     ___awmod:
  2237                           	callstack 21
  2238   000A6C  6A35               	clrf	___awmod@sign^0,c
  2239   000A6E  BE31               	btfsc	(___awmod@dividend+1)^0,7,c
  2240   000A70  EF3E  F005         	goto	i2u66_40
  2241   000A74  EF3C  F005         	goto	i2u66_41
  2242   000A78                     i2u66_41:
  2243   000A78  EF44  F005         	goto	i2l1416
  2244   000A7C                     i2u66_40:
  2245   000A7C  6C30               	negf	___awmod@dividend^0,c
  2246   000A7E  1E31               	comf	(___awmod@dividend+1)^0,f,c
  2247   000A80  B0D8               	btfsc	status,0,c
  2248   000A82  2A31               	incf	(___awmod@dividend+1)^0,f,c
  2249   000A84  0E01               	movlw	1
  2250   000A86  6E35               	movwf	___awmod@sign^0,c
  2251   000A88                     i2l1416:
  2252   000A88  BE33               	btfsc	(___awmod@divisor+1)^0,7,c
  2253   000A8A  EF4B  F005         	goto	i2u67_40
  2254   000A8E  EF49  F005         	goto	i2u67_41
  2255   000A92                     i2u67_41:
  2256   000A92  EF4F  F005         	goto	i2l1420
  2257   000A96                     i2u67_40:
  2258   000A96  6C32               	negf	___awmod@divisor^0,c
  2259   000A98  1E33               	comf	(___awmod@divisor+1)^0,f,c
  2260   000A9A  B0D8               	btfsc	status,0,c
  2261   000A9C  2A33               	incf	(___awmod@divisor+1)^0,f,c
  2262   000A9E                     i2l1420:
  2263   000A9E  5032               	movf	___awmod@divisor^0,w,c
  2264   000AA0  1033               	iorwf	(___awmod@divisor+1)^0,w,c
  2265   000AA2  B4D8               	btfsc	status,2,c
  2266   000AA4  EF56  F005         	goto	i2u68_41
  2267   000AA8  EF58  F005         	goto	i2u68_40
  2268   000AAC                     i2u68_41:
  2269   000AAC  EF7C  F005         	goto	i2l1436
  2270   000AB0                     i2u68_40:
  2271   000AB0  0E01               	movlw	1
  2272   000AB2  6E34               	movwf	___awmod@counter^0,c
  2273   000AB4  EF60  F005         	goto	i2l1426
  2274   000AB8                     i2l1424:
  2275   000AB8  90D8               	bcf	status,0,c
  2276   000ABA  3632               	rlcf	___awmod@divisor^0,f,c
  2277   000ABC  3633               	rlcf	(___awmod@divisor+1)^0,f,c
  2278   000ABE  2A34               	incf	___awmod@counter^0,f,c
  2279   000AC0                     i2l1426:
  2280   000AC0  AE33               	btfss	(___awmod@divisor+1)^0,7,c
  2281   000AC2  EF65  F005         	goto	i2u69_41
  2282   000AC6  EF67  F005         	goto	i2u69_40
  2283   000ACA                     i2u69_41:
  2284   000ACA  EF5C  F005         	goto	i2l1424
  2285   000ACE                     i2u69_40:
  2286   000ACE                     i2l1428:
  2287   000ACE  5032               	movf	___awmod@divisor^0,w,c
  2288   000AD0  5C30               	subwf	___awmod@dividend^0,w,c
  2289   000AD2  5033               	movf	(___awmod@divisor+1)^0,w,c
  2290   000AD4  5831               	subwfb	(___awmod@dividend+1)^0,w,c
  2291   000AD6  A0D8               	btfss	status,0,c
  2292   000AD8  EF70  F005         	goto	i2u70_41
  2293   000ADC  EF72  F005         	goto	i2u70_40
  2294   000AE0                     i2u70_41:
  2295   000AE0  EF76  F005         	goto	i2l1432
  2296   000AE4                     i2u70_40:
  2297   000AE4  5032               	movf	___awmod@divisor^0,w,c
  2298   000AE6  5E30               	subwf	___awmod@dividend^0,f,c
  2299   000AE8  5033               	movf	(___awmod@divisor+1)^0,w,c
  2300   000AEA  5A31               	subwfb	(___awmod@dividend+1)^0,f,c
  2301   000AEC                     i2l1432:
  2302   000AEC  90D8               	bcf	status,0,c
  2303   000AEE  3233               	rrcf	(___awmod@divisor+1)^0,f,c
  2304   000AF0  3232               	rrcf	___awmod@divisor^0,f,c
  2305   000AF2  2E34               	decfsz	___awmod@counter^0,f,c
  2306   000AF4  EF67  F005         	goto	i2l1428
  2307   000AF8                     i2l1436:
  2308   000AF8  5035               	movf	___awmod@sign^0,w,c
  2309   000AFA  B4D8               	btfsc	status,2,c
  2310   000AFC  EF82  F005         	goto	i2u71_41
  2311   000B00  EF84  F005         	goto	i2u71_40
  2312   000B04                     i2u71_41:
  2313   000B04  EF88  F005         	goto	i2l1440
  2314   000B08                     i2u71_40:
  2315   000B08  6C30               	negf	___awmod@dividend^0,c
  2316   000B0A  1E31               	comf	(___awmod@dividend+1)^0,f,c
  2317   000B0C  B0D8               	btfsc	status,0,c
  2318   000B0E  2A31               	incf	(___awmod@dividend+1)^0,f,c
  2319   000B10                     i2l1440:
  2320   000B10  C030  F030         	movff	___awmod@dividend,?___awmod
  2321   000B14  C031  F031         	movff	___awmod@dividend+1,?___awmod+1
  2322   000B18  0012               	return		;funcret
  2323   000B1A                     __end_of___awmod:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function ___awdiv *****************
  2327 ;; Defined at:
  2328 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  dividend        2    0[COMRAM] int 
  2331 ;;  divisor         2    2[COMRAM] int 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  quotient        2    6[COMRAM] int 
  2334 ;;  sign            1    5[COMRAM] unsigned char 
  2335 ;;  counter         1    4[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  2    0[COMRAM] int 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2345 ;;      Params:         4       0       0       0       0       0       0
  2346 ;;      Locals:         4       0       0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0
  2348 ;;      Totals:         8       0       0       0       0       0       0
  2349 ;;Total ram usage:        8 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_vfpfcnvrt
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text18
  2359   0009AA                     __ptext18:
  2360                           	callstack 0
  2361   0009AA                     ___awdiv:
  2362                           	callstack 21
  2363   0009AA  6A35               	clrf	___awdiv@sign^0,c
  2364   0009AC  BE33               	btfsc	(___awdiv@divisor+1)^0,7,c
  2365   0009AE  EFDD  F004         	goto	i2u60_40
  2366   0009B2  EFDB  F004         	goto	i2u60_41
  2367   0009B6                     i2u60_41:
  2368   0009B6  EFE3  F004         	goto	i2l1372
  2369   0009BA                     i2u60_40:
  2370   0009BA  6C32               	negf	___awdiv@divisor^0,c
  2371   0009BC  1E33               	comf	(___awdiv@divisor+1)^0,f,c
  2372   0009BE  B0D8               	btfsc	status,0,c
  2373   0009C0  2A33               	incf	(___awdiv@divisor+1)^0,f,c
  2374   0009C2  0E01               	movlw	1
  2375   0009C4  6E35               	movwf	___awdiv@sign^0,c
  2376   0009C6                     i2l1372:
  2377   0009C6  BE31               	btfsc	(___awdiv@dividend+1)^0,7,c
  2378   0009C8  EFEA  F004         	goto	i2u61_40
  2379   0009CC  EFE8  F004         	goto	i2u61_41
  2380   0009D0                     i2u61_41:
  2381   0009D0  EFF0  F004         	goto	i2l1378
  2382   0009D4                     i2u61_40:
  2383   0009D4  6C30               	negf	___awdiv@dividend^0,c
  2384   0009D6  1E31               	comf	(___awdiv@dividend+1)^0,f,c
  2385   0009D8  B0D8               	btfsc	status,0,c
  2386   0009DA  2A31               	incf	(___awdiv@dividend+1)^0,f,c
  2387   0009DC  0E01               	movlw	1
  2388   0009DE  1A35               	xorwf	___awdiv@sign^0,f,c
  2389   0009E0                     i2l1378:
  2390   0009E0  0E00               	movlw	0
  2391   0009E2  6E37               	movwf	(___awdiv@quotient+1)^0,c
  2392   0009E4  0E00               	movlw	0
  2393   0009E6  6E36               	movwf	___awdiv@quotient^0,c
  2394   0009E8  5032               	movf	___awdiv@divisor^0,w,c
  2395   0009EA  1033               	iorwf	(___awdiv@divisor+1)^0,w,c
  2396   0009EC  B4D8               	btfsc	status,2,c
  2397   0009EE  EFFB  F004         	goto	i2u62_41
  2398   0009F2  EFFD  F004         	goto	i2u62_40
  2399   0009F6                     i2u62_41:
  2400   0009F6  EF25  F005         	goto	i2l1400
  2401   0009FA                     i2u62_40:
  2402   0009FA  0E01               	movlw	1
  2403   0009FC  6E34               	movwf	___awdiv@counter^0,c
  2404   0009FE  EF05  F005         	goto	i2l1386
  2405   000A02                     i2l1384:
  2406   000A02  90D8               	bcf	status,0,c
  2407   000A04  3632               	rlcf	___awdiv@divisor^0,f,c
  2408   000A06  3633               	rlcf	(___awdiv@divisor+1)^0,f,c
  2409   000A08  2A34               	incf	___awdiv@counter^0,f,c
  2410   000A0A                     i2l1386:
  2411   000A0A  AE33               	btfss	(___awdiv@divisor+1)^0,7,c
  2412   000A0C  EF0A  F005         	goto	i2u63_41
  2413   000A10  EF0C  F005         	goto	i2u63_40
  2414   000A14                     i2u63_41:
  2415   000A14  EF01  F005         	goto	i2l1384
  2416   000A18                     i2u63_40:
  2417   000A18                     i2l1388:
  2418   000A18  90D8               	bcf	status,0,c
  2419   000A1A  3636               	rlcf	___awdiv@quotient^0,f,c
  2420   000A1C  3637               	rlcf	(___awdiv@quotient+1)^0,f,c
  2421   000A1E  5032               	movf	___awdiv@divisor^0,w,c
  2422   000A20  5C30               	subwf	___awdiv@dividend^0,w,c
  2423   000A22  5033               	movf	(___awdiv@divisor+1)^0,w,c
  2424   000A24  5831               	subwfb	(___awdiv@dividend+1)^0,w,c
  2425   000A26  A0D8               	btfss	status,0,c
  2426   000A28  EF18  F005         	goto	i2u64_41
  2427   000A2C  EF1A  F005         	goto	i2u64_40
  2428   000A30                     i2u64_41:
  2429   000A30  EF1F  F005         	goto	i2l1396
  2430   000A34                     i2u64_40:
  2431   000A34  5032               	movf	___awdiv@divisor^0,w,c
  2432   000A36  5E30               	subwf	___awdiv@dividend^0,f,c
  2433   000A38  5033               	movf	(___awdiv@divisor+1)^0,w,c
  2434   000A3A  5A31               	subwfb	(___awdiv@dividend+1)^0,f,c
  2435   000A3C  8036               	bsf	___awdiv@quotient^0,0,c
  2436   000A3E                     i2l1396:
  2437   000A3E  90D8               	bcf	status,0,c
  2438   000A40  3233               	rrcf	(___awdiv@divisor+1)^0,f,c
  2439   000A42  3232               	rrcf	___awdiv@divisor^0,f,c
  2440   000A44  2E34               	decfsz	___awdiv@counter^0,f,c
  2441   000A46  EF0C  F005         	goto	i2l1388
  2442   000A4A                     i2l1400:
  2443   000A4A  5035               	movf	___awdiv@sign^0,w,c
  2444   000A4C  B4D8               	btfsc	status,2,c
  2445   000A4E  EF2B  F005         	goto	i2u65_41
  2446   000A52  EF2D  F005         	goto	i2u65_40
  2447   000A56                     i2u65_41:
  2448   000A56  EF31  F005         	goto	i2l1404
  2449   000A5A                     i2u65_40:
  2450   000A5A  6C36               	negf	___awdiv@quotient^0,c
  2451   000A5C  1E37               	comf	(___awdiv@quotient+1)^0,f,c
  2452   000A5E  B0D8               	btfsc	status,0,c
  2453   000A60  2A37               	incf	(___awdiv@quotient+1)^0,f,c
  2454   000A62                     i2l1404:
  2455   000A62  C036  F030         	movff	___awdiv@quotient,?___awdiv
  2456   000A66  C037  F031         	movff	___awdiv@quotient+1,?___awdiv+1
  2457   000A6A  0012               	return		;funcret
  2458   000A6C                     __end_of___awdiv:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function _button_pressed *****************
  2462 ;; Defined at:
  2463 ;;		line 303 in file "2b.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		None
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2477 ;;      Params:         0       0       0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_H_ISR
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text19
  2491   000E9C                     __ptext19:
  2492                           	callstack 0
  2493   000E9C                     _button_pressed:
  2494                           	callstack 24
  2495   000E9C  0012               	return		;funcret
  2496   000E9E                     __end_of_button_pressed:
  2497                           	callstack 0
  2498                           
  2499                           	psect	rparam
  2500   000001                     ___rparam_used  equ	1
  2501   000000                     ___param_bank   equ	0
  2502   000000                     __Lparam        equ	__Lrparam
  2503   000000                     __Hparam        equ	__Hrparam
  2504                           
  2505                           	psect	temp
  2506   00005D                     btemp:
  2507                           	callstack 0
  2508   00005D                     	ds	1
  2509   00005D                     int$flags       set	btemp
  2510   00005E                     wtemp8          set	btemp+1
  2511   00005E                     ttemp5          set	btemp+1
  2512   000061                     ttemp6          set	btemp+4
  2513   000065                     ttemp7          set	btemp+8
  2514                           
  2515                           	psect	idloc
  2516                           
  2517                           ;Config register IDLOC0 @ 0x200000
  2518                           ;	unspecified, using default values
  2519   200000                     	org	2097152
  2520   200000  FF                 	db	255
  2521                           
  2522                           ;Config register IDLOC1 @ 0x200001
  2523                           ;	unspecified, using default values
  2524   200001                     	org	2097153
  2525   200001  FF                 	db	255
  2526                           
  2527                           ;Config register IDLOC2 @ 0x200002
  2528                           ;	unspecified, using default values
  2529   200002                     	org	2097154
  2530   200002  FF                 	db	255
  2531                           
  2532                           ;Config register IDLOC3 @ 0x200003
  2533                           ;	unspecified, using default values
  2534   200003                     	org	2097155
  2535   200003  FF                 	db	255
  2536                           
  2537                           ;Config register IDLOC4 @ 0x200004
  2538                           ;	unspecified, using default values
  2539   200004                     	org	2097156
  2540   200004  FF                 	db	255
  2541                           
  2542                           ;Config register IDLOC5 @ 0x200005
  2543                           ;	unspecified, using default values
  2544   200005                     	org	2097157
  2545   200005  FF                 	db	255
  2546                           
  2547                           ;Config register IDLOC6 @ 0x200006
  2548                           ;	unspecified, using default values
  2549   200006                     	org	2097158
  2550   200006  FF                 	db	255
  2551                           
  2552                           ;Config register IDLOC7 @ 0x200007
  2553                           ;	unspecified, using default values
  2554   200007                     	org	2097159
  2555   200007  FF                 	db	255
  2556                           
  2557                           	psect	config
  2558                           
  2559                           ; Padding undefined space
  2560   300000                     	org	3145728
  2561   300000  FF                 	db	255
  2562                           
  2563                           ;Config register CONFIG1H @ 0x300001
  2564                           ;	Oscillator Selection bits
  2565                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2566                           ;	Fail-Safe Clock Monitor Enable bit
  2567                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2568                           ;	Internal/External Oscillator Switchover bit
  2569                           ;	IESO = ON, Oscillator Switchover mode enabled
  2570   300001                     	org	3145729
  2571   300001  88                 	db	136
  2572                           
  2573                           ;Config register CONFIG2L @ 0x300002
  2574                           ;	Power-up Timer Enable bit
  2575                           ;	PWRT = OFF, PWRT disabled
  2576                           ;	Brown-out Reset Enable bits
  2577                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2578                           ;	Brown Out Reset Voltage bits
  2579                           ;	BORV = 3, Minimum setting
  2580   300002                     	org	3145730
  2581   300002  1F                 	db	31
  2582                           
  2583                           ;Config register CONFIG2H @ 0x300003
  2584                           ;	Watchdog Timer Enable bit
  2585                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2586                           ;	Watchdog Timer Postscale Select bits
  2587                           ;	WDTPS = 1, 1:1
  2588   300003                     	org	3145731
  2589   300003  00                 	db	0
  2590                           
  2591                           ; Padding undefined space
  2592   300004                     	org	3145732
  2593   300004  FF                 	db	255
  2594                           
  2595                           ;Config register CONFIG3H @ 0x300005
  2596                           ;	CCP2 MUX bit
  2597                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2598                           ;	PORTB A/D Enable bit
  2599                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2600                           ;	Low-Power Timer1 Oscillator Enable bit
  2601                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2602                           ;	MCLR Pin Enable bit
  2603                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2604   300005                     	org	3145733
  2605   300005  83                 	db	131
  2606                           
  2607                           ;Config register CONFIG4L @ 0x300006
  2608                           ;	Stack Full/Underflow Reset Enable bit
  2609                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2610                           ;	Single-Supply ICSP Enable bit
  2611                           ;	LVP = OFF, Single-Supply ICSP disabled
  2612                           ;	Extended Instruction Set Enable bit
  2613                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2614                           ;	Background Debugger Enable bit
  2615                           ;	DEBUG = 0x1, unprogrammed default
  2616   300006                     	org	3145734
  2617   300006  81                 	db	129
  2618                           
  2619                           ; Padding undefined space
  2620   300007                     	org	3145735
  2621   300007  FF                 	db	255
  2622                           
  2623                           ;Config register CONFIG5L @ 0x300008
  2624                           ;	Code Protection bit
  2625                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2626                           ;	Code Protection bit
  2627                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2628                           ;	Code Protection bit
  2629                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2630                           ;	Code Protection bit
  2631                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2632   300008                     	org	3145736
  2633   300008  0F                 	db	15
  2634                           
  2635                           ;Config register CONFIG5H @ 0x300009
  2636                           ;	Boot Block Code Protection bit
  2637                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2638                           ;	Data EEPROM Code Protection bit
  2639                           ;	CPD = OFF, Data EEPROM not code-protected
  2640   300009                     	org	3145737
  2641   300009  C0                 	db	192
  2642                           
  2643                           ;Config register CONFIG6L @ 0x30000A
  2644                           ;	Write Protection bit
  2645                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2646                           ;	Write Protection bit
  2647                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2648                           ;	Write Protection bit
  2649                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2650                           ;	Write Protection bit
  2651                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2652   30000A                     	org	3145738
  2653   30000A  0F                 	db	15
  2654                           
  2655                           ;Config register CONFIG6H @ 0x30000B
  2656                           ;	Configuration Register Write Protection bit
  2657                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2658                           ;	Boot Block Write Protection bit
  2659                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2660                           ;	Data EEPROM Write Protection bit
  2661                           ;	WRTD = OFF, Data EEPROM not write-protected
  2662   30000B                     	org	3145739
  2663   30000B  E0                 	db	224
  2664                           
  2665                           ;Config register CONFIG7L @ 0x30000C
  2666                           ;	Table Read Protection bit
  2667                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2668                           ;	Table Read Protection bit
  2669                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2670                           ;	Table Read Protection bit
  2671                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2672                           ;	Table Read Protection bit
  2673                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2674   30000C                     	org	3145740
  2675   30000C  0F                 	db	15
  2676                           
  2677                           ;Config register CONFIG7H @ 0x30000D
  2678                           ;	Boot Block Table Read Protection bit
  2679                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2680   30000D                     	org	3145741
  2681   30000D  40                 	db	64
  2682                           tosu	equ	0xFFF
  2683                           tosh	equ	0xFFE
  2684                           tosl	equ	0xFFD
  2685                           stkptr	equ	0xFFC
  2686                           pclatu	equ	0xFFB
  2687                           pclath	equ	0xFFA
  2688                           pcl	equ	0xFF9
  2689                           tblptru	equ	0xFF8
  2690                           tblptrh	equ	0xFF7
  2691                           tblptrl	equ	0xFF6
  2692                           tablat	equ	0xFF5
  2693                           prodh	equ	0xFF4
  2694                           prodl	equ	0xFF3
  2695                           indf0	equ	0xFEF
  2696                           postinc0	equ	0xFEE
  2697                           postdec0	equ	0xFED
  2698                           preinc0	equ	0xFEC
  2699                           plusw0	equ	0xFEB
  2700                           fsr0h	equ	0xFEA
  2701                           fsr0l	equ	0xFE9
  2702                           wreg	equ	0xFE8
  2703                           indf1	equ	0xFE7
  2704                           postinc1	equ	0xFE6
  2705                           postdec1	equ	0xFE5
  2706                           preinc1	equ	0xFE4
  2707                           plusw1	equ	0xFE3
  2708                           fsr1h	equ	0xFE2
  2709                           fsr1l	equ	0xFE1
  2710                           bsr	equ	0xFE0
  2711                           indf2	equ	0xFDF
  2712                           postinc2	equ	0xFDE
  2713                           postdec2	equ	0xFDD
  2714                           preinc2	equ	0xFDC
  2715                           plusw2	equ	0xFDB
  2716                           fsr2h	equ	0xFDA
  2717                           fsr2l	equ	0xFD9
  2718                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         147
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     45      92
    BANK0           128    115     115
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    GetString@str	PTR unsigned char  size(1) Largest target is 100
		 -> main@str(BANK0[100]), 

    keyboard_input@str	PTR unsigned char  size(1) Largest target is 100
		 -> main@str(BANK0[100]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[5]), 

    S1436$buffer	PTR unsigned char  size(2) Largest target is 0

    S1436$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strcpy	PTR unsigned char  size(1) Largest target is 100
		 -> main@str(BANK0[100]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 100
		 -> main@str(BANK0[100]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 100
		 -> main@str(BANK0[100]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 100
		 -> buffer(BANK1[100]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[3]), STR_2(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    _H_ISR->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _vfpfcnvrt->_fputc
    _fputc->i2_putch
    _abs->___awmod

Critical Paths under _main in BANK0

    _main->_GetString
    _GetString->_strcpy

Critical Paths under _Lo_ISR in BANK0

    _Lo_ISR->_MyusartRead
    _MyusartRead->_putch

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               100   100      0     350
                                             15 BANK0    100   100      0
                          _GetString
                         _Initialize
                     _keyboard_input
 ---------------------------------------------------------------------------------
 (1) _keyboard_input                                       1     0      1       3
                                              8 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            3     1      2     273
                                             12 BANK0      3     1      2
                        _ClearBuffer
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     1      3     109
                                              8 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      99
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     268
                                              3 BANK0      5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          2     2      0     268
                                              1 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     141
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _H_ISR                                               12    12      0    1726
                                             33 COMRAM    12    12      0
                     _button_pressed
                             _printf
          _variable_register_changed
 ---------------------------------------------------------------------------------
 (7) _variable_register_changed                            2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _printf                                               8     3      5    1702
                                             27 COMRAM     6     1      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (8) _vfprintf                                             5     1      4    1646
                                             22 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (9) _vfpfcnvrt                                           12     8      4    1521
                                             10 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4     317
                                              1 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (11) i2_putch                                             1     1      0      87
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _abs                                                 4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___awdiv                                             8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _button_pressed                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetString
     _ClearBuffer
     _strcpy
   _Initialize
   _keyboard_input

 _Lo_ISR (ROOT)
   _MyusartRead
     _putch

 _H_ISR (ROOT)
   _button_pressed
   _printf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           i2_putch
   _variable_register_changed

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     100     39.1%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128    115     115     89.8%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     45      92     73.0%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRlh         10      0       0      0.0%
BITBIGSFRll          9      0       0      0.0%
BITBIGSFRh           7      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     306      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jan 02 17:02:26 2025

                     ___awdiv@sign 0035                                 bsr 0FE0  
                              l105 0DB0                                l113 0C14  
                              l124 0BAA                                l180 0E98  
                              l948 0E52                                _PR2 0FCB  
                              _ccc 0029                                _abs 0DF0  
                              _one 0027                                _two 0025  
                     ___awmod@sign 0035                                wreg 0FE8  
                 ??_button_pressed 0030                               ?_abs 0036  
                             l1800 0B5C                               l1810 0B6E  
                             l1802 0B62                               l1740 0D88  
                             l1732 0D70                               l1820 0B7C  
                             l1812 0B74                               l1804 0B64  
                             l1742 0D8C                               l1830 0B86  
                             l1822 0B7E                               l1814 0B76  
                             l1806 0B66                               l1744 0DA8  
                             l1840 0B90                               l1832 0B88  
                             l1824 0B80                               l1816 0B78  
                             l1808 0B6A                               l1738 0D7A  
                             l1746 0E24                               l1770 0BF0  
                             l1850 0B9C                               l1842 0B92  
                             l1834 0B8A                               l1826 0B82  
                             l1818 0B7A                               l1748 0E28  
                             l1780 0C0C                               l1772 0BF4  
                             l1764 0BAC                               l1860 0BA6  
                             l1852 0B9E                               l1844 0B96  
                             l1836 0B8C                               l1828 0B84  
                             l1766 0BCA                               l1862 0BA8  
                             l1854 0BA0                               l1846 0B98  
                             l1838 0B8E                               l1790 0B32  
                             l1768 0BDE                               l1856 0BA2  
                             l1848 0B9A                               l1792 0B40  
                             l1784 0B1A                               l1880 0D58  
                             l1778 0C02                               l1858 0BA4  
                             l1794 0B42                               l1786 0B22  
                             l1882 0D66                               l1874 0D2E  
                             l1796 0B44                               l1788 0B30  
                             l1876 0D32                               l1798 0B56  
                             l1878 0D50                               STR_1 0606  
                             STR_2 0601                               _CREN 7D5C  
                             u1120 0DA8                               u1200 0D66  
                             u1121 0DA4                               u1201 0D62  
                             u1130 0E52                               u1131 0E4E  
                             u1160 0BCA                               u1161 0BC6  
                             _LATA 0F89                               u1190 0D50  
                             u1191 0D4C                               _LATC 0F8B  
                             _RCIF 7CF5                               i1l90 0C40  
                             i1l93 0C52                               i1l97 0C68  
                             i2l90 0CA2                               i1l99 0C76  
                             i2l93 0CB4                               i2l97 0CCA  
                             i2l99 0CD8                               abs@a 0036  
                             _dbuf 0001                               _main 0D2E  
                             _prec 0023                               fsr1h 0FE2  
                             fsr2h 0FDA                               indf1 0FE7  
                             indf2 0FDF                               fsr1l 0FE1  
                             fsr2l 0FD9                               btemp 005D  
                             start 006C                    __end_ofi2_putch 0CDE  
                  MyusartRead@data 0082                       ___param_bank 0000  
       ?_variable_register_changed 0030                              ??_abs 0038  
                            ?_main 0030                    __end_of___awdiv 0A6C  
                  __end_of___awmod 0B1A                    ___awdiv@divisor 0032  
                            _T1CON 0FCD                              i1l100 0C7A  
                            i1l121 0054                              i1l109 0D2C  
                            i2l100 0CDC                              i2l171 08BC  
                            i2l174 0E9C                              i2l424 0A6A  
                            i2l177 0E9A                              i2l437 0B18  
                            i2l922 0E22                              i2l915 0DEE  
                            i2l909 07B8                              i2l934 09A8  
                            i2l919 0E0A                              i2l871 0E96  
                  ___awdiv@counter 0034                              _RCREG 0FAE  
                     vfpfcnvrt@fmt 003C                              _H_ISR 0008  
                            _TMR1H 0FCF                              _TMR1L 0FCE  
                            _SPBRG 0FAF                              _TRISA 0F92  
                            _TRISB 0F93                              _TRISC 0F94  
                            _TXREG 0FAD                              _flags 002F  
                            _fputc 08E0                              _width 0021  
                            _putch 0C16                        _ClearBuffer 0D70  
                            tablat 0FF5                              ttemp5 005E  
                            ttemp6 0061                              ttemp7 0065  
                            status 0FD8                              wtemp8 005E  
                  __initialization 0E54                       __end_of_main 0D70  
                       _Initialize 0B1A                             ??_main 008F  
                    __activetblptr 0001                             ?_H_ISR 0030  
                           ?_fputc 0031                             _ADRESH 0FC4  
                           _ADRESL 0FC3                             _CCPR1L 0FBE  
                 ___awdiv@dividend 0030                             ?_putch 0030  
                           i1l1730 0C60                             i1l1724 0C1A  
                           i1l1726 0C2E                             i1l1750 0CDE  
                           i1l1728 0C4E                             i1l1760 0D22  
                           i1l1752 0CE2                             i1l1762 0D26  
                           i1l1754 0CFC                             i1l1758 0D12  
                           i1l1870 0050                             i2l1400 0A4A  
                           i1l1864 002E                             i2l1402 0A5A  
                           i2l1410 0A6E                             i1l1866 003C  
                           i2l1404 0A62                             i2l1420 0A9E  
                           i2l1412 0A7C                             i2l1500 0774  
                           i1l1868 004A                             i2l1430 0AE4  
                           i2l1422 0AB0                             i2l1414 0A84  
                           i2l1502 078A                             i2l1440 0B10  
                           i2l1432 0AEC                             i2l1424 0AB8  
                           i2l1416 0A88                             i2l1408 0A6C  
                           i2l1360 0CB0                             i2l1370 09C2  
                           i2l1434 0AF2                             i2l1426 0AC0  
                           i2l1418 0A96                             i2l1362 0CC2  
                           i2l1450 090E                             i2l1506 0796  
                           i2l1380 09E8                             i2l1372 09C6  
                           i2l1364 09AA                             i2l1428 0ACE  
                           i2l1436 0AF8                             i2l1460 0DFE  
                           i2l1356 0C7E                             i2l1452 092C  
                           i2l1444 08E0                             i2l1540 0DBA  
                           i2l1700 0850                             i2l1390 0A1E  
                           i2l1382 09FA                             i2l1374 09D4  
                           i2l1366 09AC                             i2l1438 0B08  
                           i2l1358 0C90                             i2l1454 0962  
                           i2l1446 08F2                             i2l1470 0640  
                           i2l1462 060A                             i2l1542 0DCE  
                           i2l1710 08B0                             i2l1702 0868  
                           i2l1392 0A34                             i2l1384 0A02  
                           i2l1376 09DC                             i2l1368 09BA  
                           i2l1448 0904                             i2l1480 069C  
                           i2l1472 064A                             i2l1464 0628  
                           i2l1544 0DE6                             i2l1712 08B4  
                           i2l1704 0888                             i2l1394 0A3C  
                           i2l1386 0A0A                             i2l1378 09E0  
                           i2l1458 0DF0                             i2l1490 0722  
                           i2l1482 06B4                             i2l1474 0662  
                           i2l1466 0630                             i2l1538 0DB2  
                           i2l1706 088C                             i2l1396 0A3E  
                           i2l1388 0A18                             i2l1492 0732  
                           i2l1484 06E4                             i2l1476 067A  
                           i2l1468 063C                             i2l1708 08A8  
                           i2l1398 0A44                             i2l1494 0742  
                           i2l1486 0700                             i2l1478 0692  
                           i2l1662 0E7E                             i2l1496 0754  
                           i2l1488 0712                             i2l1664 0E82  
                           i2l1680 07EA                             i2l1498 0772  
                           i2l1690 0828                             i2l1682 07FC  
                           i2l1692 082C                             i2l1684 0808  
                           i2l1694 083C                             i2l1686 080A  
                           i2l1678 07DC                             i2l1696 083E  
                           i2l1688 081A                             i2l1698 084C  
                    vfpfcnvrt@done 003F                          ??i2_putch 0030  
                           _Lo_ISR 0018                       vfprintf@cfmt 004A  
                        ??___awdiv 0034                          ??___awmod 0034  
              _current_servo_angle 002B                             _buffer 0100  
                keyboard_input@str 0088                             clear_0 0E5A  
                           clear_1 0E66                   ___awdiv@quotient 0036  
                  ___awmod@divisor 0032                             isa$std 0001  
                  ___awmod@counter 0034                             _printf 0E7E  
                           _strcpy 0E24                             fputc@c 0031  
                     __mediumconst 0000                             tblptrh 0FF7  
                           tblptrl 0FF6                             tblptru 0FF8  
                 __end_of_vfprintf 0DF0                         __accesstop 0080  
          __end_of__initialization 0E6C                      ___rparam_used 0001  
                    __end_of_H_ISR 08E0                  __end_of_GetString 0C16  
                   __pcstackCOMRAM 0030                      __end_of_fputc 09AA  
                      ?_Initialize 0030                      __end_of_putch 0C7C  
                          ??_H_ISR 0051                        i2putch@data 0030  
                    ??_MyusartRead 0081                            ??_fputc 0035  
                          ??_putch 0080                         __pbssBANK1 0100  
                          ?_Lo_ISR 0030        ??_variable_register_changed 0032  
                          ?_printf 004B                            ?_strcpy 0088  
                          i2u60_40 09BA                            i2u60_41 09B6  
                          i2u61_40 09D4                            i2u61_41 09D0  
                          i2u62_40 09FA                            i2u70_40 0AE4  
                          i2u62_41 09F6                            i2u70_41 0AE0  
                          i2u63_40 0A18                            i2u71_40 0B08  
                          i2u55_40 0C90                            i2u63_41 0A14  
                          i2u71_41 0B04                            i2u55_41 0C8C  
                          i2u64_40 0A34                            i2u56_40 0CA2  
                          i2u72_40 08F2                            i2u80_40 06B0  
                          i2u64_41 0A30                            i2u56_41 0C9E  
                          i2u72_41 08EE                            i2u80_41 06AA  
                          i2u65_40 0A5A                            i2u57_40 0CB0  
                          i2u73_40 0904                            i2u81_40 06B2  
                          i2u65_41 0A56                            i2u57_41 0CAC  
                          i2u73_41 0900                            i2u66_40 0A7C  
                          i2u58_40 0CC2                            i2u74_40 092C  
                          i2u82_40 0712                            i2u66_41 0A78  
                          i2u58_41 0CBE                            i2u74_41 0928  
                          i2u82_41 070E                            i2u67_40 0A96  
                          i2u59_40 0CD8                            i2u75_40 0962  
                          i2u83_40 0722                            i2u67_41 0A92  
                          i2u59_41 0CD4                            i2u75_41 095E  
                          i2u83_41 071E                            i2u68_40 0AB0  
                          i2u76_40 0DFE                            i2u84_40 0732  
                          i2u68_41 0AAC                            i2u76_41 0DFA  
                          i2u84_41 072E                            i2u69_40 0ACE  
                          i2u85_40 0742                            i2u77_40 0628  
                          i2u69_41 0ACA                            i2u85_41 073E  
                          i2u77_41 0624                            i2u86_40 0786  
                          i2u78_40 0662                            i2u94_40 0DE6  
                          i2u86_41 0782                            i2u78_41 065E  
                          i2u94_41 0DE2                            i2u79_40 067A  
                          i2u79_41 0676                       ?_ClearBuffer 0030  
              __end_of_MyusartRead 0D2E                            i2_putch 0C7C  
                          __Hparam 0000                            __Lparam 0000  
                          ___awdiv 09AA                            ___awmod 0A6C  
                        ?_vfprintf 0046                       __psmallconst 0600  
                          __pcinit 0E54                            __ramtop 0600  
                          __ptext0 0D2E                            __ptext1 0E98  
                          __ptext2 0B1A                            __ptext3 0BAC  
                          __ptext4 0E24                            __ptext5 0D70  
                          __ptext7 0CDE                            __ptext8 0C16  
                        _T1CONbits 0FCD                          _T2CONbits 0FCA  
                 ___awmod@dividend 0030          _variable_register_changed 0E9A  
                          main@str 008F                     __pintcode_body 07BA  
             end_of_initialization 0E6C                            fputc@fp 0033  
                          int_func 07BA                  __end_of_vfpfcnvrt 07BA  
                        _RCSTAbits 0FAB                            postdec2 0FDD  
                          postinc0 0FEE                            postinc1 0FE6  
                          postinc2 0FDE                   vfpfcnvrt@convarg 0041  
                       ??_vfprintf 004A                            strcpy@d 008B  
                        _TRISAbits 0F92                          _TRISCbits 0F94  
                      _MyusartRead 0CDE                        _CCP1CONbits 0FBD  
                        _TXSTAbits 0FAC                     __end_of_Lo_ISR 006C  
                        _GetString 0BAC                       ??_Initialize 0088  
                      vfpfcnvrt@ap 003D                        vfpfcnvrt@cp 0040  
                      vfpfcnvrt@fp 003A                        _BAUDCONbits 0FB8  
                   __end_of_printf 0E98                     __end_of_strcpy 0E54  
              start_initialization 0E54                        __end_of_abs 0E24  
                     ClearBuffer@i 0088                 __end_of_Initialize 0BAC  
                         ??_Lo_ISR 0083                        vfprintf@fmt 0048  
                       ?_GetString 008C                           ??_printf 0050  
                   _keyboard_input 0E98                           ??_strcpy 008B  
                      __pbssCOMRAM 0001                      __pcstackBANK0 0080  
                         ?i2_putch 0030                     _button_pressed 0E9C  
                        __pintcode 0008                           ?___awdiv 0030  
                         ?___awmod 0030             __end_of_keyboard_input 0E9A  
                      __pintcodelo 0018                         H_ISR@value 005B  
                      __smallconst 0600             __end_of_button_pressed 0E9E  
                         _IPR1bits 0F9F                           _PIE1bits 0F9D  
                         i1u110_20 0C60                           i1u110_21 0C5C  
                         i1u111_20 0C76                           i1u111_21 0C72  
                         i1u114_20 0CFC                           i1u114_21 0CF8  
                         i1u107_20 0C2E                           i1u115_20 0D0E  
                         i1u107_21 0C2A                           i1u115_21 0D0A  
                         i1u108_20 0C40                           i1u108_21 0C3C  
                         i1u109_20 0C4E                           i1u117_20 003C  
                         i1u109_21 0C4A                           i1u117_21 0038  
                         i1u118_20 004A                           i1u118_21 0046  
                         i2u100_40 07EA                           i2u100_41 07E6  
                         i2u101_40 0828                           i2u101_41 0824  
                         i2u102_40 084C                           i2u102_41 0848  
                         i2u103_40 0868                           i2u103_41 0864  
                         i2u104_40 08A8                           i2u104_41 08A4  
                         i2u121_47 0810                           i2u122_47 0832  
                         _PIR1bits 0F9E                        _buffer_size 002D  
__end_of_variable_register_changed 0E9C                           _RCONbits 0FD0  
                      ??_GetString 008E                    ?_keyboard_input 0088  
                        _vfpfcnvrt 060A                         _ADCON0bits 0FC2  
                       _ADCON1bits 0FC1                         _ADCON2bits 0FC0  
                     ?_MyusartRead 0030                         vfpfcnvrt@c 0045  
                  ?_button_pressed 0030                           __Hrparam 0000  
                       vfprintf@ap 0049                           __Lrparam 0000  
                       vfprintf@fp 0046                       __Lsmallconst 0600  
                       ?_vfpfcnvrt 003A                           __ptext10 0E9A  
                         __ptext11 0E7E                           __ptext12 0DB2  
                         __ptext13 060A                           __ptext14 08E0  
                         __ptext15 0C7C                           __ptext16 0DF0  
                         __ptext17 0A6C                           __ptext18 09AA  
                         __ptext19 0E9C                       GetString@str 008C  
                       strcpy@dest 0088     variable_register_changed@value 0030  
                         isa$xinst 0000                           int$flags 005D  
                         _vfprintf 0DB2                          printf@fmt 004B  
                        putch@data 0080                         _INTCONbits 0FF2  
                    ??_ClearBuffer 0088                           intlevel1 0000  
                         intlevel2 0000                          strcpy@src 0089  
                       _OSCCONbits 0FD3                           printf@ap 0050  
                      ??_vfpfcnvrt 003E                __end_of_ClearBuffer 0DB2  
                 ??_keyboard_input 0089  
