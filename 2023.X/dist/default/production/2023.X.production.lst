

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jan 01 22:35:09 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 25/07/2024 GMT
    22                           ; 
    23                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000FE0                     bsr             equ	4064
    56   000FE9                     fsr0            equ	4073
    57   000FEA                     fsr0h           equ	4074
    58   000FE9                     fsr0l           equ	4073
    59   000FE1                     fsr1            equ	4065
    60   000FE2                     fsr1h           equ	4066
    61   000FE1                     fsr1l           equ	4065
    62   000FD9                     fsr2            equ	4057
    63   000FDA                     fsr2h           equ	4058
    64   000FD9                     fsr2l           equ	4057
    65   000FEF                     indf0           equ	4079
    66   000FE7                     indf1           equ	4071
    67   000FDF                     indf2           equ	4063
    68   000FF2                     intcon          equ	4082
    69   000000                     nvmcon          equ	0
    70   000FF9                     pcl             equ	4089
    71   000FFA                     pclath          equ	4090
    72   000FFB                     pclatu          equ	4091
    73   000FEB                     plusw0          equ	4075
    74   000FE3                     plusw1          equ	4067
    75   000FDB                     plusw2          equ	4059
    76   000FED                     postdec0        equ	4077
    77   000FE5                     postdec1        equ	4069
    78   000FDD                     postdec2        equ	4061
    79   000FEE                     postinc0        equ	4078
    80   000FE6                     postinc1        equ	4070
    81   000FDE                     postinc2        equ	4062
    82   000FEC                     preinc0         equ	4076
    83   000FE4                     preinc1         equ	4068
    84   000FDC                     preinc2         equ	4060
    85   000FF3                     prod            equ	4083
    86   000FF4                     prodh           equ	4084
    87   000FF3                     prodl           equ	4083
    88   000FD8                     status          equ	4056
    89   000FF5                     tablat          equ	4085
    90   000FF6                     tblptr          equ	4086
    91   000FF7                     tblptrh         equ	4087
    92   000FF6                     tblptrl         equ	4086
    93   000FF8                     tblptru         equ	4088
    94   000FFD                     tosl            equ	4093
    95   000FE8                     wreg            equ	4072
    96   000F80                     PORTA           equ	3968	;# 
    97   000F81                     PORTB           equ	3969	;# 
    98   000F82                     PORTC           equ	3970	;# 
    99   000F83                     PORTD           equ	3971	;# 
   100   000F84                     PORTE           equ	3972	;# 
   101   000F89                     LATA            equ	3977	;# 
   102   000F8A                     LATB            equ	3978	;# 
   103   000F8B                     LATC            equ	3979	;# 
   104   000F8C                     LATD            equ	3980	;# 
   105   000F8D                     LATE            equ	3981	;# 
   106   000F92                     TRISA           equ	3986	;# 
   107   000F92                     DDRA            equ	3986	;# 
   108   000F93                     TRISB           equ	3987	;# 
   109   000F93                     DDRB            equ	3987	;# 
   110   000F94                     TRISC           equ	3988	;# 
   111   000F94                     DDRC            equ	3988	;# 
   112   000F95                     TRISD           equ	3989	;# 
   113   000F95                     DDRD            equ	3989	;# 
   114   000F96                     TRISE           equ	3990	;# 
   115   000F96                     DDRE            equ	3990	;# 
   116   000F9B                     OSCTUNE         equ	3995	;# 
   117   000F9D                     PIE1            equ	3997	;# 
   118   000F9E                     PIR1            equ	3998	;# 
   119   000F9F                     IPR1            equ	3999	;# 
   120   000FA0                     PIE2            equ	4000	;# 
   121   000FA1                     PIR2            equ	4001	;# 
   122   000FA2                     IPR2            equ	4002	;# 
   123   000FA6                     EECON1          equ	4006	;# 
   124   000FA7                     EECON2          equ	4007	;# 
   125   000FA8                     EEDATA          equ	4008	;# 
   126   000FA9                     EEADR           equ	4009	;# 
   127   000FAB                     RCSTA           equ	4011	;# 
   128   000FAB                     RCSTA1          equ	4011	;# 
   129   000FAC                     TXSTA           equ	4012	;# 
   130   000FAC                     TXSTA1          equ	4012	;# 
   131   000FAD                     TXREG           equ	4013	;# 
   132   000FAD                     TXREG1          equ	4013	;# 
   133   000FAE                     RCREG           equ	4014	;# 
   134   000FAE                     RCREG1          equ	4014	;# 
   135   000FAF                     SPBRG           equ	4015	;# 
   136   000FAF                     SPBRG1          equ	4015	;# 
   137   000FB0                     SPBRGH          equ	4016	;# 
   138   000FB1                     T3CON           equ	4017	;# 
   139   000FB2                     TMR3            equ	4018	;# 
   140   000FB2                     TMR3L           equ	4018	;# 
   141   000FB3                     TMR3H           equ	4019	;# 
   142   000FB4                     CMCON           equ	4020	;# 
   143   000FB5                     CVRCON          equ	4021	;# 
   144   000FB6                     ECCP1AS         equ	4022	;# 
   145   000FB6                     ECCPAS          equ	4022	;# 
   146   000FB7                     PWM1CON         equ	4023	;# 
   147   000FB7                     ECCP1DEL        equ	4023	;# 
   148   000FB8                     BAUDCON         equ	4024	;# 
   149   000FB8                     BAUDCTL         equ	4024	;# 
   150   000FBA                     CCP2CON         equ	4026	;# 
   151   000FBB                     CCPR2           equ	4027	;# 
   152   000FBB                     CCPR2L          equ	4027	;# 
   153   000FBC                     CCPR2H          equ	4028	;# 
   154   000FBD                     CCP1CON         equ	4029	;# 
   155   000FBE                     CCPR1           equ	4030	;# 
   156   000FBE                     CCPR1L          equ	4030	;# 
   157   000FBF                     CCPR1H          equ	4031	;# 
   158   000FC0                     ADCON2          equ	4032	;# 
   159   000FC1                     ADCON1          equ	4033	;# 
   160   000FC2                     ADCON0          equ	4034	;# 
   161   000FC3                     ADRES           equ	4035	;# 
   162   000FC3                     ADRESL          equ	4035	;# 
   163   000FC4                     ADRESH          equ	4036	;# 
   164   000FC5                     SSPCON2         equ	4037	;# 
   165   000FC6                     SSPCON1         equ	4038	;# 
   166   000FC7                     SSPSTAT         equ	4039	;# 
   167   000FC8                     SSPADD          equ	4040	;# 
   168   000FC9                     SSPBUF          equ	4041	;# 
   169   000FCA                     T2CON           equ	4042	;# 
   170   000FCB                     PR2             equ	4043	;# 
   171   000FCB                     MEMCON          equ	4043	;# 
   172   000FCC                     TMR2            equ	4044	;# 
   173   000FCD                     T1CON           equ	4045	;# 
   174   000FCE                     TMR1            equ	4046	;# 
   175   000FCE                     TMR1L           equ	4046	;# 
   176   000FCF                     TMR1H           equ	4047	;# 
   177   000FD0                     RCON            equ	4048	;# 
   178   000FD1                     WDTCON          equ	4049	;# 
   179   000FD2                     HLVDCON         equ	4050	;# 
   180   000FD2                     LVDCON          equ	4050	;# 
   181   000FD3                     OSCCON          equ	4051	;# 
   182   000FD5                     T0CON           equ	4053	;# 
   183   000FD6                     TMR0            equ	4054	;# 
   184   000FD6                     TMR0L           equ	4054	;# 
   185   000FD7                     TMR0H           equ	4055	;# 
   186   000FD8                     STATUS          equ	4056	;# 
   187   000FD9                     FSR2            equ	4057	;# 
   188   000FD9                     FSR2L           equ	4057	;# 
   189   000FDA                     FSR2H           equ	4058	;# 
   190   000FDB                     PLUSW2          equ	4059	;# 
   191   000FDC                     PREINC2         equ	4060	;# 
   192   000FDD                     POSTDEC2        equ	4061	;# 
   193   000FDE                     POSTINC2        equ	4062	;# 
   194   000FDF                     INDF2           equ	4063	;# 
   195   000FE0                     BSR             equ	4064	;# 
   196   000FE1                     FSR1            equ	4065	;# 
   197   000FE1                     FSR1L           equ	4065	;# 
   198   000FE2                     FSR1H           equ	4066	;# 
   199   000FE3                     PLUSW1          equ	4067	;# 
   200   000FE4                     PREINC1         equ	4068	;# 
   201   000FE5                     POSTDEC1        equ	4069	;# 
   202   000FE6                     POSTINC1        equ	4070	;# 
   203   000FE7                     INDF1           equ	4071	;# 
   204   000FE8                     WREG            equ	4072	;# 
   205   000FE9                     FSR0            equ	4073	;# 
   206   000FE9                     FSR0L           equ	4073	;# 
   207   000FEA                     FSR0H           equ	4074	;# 
   208   000FEB                     PLUSW0          equ	4075	;# 
   209   000FEC                     PREINC0         equ	4076	;# 
   210   000FED                     POSTDEC0        equ	4077	;# 
   211   000FEE                     POSTINC0        equ	4078	;# 
   212   000FEF                     INDF0           equ	4079	;# 
   213   000FF0                     INTCON3         equ	4080	;# 
   214   000FF1                     INTCON2         equ	4081	;# 
   215   000FF2                     INTCON          equ	4082	;# 
   216   000FF3                     PROD            equ	4083	;# 
   217   000FF3                     PRODL           equ	4083	;# 
   218   000FF4                     PRODH           equ	4084	;# 
   219   000FF5                     TABLAT          equ	4085	;# 
   220   000FF6                     TBLPTR          equ	4086	;# 
   221   000FF6                     TBLPTRL         equ	4086	;# 
   222   000FF7                     TBLPTRH         equ	4087	;# 
   223   000FF8                     TBLPTRU         equ	4088	;# 
   224   000FF9                     PCLAT           equ	4089	;# 
   225   000FF9                     PC              equ	4089	;# 
   226   000FF9                     PCL             equ	4089	;# 
   227   000FFA                     PCLATH          equ	4090	;# 
   228   000FFB                     PCLATU          equ	4091	;# 
   229   000FFC                     STKPTR          equ	4092	;# 
   230   000FFD                     TOS             equ	4093	;# 
   231   000FFD                     TOSL            equ	4093	;# 
   232   000FFE                     TOSH            equ	4094	;# 
   233   000FFF                     TOSU            equ	4095	;# 
   234   000FF2                     _INTCONbits     set	4082
   235   000F9D                     _PIE1bits       set	3997
   236   000FC0                     _ADCON2bits     set	4032
   237   000FC1                     _ADCON1bits     set	4033
   238   000F92                     _TRISAbits      set	3986
   239   000FCB                     _PR2            set	4043
   240   000FCA                     _T2CON          set	4042
   241   000F8B                     _LATC           set	3979
   242   000F94                     _TRISCbits      set	3988
   243   000FD3                     _OSCCONbits     set	4051
   244   000FCA                     _T2CONbits      set	4042
   245   000FBD                     _CCP1CONbits    set	4029
   246   000FBE                     _CCPR1L         set	4030
   247   000FC2                     _ADCON0bits     set	4034
   248   000F9E                     _PIR1bits       set	3998
   249   000FC4                     _ADRESH         set	4036
   250                           
   251                           ; #config settings
   252                           
   253                           	psect	cinit
   254   0007F6                     __pcinit:
   255                           	callstack 0
   256   0007F6                     start_initialization:
   257                           	callstack 0
   258   0007F6                     __initialization:
   259                           	callstack 0
   260                           
   261                           ; Clear objects allocated to COMRAM (2 bytes)
   262   0007F6  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
   263   0007F8  6A13               	clrf	__pbssCOMRAM& (0+255),c
   264   0007FA                     end_of_initialization:
   265                           	callstack 0
   266   0007FA                     __end_of__initialization:
   267                           	callstack 0
   268   0007FA  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   269   0007FC  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   270   0007FE  0100               	movlb	0
   271   000800  EF62  F003         	goto	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMRAM
   274   000013                     __pbssCOMRAM:
   275                           	callstack 0
   276   000013                     _a:
   277                           	callstack 0
   278   000013                     	ds	2
   279                           
   280                           	psect	cstackCOMRAM
   281   000001                     __pcstackCOMRAM:
   282                           	callstack 0
   283   000001                     ?___awdiv:
   284                           	callstack 0
   285   000001                     ___awdiv@dividend:
   286                           	callstack 0
   287   000001                     i2setServoPosition@dutyCycle:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x0
   291   000001                     	ds	2
   292   000003                     ___awdiv@divisor:
   293                           	callstack 0
   294   000003                     ??i2_setServoPosition:
   295                           
   296                           ; 1 bytes @ 0x2
   297   000003                     	ds	2
   298   000005                     ___awdiv@counter:
   299                           	callstack 0
   300   000005                     
   301                           ; 1 bytes @ 0x4
   302   000005                     	ds	1
   303   000006                     ___awdiv@sign:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x5
   307   000006                     	ds	1
   308   000007                     ___awdiv@quotient:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x6
   312   000007                     	ds	2
   313   000009                     ??_H_ISR:
   314                           
   315                           ; 1 bytes @ 0x8
   316   000009                     	ds	4
   317   00000D                     H_ISR@value:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0xC
   321   00000D                     	ds	2
   322   00000F                     setServoPosition@dutyCycle:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0xE
   326   00000F                     	ds	2
   327   000011                     ??_setServoPosition:
   328                           
   329                           ; 1 bytes @ 0x10
   330   000011                     	ds	2
   331   000013                     
   332                           ; 1 bytes @ 0x12
   333 ;;
   334 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   335 ;;
   336 ;; *************** function _main *****************
   337 ;; Defined at:
   338 ;;		line 34 in file "3a.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, status,2, status,0, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   352 ;;      Params:         0       0       0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0       0       0
   355 ;;      Totals:         0       0       0       0       0       0       0
   356 ;;Total ram usage:        0 bytes
   357 ;; Hardware stack levels required when called: 3
   358 ;; This function calls:
   359 ;;		_setServoPosition
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366   0006C4                     __ptext0:
   367                           	callstack 0
   368   0006C4                     _main:
   369                           	callstack 28
   370   0006C4  84CA               	bsf	202,2,c	;volatile
   371   0006C6  50CA               	movf	202,w,c	;volatile
   372   0006C8  0BFC               	andlw	-4
   373   0006CA  0901               	iorlw	1
   374   0006CC  6ECA               	movwf	202,c	;volatile
   375   0006CE  50D3               	movf	211,w,c	;volatile
   376   0006D0  0B8F               	andlw	-113
   377   0006D2  0910               	iorlw	16
   378   0006D4  6ED3               	movwf	211,c	;volatile
   379   0006D6  50BD               	movf	189,w,c	;volatile
   380   0006D8  0BF0               	andlw	-16
   381   0006DA  090C               	iorlw	12
   382   0006DC  6EBD               	movwf	189,c	;volatile
   383   0006DE  9494               	bcf	148,2,c	;volatile
   384   0006E0  6A8B               	clrf	139,c	;volatile
   385   0006E2  0E05               	movlw	5
   386   0006E4  6ECA               	movwf	202,c	;volatile
   387   0006E6  0E9B               	movlw	155
   388   0006E8  6ECB               	movwf	203,c	;volatile
   389   0006EA  6ABE               	clrf	190,c	;volatile
   390   0006EC  8092               	bsf	146,0,c	;volatile
   391   0006EE  50C1               	movf	193,w,c	;volatile
   392   0006F0  0BF0               	andlw	-16
   393   0006F2  090E               	iorlw	14
   394   0006F4  6EC1               	movwf	193,c	;volatile
   395   0006F6  0EC3               	movlw	-61
   396   0006F8  16C2               	andwf	194,f,c	;volatile
   397   0006FA  50D3               	movf	211,w,c	;volatile
   398   0006FC  0B8F               	andlw	-113
   399   0006FE  0940               	iorlw	64
   400   000700  6ED3               	movwf	211,c	;volatile
   401   000702  98C1               	bcf	193,4,c	;volatile
   402   000704  9AC1               	bcf	193,5,c	;volatile
   403   000706  0EF8               	movlw	-8
   404   000708  16C0               	andwf	192,f,c	;volatile
   405   00070A  50C0               	movf	192,w,c	;volatile
   406   00070C  0BC7               	andlw	-57
   407   00070E  0908               	iorlw	8
   408   000710  6EC0               	movwf	192,c	;volatile
   409   000712  80C2               	bsf	194,0,c	;volatile
   410   000714  9EC0               	bcf	192,7,c	;volatile
   411   000716  8C9D               	bsf	157,6,c	;volatile
   412   000718  9C9E               	bcf	158,6,c	;volatile
   413   00071A  8CF2               	bsf	242,6,c	;volatile
   414   00071C  8EF2               	bsf	242,7,c	;volatile
   415   00071E  82C2               	bsf	194,1,c	;volatile
   416   000720  0E00               	movlw	0
   417   000722  6E10               	movwf	(setServoPosition@dutyCycle+1)^0,c
   418   000724  0E1E               	movlw	30
   419   000726  6E0F               	movwf	setServoPosition@dutyCycle^0,c
   420   000728  ECCD  F003         	call	_setServoPosition	;wreg free
   421   00072C                     l51:
   422   00072C  EF96  F003         	goto	l51
   423   000730  EF07  F000         	goto	start
   424   000734                     __end_of_main:
   425                           	callstack 0
   426                           
   427 ;; *************** function _setServoPosition *****************
   428 ;; Defined at:
   429 ;;		line 29 in file "3a.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;  dutyCycle       2   14[COMRAM] unsigned int 
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2, status,0
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   443 ;;      Params:         2       0       0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0       0       0
   445 ;;      Temps:          2       0       0       0       0       0       0
   446 ;;      Totals:         4       0       0       0       0       0       0
   447 ;;Total ram usage:        4 bytes
   448 ;; Hardware stack levels used: 1
   449 ;; Hardware stack levels required when called: 2
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text1
   458   00079A                     __ptext1:
   459                           	callstack 0
   460   00079A                     _setServoPosition:
   461                           	callstack 28
   462   00079A  C00F  F011         	movff	setServoPosition@dutyCycle,??_setServoPosition
   463   00079E  C010  F012         	movff	setServoPosition@dutyCycle+1,??_setServoPosition+1
   464   0007A2  90D8               	bcf	status,0,c
   465   0007A4  3212               	rrcf	(??_setServoPosition+1)^0,f,c
   466   0007A6  3211               	rrcf	??_setServoPosition^0,f,c
   467   0007A8  90D8               	bcf	status,0,c
   468   0007AA  3212               	rrcf	(??_setServoPosition+1)^0,f,c
   469   0007AC  3211               	rrcf	??_setServoPosition^0,f,c
   470   0007AE  5011               	movf	??_setServoPosition^0,w,c
   471   0007B0  6EBE               	movwf	190,c	;volatile
   472   0007B2  C00F  F011         	movff	setServoPosition@dutyCycle,??_setServoPosition
   473   0007B6  0E03               	movlw	3
   474   0007B8  1611               	andwf	??_setServoPosition^0,f,c
   475   0007BA  3A11               	swapf	??_setServoPosition^0,f,c
   476   0007BC  50BD               	movf	189,w,c	;volatile
   477   0007BE  1811               	xorwf	??_setServoPosition^0,w,c
   478   0007C0  0BCF               	andlw	-49
   479   0007C2  1811               	xorwf	??_setServoPosition^0,w,c
   480   0007C4  6EBD               	movwf	189,c	;volatile
   481   0007C6  0012               	return		;funcret
   482   0007C8                     __end_of_setServoPosition:
   483                           	callstack 0
   484                           
   485 ;; *************** function _H_ISR *****************
   486 ;; Defined at:
   487 ;;		line 18 in file "3a.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  value           2   12[COMRAM] int 
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   501 ;;      Params:         0       0       0       0       0       0       0
   502 ;;      Locals:         2       0       0       0       0       0       0
   503 ;;      Temps:          4       0       0       0       0       0       0
   504 ;;      Totals:         6       0       0       0       0       0       0
   505 ;;Total ram usage:        6 bytes
   506 ;; Hardware stack levels used: 1
   507 ;; Hardware stack levels required when called: 1
   508 ;; This function calls:
   509 ;;		___awdiv
   510 ;;		i2_setServoPosition
   511 ;; This function is called by:
   512 ;;		Interrupt level 2
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	intcode
   517   000008                     __pintcode:
   518                           	callstack 0
   519   000008                     _H_ISR:
   520                           	callstack 28
   521                           
   522                           ;incstack = 0
   523   000008  8215               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   524   00000A  ED9A  F003         	call	int_func,f	;refresh shadow registers
   525                           
   526                           	psect	intcode_body
   527   000734                     __pintcode_body:
   528                           	callstack 28
   529   000734                     int_func:
   530                           	callstack 28
   531   000734  0006               	pop		; remove dummy address from shadow register refresh
   532   000736  CFF3 F00B          	movff	prodl,??_H_ISR+2
   533   00073A  CFF4 F00C          	movff	prodh,??_H_ISR+3
   534   00073E  CFC4 F00D          	movff	4036,H_ISR@value	;volatile
   535   000742  6A0E               	clrf	(H_ISR@value+1)^0,c
   536   000744  0E1E               	movlw	30
   537   000746  020D               	mulwf	H_ISR@value^0,c
   538   000748  CFF3 F009          	movff	prodl,??_H_ISR
   539   00074C  CFF4 F00A          	movff	prodh,??_H_ISR+1
   540   000750  020E               	mulwf	(H_ISR@value+1)^0,c
   541   000752  50F3               	movf	prodl,w,c
   542   000754  260A               	addwf	(??_H_ISR+1)^0,f,c
   543   000756  C009  F001         	movff	??_H_ISR,___awdiv@dividend
   544   00075A  C00A  F002         	movff	??_H_ISR+1,___awdiv@dividend+1
   545   00075E  0E04               	movlw	4
   546   000760  6E04               	movwf	(___awdiv@divisor+1)^0,c
   547   000762  0E00               	movlw	0
   548   000764  6E03               	movwf	___awdiv@divisor^0,c
   549   000766  EC01  F003         	call	___awdiv	;wreg free
   550   00076A  0E2D               	movlw	45
   551   00076C  2401               	addwf	?___awdiv^0,w,c
   552   00076E  6E13               	movwf	_a^0,c
   553   000770  0E00               	movlw	0
   554   000772  2002               	addwfc	(?___awdiv+1)^0,w,c
   555   000774  6E14               	movwf	(_a+1)^0,c
   556   000776  C013  F001         	movff	_a,i2setServoPosition@dutyCycle
   557   00077A  C014  F002         	movff	_a+1,i2setServoPosition@dutyCycle+1
   558   00077E  ECE4  F003         	call	i2_setServoPosition	;wreg free
   559   000782  9C9E               	bcf	158,6,c	;volatile
   560   000784  0EFA               	movlw	250
   561   000786                     i2u13_47:
   562   000786  D000               	nop2	
   563   000788  2EE8               	decfsz	wreg,f,c
   564   00078A  D7FD               	bra	i2u13_47
   565   00078C  82C2               	bsf	194,1,c	;volatile
   566   00078E  C00C  FFF4         	movff	??_H_ISR+3,prodh
   567   000792  C00B  FFF3         	movff	??_H_ISR+2,prodl
   568   000796  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   569   000798  0011               	retfie		f
   570   00079A                     __end_of_H_ISR:
   571                           	callstack 0
   572                           
   573 ;; *************** function i2_setServoPosition *****************
   574 ;; Defined at:
   575 ;;		line 29 in file "3a.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  dutyCycle       2    0[COMRAM] unsigned int 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, status,2, status,0
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   589 ;;      Params:         2       0       0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0
   591 ;;      Temps:          2       0       0       0       0       0       0
   592 ;;      Totals:         4       0       0       0       0       0       0
   593 ;;Total ram usage:        4 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_H_ISR
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text3
   603   0007C8                     __ptext3:
   604                           	callstack 0
   605   0007C8                     i2_setServoPosition:
   606                           	callstack 28
   607   0007C8  C001  F003         	movff	i2setServoPosition@dutyCycle,??i2_setServoPosition
   608   0007CC  C002  F004         	movff	i2setServoPosition@dutyCycle+1,??i2_setServoPosition+1
   609   0007D0  90D8               	bcf	status,0,c
   610   0007D2  3204               	rrcf	(??i2_setServoPosition+1)^0,f,c
   611   0007D4  3203               	rrcf	??i2_setServoPosition^0,f,c
   612   0007D6  90D8               	bcf	status,0,c
   613   0007D8  3204               	rrcf	(??i2_setServoPosition+1)^0,f,c
   614   0007DA  3203               	rrcf	??i2_setServoPosition^0,f,c
   615   0007DC  5003               	movf	??i2_setServoPosition^0,w,c
   616   0007DE  6EBE               	movwf	190,c	;volatile
   617   0007E0  C001  F003         	movff	i2setServoPosition@dutyCycle,??i2_setServoPosition
   618   0007E4  0E03               	movlw	3
   619   0007E6  1603               	andwf	??i2_setServoPosition^0,f,c
   620   0007E8  3A03               	swapf	??i2_setServoPosition^0,f,c
   621   0007EA  50BD               	movf	189,w,c	;volatile
   622   0007EC  1803               	xorwf	??i2_setServoPosition^0,w,c
   623   0007EE  0BCF               	andlw	-49
   624   0007F0  1803               	xorwf	??i2_setServoPosition^0,w,c
   625   0007F2  6EBD               	movwf	189,c	;volatile
   626   0007F4  0012               	return		;funcret
   627   0007F6                     __end_ofi2_setServoPosition:
   628                           	callstack 0
   629                           
   630 ;; *************** function ___awdiv *****************
   631 ;; Defined at:
   632 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  dividend        2    0[COMRAM] int 
   635 ;;  divisor         2    2[COMRAM] int 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  quotient        2    6[COMRAM] int 
   638 ;;  sign            1    5[COMRAM] unsigned char 
   639 ;;  counter         1    4[COMRAM] unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  2    0[COMRAM] int 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   649 ;;      Params:         4       0       0       0       0       0       0
   650 ;;      Locals:         4       0       0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0
   652 ;;      Totals:         8       0       0       0       0       0       0
   653 ;;Total ram usage:        8 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_H_ISR
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           	psect	text4
   663   000602                     __ptext4:
   664                           	callstack 0
   665   000602                     ___awdiv:
   666                           	callstack 28
   667   000602  6A06               	clrf	___awdiv@sign^0,c
   668   000604  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   669   000606  EF09  F003         	goto	i2u7_40
   670   00060A  EF07  F003         	goto	i2u7_41
   671   00060E                     i2u7_41:
   672   00060E  EF0F  F003         	goto	i2l832
   673   000612                     i2u7_40:
   674   000612  6C03               	negf	___awdiv@divisor^0,c
   675   000614  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   676   000616  B0D8               	btfsc	status,0,c
   677   000618  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   678   00061A  0E01               	movlw	1
   679   00061C  6E06               	movwf	___awdiv@sign^0,c
   680   00061E                     i2l832:
   681   00061E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   682   000620  EF16  F003         	goto	i2u8_40
   683   000624  EF14  F003         	goto	i2u8_41
   684   000628                     i2u8_41:
   685   000628  EF1C  F003         	goto	i2l838
   686   00062C                     i2u8_40:
   687   00062C  6C01               	negf	___awdiv@dividend^0,c
   688   00062E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   689   000630  B0D8               	btfsc	status,0,c
   690   000632  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   691   000634  0E01               	movlw	1
   692   000636  1A06               	xorwf	___awdiv@sign^0,f,c
   693   000638                     i2l838:
   694   000638  0E00               	movlw	0
   695   00063A  6E08               	movwf	(___awdiv@quotient+1)^0,c
   696   00063C  0E00               	movlw	0
   697   00063E  6E07               	movwf	___awdiv@quotient^0,c
   698   000640  5003               	movf	___awdiv@divisor^0,w,c
   699   000642  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   700   000644  B4D8               	btfsc	status,2,c
   701   000646  EF27  F003         	goto	i2u9_41
   702   00064A  EF29  F003         	goto	i2u9_40
   703   00064E                     i2u9_41:
   704   00064E  EF51  F003         	goto	i2l860
   705   000652                     i2u9_40:
   706   000652  0E01               	movlw	1
   707   000654  6E05               	movwf	___awdiv@counter^0,c
   708   000656  EF31  F003         	goto	i2l846
   709   00065A                     i2l844:
   710   00065A  90D8               	bcf	status,0,c
   711   00065C  3603               	rlcf	___awdiv@divisor^0,f,c
   712   00065E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   713   000660  2A05               	incf	___awdiv@counter^0,f,c
   714   000662                     i2l846:
   715   000662  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   716   000664  EF36  F003         	goto	i2u10_41
   717   000668  EF38  F003         	goto	i2u10_40
   718   00066C                     i2u10_41:
   719   00066C  EF2D  F003         	goto	i2l844
   720   000670                     i2u10_40:
   721   000670                     i2l848:
   722   000670  90D8               	bcf	status,0,c
   723   000672  3607               	rlcf	___awdiv@quotient^0,f,c
   724   000674  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   725   000676  5003               	movf	___awdiv@divisor^0,w,c
   726   000678  5C01               	subwf	___awdiv@dividend^0,w,c
   727   00067A  5004               	movf	(___awdiv@divisor+1)^0,w,c
   728   00067C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   729   00067E  A0D8               	btfss	status,0,c
   730   000680  EF44  F003         	goto	i2u11_41
   731   000684  EF46  F003         	goto	i2u11_40
   732   000688                     i2u11_41:
   733   000688  EF4B  F003         	goto	i2l856
   734   00068C                     i2u11_40:
   735   00068C  5003               	movf	___awdiv@divisor^0,w,c
   736   00068E  5E01               	subwf	___awdiv@dividend^0,f,c
   737   000690  5004               	movf	(___awdiv@divisor+1)^0,w,c
   738   000692  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   739   000694  8007               	bsf	___awdiv@quotient^0,0,c
   740   000696                     i2l856:
   741   000696  90D8               	bcf	status,0,c
   742   000698  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   743   00069A  3203               	rrcf	___awdiv@divisor^0,f,c
   744   00069C  2E05               	decfsz	___awdiv@counter^0,f,c
   745   00069E  EF38  F003         	goto	i2l848
   746   0006A2                     i2l860:
   747   0006A2  5006               	movf	___awdiv@sign^0,w,c
   748   0006A4  B4D8               	btfsc	status,2,c
   749   0006A6  EF57  F003         	goto	i2u12_41
   750   0006AA  EF59  F003         	goto	i2u12_40
   751   0006AE                     i2u12_41:
   752   0006AE  EF5D  F003         	goto	i2l864
   753   0006B2                     i2u12_40:
   754   0006B2  6C07               	negf	___awdiv@quotient^0,c
   755   0006B4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   756   0006B6  B0D8               	btfsc	status,0,c
   757   0006B8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   758   0006BA                     i2l864:
   759   0006BA  C007  F001         	movff	___awdiv@quotient,?___awdiv
   760   0006BE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   761   0006C2  0012               	return		;funcret
   762   0006C4                     __end_of___awdiv:
   763                           	callstack 0
   764                           
   765                           	psect	smallconst
   766   000600                     __psmallconst:
   767                           	callstack 0
   768   000600  00                 	db	0
   769   000601  00                 	db	0	; dummy byte at the end
   770   000000                     __activetblptr  equ	0
   771                           
   772                           	psect	rparam
   773   000001                     ___rparam_used  equ	1
   774   000000                     ___param_bank   equ	0
   775   000000                     __Lparam        equ	__Lrparam
   776   000000                     __Hparam        equ	__Hrparam
   777                           
   778                           	psect	temp
   779   000015                     btemp:
   780                           	callstack 0
   781   000015                     	ds	1
   782   000015                     int$flags       set	btemp
   783   000016                     wtemp8          set	btemp+1
   784   000016                     ttemp5          set	btemp+1
   785   000019                     ttemp6          set	btemp+4
   786   00001D                     ttemp7          set	btemp+8
   787                           
   788                           	psect	idloc
   789                           
   790                           ;Config register IDLOC0 @ 0x200000
   791                           ;	unspecified, using default values
   792   200000                     	org	2097152
   793   200000  FF                 	db	255
   794                           
   795                           ;Config register IDLOC1 @ 0x200001
   796                           ;	unspecified, using default values
   797   200001                     	org	2097153
   798   200001  FF                 	db	255
   799                           
   800                           ;Config register IDLOC2 @ 0x200002
   801                           ;	unspecified, using default values
   802   200002                     	org	2097154
   803   200002  FF                 	db	255
   804                           
   805                           ;Config register IDLOC3 @ 0x200003
   806                           ;	unspecified, using default values
   807   200003                     	org	2097155
   808   200003  FF                 	db	255
   809                           
   810                           ;Config register IDLOC4 @ 0x200004
   811                           ;	unspecified, using default values
   812   200004                     	org	2097156
   813   200004  FF                 	db	255
   814                           
   815                           ;Config register IDLOC5 @ 0x200005
   816                           ;	unspecified, using default values
   817   200005                     	org	2097157
   818   200005  FF                 	db	255
   819                           
   820                           ;Config register IDLOC6 @ 0x200006
   821                           ;	unspecified, using default values
   822   200006                     	org	2097158
   823   200006  FF                 	db	255
   824                           
   825                           ;Config register IDLOC7 @ 0x200007
   826                           ;	unspecified, using default values
   827   200007                     	org	2097159
   828   200007  FF                 	db	255
   829                           
   830                           	psect	config
   831                           
   832                           ; Padding undefined space
   833   300000                     	org	3145728
   834   300000  FF                 	db	255
   835                           
   836                           ;Config register CONFIG1H @ 0x300001
   837                           ;	Oscillator Selection bits
   838                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   839                           ;	Fail-Safe Clock Monitor Enable bit
   840                           ;	FCMEN = 0x0, unprogrammed default
   841                           ;	Internal/External Oscillator Switchover bit
   842                           ;	IESO = 0x0, unprogrammed default
   843   300001                     	org	3145729
   844   300001  08                 	db	8
   845                           
   846                           ;Config register CONFIG2L @ 0x300002
   847                           ;	Power-up Timer Enable bit
   848                           ;	PWRT = OFF, PWRT disabled
   849                           ;	Brown-out Reset Enable bits
   850                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
   851                           ;	Brown Out Reset Voltage bits
   852                           ;	BORV = 0x3, unprogrammed default
   853   300002                     	org	3145730
   854   300002  1B                 	db	27
   855                           
   856                           ;Config register CONFIG2H @ 0x300003
   857                           ;	Watchdog Timer Enable bit
   858                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   859                           ;	Watchdog Timer Postscale Select bits
   860                           ;	WDTPS = 0xF, unprogrammed default
   861   300003                     	org	3145731
   862   300003  1E                 	db	30
   863                           
   864                           ; Padding undefined space
   865   300004                     	org	3145732
   866   300004  FF                 	db	255
   867                           
   868                           ;Config register CONFIG3H @ 0x300005
   869                           ;	CCP2 MUX bit
   870                           ;	CCP2MX = 0x1, unprogrammed default
   871                           ;	PORTB A/D Enable bit
   872                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   873                           ;	Low-Power Timer1 Oscillator Enable bit
   874                           ;	LPT1OSC = 0x0, unprogrammed default
   875                           ;	MCLR Pin Enable bit
   876                           ;	MCLRE = 0x1, unprogrammed default
   877   300005                     	org	3145733
   878   300005  81                 	db	129
   879                           
   880                           ;Config register CONFIG4L @ 0x300006
   881                           ;	Stack Full/Underflow Reset Enable bit
   882                           ;	STVREN = 0x1, unprogrammed default
   883                           ;	Single-Supply ICSP Enable bit
   884                           ;	LVP = OFF, Single-Supply ICSP disabled
   885                           ;	Extended Instruction Set Enable bit
   886                           ;	XINST = 0x0, unprogrammed default
   887                           ;	Background Debugger Enable bit
   888                           ;	DEBUG = 0x1, unprogrammed default
   889   300006                     	org	3145734
   890   300006  81                 	db	129
   891                           
   892                           ; Padding undefined space
   893   300007                     	org	3145735
   894   300007  FF                 	db	255
   895                           
   896                           ;Config register CONFIG5L @ 0x300008
   897                           ;	unspecified, using default values
   898                           ;	Code Protection bit
   899                           ;	CP0 = 0x1, unprogrammed default
   900                           ;	Code Protection bit
   901                           ;	CP1 = 0x1, unprogrammed default
   902                           ;	Code Protection bit
   903                           ;	CP2 = 0x1, unprogrammed default
   904                           ;	Code Protection bit
   905                           ;	CP3 = 0x1, unprogrammed default
   906   300008                     	org	3145736
   907   300008  0F                 	db	15
   908                           
   909                           ;Config register CONFIG5H @ 0x300009
   910                           ;	Boot Block Code Protection bit
   911                           ;	CPB = 0x1, unprogrammed default
   912                           ;	Data EEPROM Code Protection bit
   913                           ;	CPD = OFF, Data EEPROM not code-protected
   914   300009                     	org	3145737
   915   300009  C0                 	db	192
   916                           
   917                           ;Config register CONFIG6L @ 0x30000A
   918                           ;	unspecified, using default values
   919                           ;	Write Protection bit
   920                           ;	WRT0 = 0x1, unprogrammed default
   921                           ;	Write Protection bit
   922                           ;	WRT1 = 0x1, unprogrammed default
   923                           ;	Write Protection bit
   924                           ;	WRT2 = 0x1, unprogrammed default
   925                           ;	Write Protection bit
   926                           ;	WRT3 = 0x1, unprogrammed default
   927   30000A                     	org	3145738
   928   30000A  0F                 	db	15
   929                           
   930                           ;Config register CONFIG6H @ 0x30000B
   931                           ;	unspecified, using default values
   932                           ;	Configuration Register Write Protection bit
   933                           ;	WRTC = 0x1, unprogrammed default
   934                           ;	Boot Block Write Protection bit
   935                           ;	WRTB = 0x1, unprogrammed default
   936                           ;	Data EEPROM Write Protection bit
   937                           ;	WRTD = 0x1, unprogrammed default
   938   30000B                     	org	3145739
   939   30000B  E0                 	db	224
   940                           
   941                           ;Config register CONFIG7L @ 0x30000C
   942                           ;	unspecified, using default values
   943                           ;	Table Read Protection bit
   944                           ;	EBTR0 = 0x1, unprogrammed default
   945                           ;	Table Read Protection bit
   946                           ;	EBTR1 = 0x1, unprogrammed default
   947                           ;	Table Read Protection bit
   948                           ;	EBTR2 = 0x1, unprogrammed default
   949                           ;	Table Read Protection bit
   950                           ;	EBTR3 = 0x1, unprogrammed default
   951   30000C                     	org	3145740
   952   30000C  0F                 	db	15
   953                           
   954                           ;Config register CONFIG7H @ 0x30000D
   955                           ;	unspecified, using default values
   956                           ;	Boot Block Table Read Protection bit
   957                           ;	EBTRB = 0x1, unprogrammed default
   958   30000D                     	org	3145741
   959   30000D  40                 	db	64
   960                           tosu	equ	0xFFF
   961                           tosh	equ	0xFFE
   962                           tosl	equ	0xFFD
   963                           stkptr	equ	0xFFC
   964                           pclatu	equ	0xFFB
   965                           pclath	equ	0xFFA
   966                           pcl	equ	0xFF9
   967                           tblptru	equ	0xFF8
   968                           tblptrh	equ	0xFF7
   969                           tblptrl	equ	0xFF6
   970                           tablat	equ	0xFF5
   971                           prodh	equ	0xFF4
   972                           prodl	equ	0xFF3
   973                           indf0	equ	0xFEF
   974                           postinc0	equ	0xFEE
   975                           postdec0	equ	0xFED
   976                           preinc0	equ	0xFEC
   977                           plusw0	equ	0xFEB
   978                           fsr0h	equ	0xFEA
   979                           fsr0l	equ	0xFE9
   980                           wreg	equ	0xFE8
   981                           indf1	equ	0xFE7
   982                           postinc1	equ	0xFE6
   983                           postdec1	equ	0xFE5
   984                           preinc1	equ	0xFE4
   985                           plusw1	equ	0xFE3
   986                           fsr1h	equ	0xFE2
   987                           fsr1l	equ	0xFE1
   988                           bsr	equ	0xFE0
   989                           indf2	equ	0xFDF
   990                           postinc2	equ	0xFDE
   991                           postdec2	equ	0xFDD
   992                           preinc2	equ	0xFDC
   993                           plusw2	equ	0xFDB
   994                           fsr2h	equ	0xFDA
   995                           fsr2l	equ	0xFD9
   996                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     18      20
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_setServoPosition

Critical Paths under _H_ISR in COMRAM

    _H_ISR->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (1) _setServoPosition                                     4     2      2      45
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _H_ISR                                                6     6      0     370
                                              8 COMRAM     6     6      0
                            ___awdiv
                 i2_setServoPosition
 ---------------------------------------------------------------------------------
 (3) i2_setServoPosition                                   4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setServoPosition

 _H_ISR (ROOT)
   ___awdiv
   i2_setServoPosition

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     18      20     15.9%
BITBIGSFRh          66      0       0      0.0%
BITBIGSFRlh         40      0       0      0.0%
BITBIGSFRlll        11      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      20      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jan 01 22:35:09 2025

                          _a 0013                           l51 072C                           l52 072C  
                         l46 07C6                 ___awdiv@sign 0006                          l900 0714  
                        l822 079A                          l910 071E                          l902 0716  
                        l912 0720                          l904 0718                          l906 071A  
                        l908 071C                          l890 06EA                          l882 06C4  
                        l892 06EC                          l884 06C6                          l894 0702  
                        l886 06DE                          l896 0704                          l888 06E0  
                        l898 0712                          _PR2 0FCB                          wreg 0FE8  
                       _LATC 0F8B                         i2l43 078E                         i2l46 07F4  
                       _main 06C4                         btemp 0015                         prodh 0FF4  
                       prodl 0FF3                         start 000E                 ___param_bank 0000  
                      ?_main 0001              __end_of___awdiv 06C4              ___awdiv@divisor 0003  
                      _T2CON 0FCA                        i2l288 06C2                        i2l830 061A  
                      i2l840 0640                        i2l832 061E                        i2l824 0602  
                      i2l850 0676                        i2l842 0652                        i2l834 062C  
                      i2l826 0604                        i2l852 068C                        i2l844 065A  
                      i2l860 06A2                        i2l836 0634                        i2l828 0612  
                      i2l862 06B2                        i2l854 0694                        i2l846 0662  
                      i2l838 0638                        i2l870 073E                        i2l864 06BA  
                      i2l856 0696                        i2l848 0670                        i2l880 078C  
                      i2l872 0744                        i2l858 069C                        i2l874 0776  
                      i2l868 07C8                        i2l876 0782              ___awdiv@counter 0005  
                      i2l878 0784                        _H_ISR 0008                        ttemp5 0016  
                      ttemp6 0019                        ttemp7 001D             _setServoPosition 079A  
                      status 0FD8                        wtemp8 0016  i2setServoPosition@dutyCycle 0001  
            __initialization 07F6                 __end_of_main 0734                       ??_main 0013  
              __activetblptr 0000                       ?_H_ISR 0001                       _ADRESH 0FC4  
                     _CCPR1L 0FBE             ___awdiv@dividend 0001   __end_ofi2_setServoPosition 07F6  
                     i2u7_40 0612                       i2u7_41 060E                       i2u8_40 062C  
                     i2u8_41 0628                       i2u9_40 0652                       i2u9_41 064E  
                  ??___awdiv 0005             ___awdiv@quotient 0007                       isa$std 0001  
               __mediumconst 0000                   __accesstop 0080      __end_of__initialization 07FA  
              ___rparam_used 0001                __end_of_H_ISR 079A               __pcstackCOMRAM 0001  
                    ??_H_ISR 0009     __end_of_setServoPosition 07C8                      i2u10_40 0670  
                    i2u10_41 066C                      i2u11_40 068C                      i2u11_41 0688  
                    i2u12_40 06B2                      i2u12_41 06AE                      i2u13_47 0786  
                    __Hparam 0000                      __Lparam 0000                      ___awdiv 0602  
               __psmallconst 0600                      __pcinit 07F6                      __ramtop 0600  
                    __ptext0 06C4                      __ptext1 079A                      __ptext3 07C8  
                    __ptext4 0602                    _T2CONbits 0FCA               __pintcode_body 0734  
       end_of_initialization 07FA                      int_func 0734           i2_setServoPosition 07C8  
        ?i2_setServoPosition 0001                    _TRISAbits 0F92                    _TRISCbits 0F94  
       ??i2_setServoPosition 0003                  _CCP1CONbits 0FBD          start_initialization 07F6  
          ?_setServoPosition 000F                  __pbssCOMRAM 0013           ??_setServoPosition 0011  
  setServoPosition@dutyCycle 000F                    __pintcode 0008                     ?___awdiv 0001  
                 H_ISR@value 000D                  __smallconst 0600                     _PIE1bits 0F9D  
                   _PIR1bits 0F9E                   _ADCON0bits 0FC2                   _ADCON1bits 0FC1  
                 _ADCON2bits 0FC0                     __Hrparam 0000                     __Lrparam 0000  
                   isa$xinst 0000                     int$flags 0015                   _INTCONbits 0FF2  
                   intlevel2 0000                   _OSCCONbits 0FD3  
