

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Dec 19 12:03:28 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 25/07/2024 GMT
    33                           ; 
    34                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000FE0                     bsr             equ	4064
    67   000FE9                     fsr0            equ	4073
    68   000FEA                     fsr0h           equ	4074
    69   000FE9                     fsr0l           equ	4073
    70   000FE1                     fsr1            equ	4065
    71   000FE2                     fsr1h           equ	4066
    72   000FE1                     fsr1l           equ	4065
    73   000FD9                     fsr2            equ	4057
    74   000FDA                     fsr2h           equ	4058
    75   000FD9                     fsr2l           equ	4057
    76   000FEF                     indf0           equ	4079
    77   000FE7                     indf1           equ	4071
    78   000FDF                     indf2           equ	4063
    79   000FF2                     intcon          equ	4082
    80   000000                     nvmcon          equ	0
    81   000FF9                     pcl             equ	4089
    82   000FFA                     pclath          equ	4090
    83   000FFB                     pclatu          equ	4091
    84   000FEB                     plusw0          equ	4075
    85   000FE3                     plusw1          equ	4067
    86   000FDB                     plusw2          equ	4059
    87   000FED                     postdec0        equ	4077
    88   000FE5                     postdec1        equ	4069
    89   000FDD                     postdec2        equ	4061
    90   000FEE                     postinc0        equ	4078
    91   000FE6                     postinc1        equ	4070
    92   000FDE                     postinc2        equ	4062
    93   000FEC                     preinc0         equ	4076
    94   000FE4                     preinc1         equ	4068
    95   000FDC                     preinc2         equ	4060
    96   000FF3                     prod            equ	4083
    97   000FF4                     prodh           equ	4084
    98   000FF3                     prodl           equ	4083
    99   000FD8                     status          equ	4056
   100   000FF5                     tablat          equ	4085
   101   000FF6                     tblptr          equ	4086
   102   000FF7                     tblptrh         equ	4087
   103   000FF6                     tblptrl         equ	4086
   104   000FF8                     tblptru         equ	4088
   105   000FFD                     tosl            equ	4093
   106   000FE8                     wreg            equ	4072
   107   000F80                     PORTA           equ	3968	;# 
   108   000F81                     PORTB           equ	3969	;# 
   109   000F82                     PORTC           equ	3970	;# 
   110   000F83                     PORTD           equ	3971	;# 
   111   000F84                     PORTE           equ	3972	;# 
   112   000F89                     LATA            equ	3977	;# 
   113   000F8A                     LATB            equ	3978	;# 
   114   000F8B                     LATC            equ	3979	;# 
   115   000F8C                     LATD            equ	3980	;# 
   116   000F8D                     LATE            equ	3981	;# 
   117   000F92                     TRISA           equ	3986	;# 
   118   000F92                     DDRA            equ	3986	;# 
   119   000F93                     TRISB           equ	3987	;# 
   120   000F93                     DDRB            equ	3987	;# 
   121   000F94                     TRISC           equ	3988	;# 
   122   000F94                     DDRC            equ	3988	;# 
   123   000F95                     TRISD           equ	3989	;# 
   124   000F95                     DDRD            equ	3989	;# 
   125   000F96                     TRISE           equ	3990	;# 
   126   000F96                     DDRE            equ	3990	;# 
   127   000F9B                     OSCTUNE         equ	3995	;# 
   128   000F9D                     PIE1            equ	3997	;# 
   129   000F9E                     PIR1            equ	3998	;# 
   130   000F9F                     IPR1            equ	3999	;# 
   131   000FA0                     PIE2            equ	4000	;# 
   132   000FA1                     PIR2            equ	4001	;# 
   133   000FA2                     IPR2            equ	4002	;# 
   134   000FA6                     EECON1          equ	4006	;# 
   135   000FA7                     EECON2          equ	4007	;# 
   136   000FA8                     EEDATA          equ	4008	;# 
   137   000FA9                     EEADR           equ	4009	;# 
   138   000FAB                     RCSTA           equ	4011	;# 
   139   000FAB                     RCSTA1          equ	4011	;# 
   140   000FAC                     TXSTA           equ	4012	;# 
   141   000FAC                     TXSTA1          equ	4012	;# 
   142   000FAD                     TXREG           equ	4013	;# 
   143   000FAD                     TXREG1          equ	4013	;# 
   144   000FAE                     RCREG           equ	4014	;# 
   145   000FAE                     RCREG1          equ	4014	;# 
   146   000FAF                     SPBRG           equ	4015	;# 
   147   000FAF                     SPBRG1          equ	4015	;# 
   148   000FB0                     SPBRGH          equ	4016	;# 
   149   000FB1                     T3CON           equ	4017	;# 
   150   000FB2                     TMR3            equ	4018	;# 
   151   000FB2                     TMR3L           equ	4018	;# 
   152   000FB3                     TMR3H           equ	4019	;# 
   153   000FB4                     CMCON           equ	4020	;# 
   154   000FB5                     CVRCON          equ	4021	;# 
   155   000FB6                     ECCP1AS         equ	4022	;# 
   156   000FB6                     ECCPAS          equ	4022	;# 
   157   000FB7                     PWM1CON         equ	4023	;# 
   158   000FB7                     ECCP1DEL        equ	4023	;# 
   159   000FB8                     BAUDCON         equ	4024	;# 
   160   000FB8                     BAUDCTL         equ	4024	;# 
   161   000FBA                     CCP2CON         equ	4026	;# 
   162   000FBB                     CCPR2           equ	4027	;# 
   163   000FBB                     CCPR2L          equ	4027	;# 
   164   000FBC                     CCPR2H          equ	4028	;# 
   165   000FBD                     CCP1CON         equ	4029	;# 
   166   000FBE                     CCPR1           equ	4030	;# 
   167   000FBE                     CCPR1L          equ	4030	;# 
   168   000FBF                     CCPR1H          equ	4031	;# 
   169   000FC0                     ADCON2          equ	4032	;# 
   170   000FC1                     ADCON1          equ	4033	;# 
   171   000FC2                     ADCON0          equ	4034	;# 
   172   000FC3                     ADRES           equ	4035	;# 
   173   000FC3                     ADRESL          equ	4035	;# 
   174   000FC4                     ADRESH          equ	4036	;# 
   175   000FC5                     SSPCON2         equ	4037	;# 
   176   000FC6                     SSPCON1         equ	4038	;# 
   177   000FC7                     SSPSTAT         equ	4039	;# 
   178   000FC8                     SSPADD          equ	4040	;# 
   179   000FC9                     SSPBUF          equ	4041	;# 
   180   000FCA                     T2CON           equ	4042	;# 
   181   000FCB                     PR2             equ	4043	;# 
   182   000FCB                     MEMCON          equ	4043	;# 
   183   000FCC                     TMR2            equ	4044	;# 
   184   000FCD                     T1CON           equ	4045	;# 
   185   000FCE                     TMR1            equ	4046	;# 
   186   000FCE                     TMR1L           equ	4046	;# 
   187   000FCF                     TMR1H           equ	4047	;# 
   188   000FD0                     RCON            equ	4048	;# 
   189   000FD1                     WDTCON          equ	4049	;# 
   190   000FD2                     HLVDCON         equ	4050	;# 
   191   000FD2                     LVDCON          equ	4050	;# 
   192   000FD3                     OSCCON          equ	4051	;# 
   193   000FD5                     T0CON           equ	4053	;# 
   194   000FD6                     TMR0            equ	4054	;# 
   195   000FD6                     TMR0L           equ	4054	;# 
   196   000FD7                     TMR0H           equ	4055	;# 
   197   000FD8                     STATUS          equ	4056	;# 
   198   000FD9                     FSR2            equ	4057	;# 
   199   000FD9                     FSR2L           equ	4057	;# 
   200   000FDA                     FSR2H           equ	4058	;# 
   201   000FDB                     PLUSW2          equ	4059	;# 
   202   000FDC                     PREINC2         equ	4060	;# 
   203   000FDD                     POSTDEC2        equ	4061	;# 
   204   000FDE                     POSTINC2        equ	4062	;# 
   205   000FDF                     INDF2           equ	4063	;# 
   206   000FE0                     BSR             equ	4064	;# 
   207   000FE1                     FSR1            equ	4065	;# 
   208   000FE1                     FSR1L           equ	4065	;# 
   209   000FE2                     FSR1H           equ	4066	;# 
   210   000FE3                     PLUSW1          equ	4067	;# 
   211   000FE4                     PREINC1         equ	4068	;# 
   212   000FE5                     POSTDEC1        equ	4069	;# 
   213   000FE6                     POSTINC1        equ	4070	;# 
   214   000FE7                     INDF1           equ	4071	;# 
   215   000FE8                     WREG            equ	4072	;# 
   216   000FE9                     FSR0            equ	4073	;# 
   217   000FE9                     FSR0L           equ	4073	;# 
   218   000FEA                     FSR0H           equ	4074	;# 
   219   000FEB                     PLUSW0          equ	4075	;# 
   220   000FEC                     PREINC0         equ	4076	;# 
   221   000FED                     POSTDEC0        equ	4077	;# 
   222   000FEE                     POSTINC0        equ	4078	;# 
   223   000FEF                     INDF0           equ	4079	;# 
   224   000FF0                     INTCON3         equ	4080	;# 
   225   000FF1                     INTCON2         equ	4081	;# 
   226   000FF2                     INTCON          equ	4082	;# 
   227   000FF3                     PROD            equ	4083	;# 
   228   000FF3                     PRODL           equ	4083	;# 
   229   000FF4                     PRODH           equ	4084	;# 
   230   000FF5                     TABLAT          equ	4085	;# 
   231   000FF6                     TBLPTR          equ	4086	;# 
   232   000FF6                     TBLPTRL         equ	4086	;# 
   233   000FF7                     TBLPTRH         equ	4087	;# 
   234   000FF8                     TBLPTRU         equ	4088	;# 
   235   000FF9                     PCLAT           equ	4089	;# 
   236   000FF9                     PC              equ	4089	;# 
   237   000FF9                     PCL             equ	4089	;# 
   238   000FFA                     PCLATH          equ	4090	;# 
   239   000FFB                     PCLATU          equ	4091	;# 
   240   000FFC                     STKPTR          equ	4092	;# 
   241   000FFD                     TOS             equ	4093	;# 
   242   000FFD                     TOSL            equ	4093	;# 
   243   000FFE                     TOSH            equ	4094	;# 
   244   000FFF                     TOSU            equ	4095	;# 
   245   000F80                     PORTA           equ	3968	;# 
   246   000F81                     PORTB           equ	3969	;# 
   247   000F82                     PORTC           equ	3970	;# 
   248   000F83                     PORTD           equ	3971	;# 
   249   000F84                     PORTE           equ	3972	;# 
   250   000F89                     LATA            equ	3977	;# 
   251   000F8A                     LATB            equ	3978	;# 
   252   000F8B                     LATC            equ	3979	;# 
   253   000F8C                     LATD            equ	3980	;# 
   254   000F8D                     LATE            equ	3981	;# 
   255   000F92                     TRISA           equ	3986	;# 
   256   000F92                     DDRA            equ	3986	;# 
   257   000F93                     TRISB           equ	3987	;# 
   258   000F93                     DDRB            equ	3987	;# 
   259   000F94                     TRISC           equ	3988	;# 
   260   000F94                     DDRC            equ	3988	;# 
   261   000F95                     TRISD           equ	3989	;# 
   262   000F95                     DDRD            equ	3989	;# 
   263   000F96                     TRISE           equ	3990	;# 
   264   000F96                     DDRE            equ	3990	;# 
   265   000F9B                     OSCTUNE         equ	3995	;# 
   266   000F9D                     PIE1            equ	3997	;# 
   267   000F9E                     PIR1            equ	3998	;# 
   268   000F9F                     IPR1            equ	3999	;# 
   269   000FA0                     PIE2            equ	4000	;# 
   270   000FA1                     PIR2            equ	4001	;# 
   271   000FA2                     IPR2            equ	4002	;# 
   272   000FA6                     EECON1          equ	4006	;# 
   273   000FA7                     EECON2          equ	4007	;# 
   274   000FA8                     EEDATA          equ	4008	;# 
   275   000FA9                     EEADR           equ	4009	;# 
   276   000FAB                     RCSTA           equ	4011	;# 
   277   000FAB                     RCSTA1          equ	4011	;# 
   278   000FAC                     TXSTA           equ	4012	;# 
   279   000FAC                     TXSTA1          equ	4012	;# 
   280   000FAD                     TXREG           equ	4013	;# 
   281   000FAD                     TXREG1          equ	4013	;# 
   282   000FAE                     RCREG           equ	4014	;# 
   283   000FAE                     RCREG1          equ	4014	;# 
   284   000FAF                     SPBRG           equ	4015	;# 
   285   000FAF                     SPBRG1          equ	4015	;# 
   286   000FB0                     SPBRGH          equ	4016	;# 
   287   000FB1                     T3CON           equ	4017	;# 
   288   000FB2                     TMR3            equ	4018	;# 
   289   000FB2                     TMR3L           equ	4018	;# 
   290   000FB3                     TMR3H           equ	4019	;# 
   291   000FB4                     CMCON           equ	4020	;# 
   292   000FB5                     CVRCON          equ	4021	;# 
   293   000FB6                     ECCP1AS         equ	4022	;# 
   294   000FB6                     ECCPAS          equ	4022	;# 
   295   000FB7                     PWM1CON         equ	4023	;# 
   296   000FB7                     ECCP1DEL        equ	4023	;# 
   297   000FB8                     BAUDCON         equ	4024	;# 
   298   000FB8                     BAUDCTL         equ	4024	;# 
   299   000FBA                     CCP2CON         equ	4026	;# 
   300   000FBB                     CCPR2           equ	4027	;# 
   301   000FBB                     CCPR2L          equ	4027	;# 
   302   000FBC                     CCPR2H          equ	4028	;# 
   303   000FBD                     CCP1CON         equ	4029	;# 
   304   000FBE                     CCPR1           equ	4030	;# 
   305   000FBE                     CCPR1L          equ	4030	;# 
   306   000FBF                     CCPR1H          equ	4031	;# 
   307   000FC0                     ADCON2          equ	4032	;# 
   308   000FC1                     ADCON1          equ	4033	;# 
   309   000FC2                     ADCON0          equ	4034	;# 
   310   000FC3                     ADRES           equ	4035	;# 
   311   000FC3                     ADRESL          equ	4035	;# 
   312   000FC4                     ADRESH          equ	4036	;# 
   313   000FC5                     SSPCON2         equ	4037	;# 
   314   000FC6                     SSPCON1         equ	4038	;# 
   315   000FC7                     SSPSTAT         equ	4039	;# 
   316   000FC8                     SSPADD          equ	4040	;# 
   317   000FC9                     SSPBUF          equ	4041	;# 
   318   000FCA                     T2CON           equ	4042	;# 
   319   000FCB                     PR2             equ	4043	;# 
   320   000FCB                     MEMCON          equ	4043	;# 
   321   000FCC                     TMR2            equ	4044	;# 
   322   000FCD                     T1CON           equ	4045	;# 
   323   000FCE                     TMR1            equ	4046	;# 
   324   000FCE                     TMR1L           equ	4046	;# 
   325   000FCF                     TMR1H           equ	4047	;# 
   326   000FD0                     RCON            equ	4048	;# 
   327   000FD1                     WDTCON          equ	4049	;# 
   328   000FD2                     HLVDCON         equ	4050	;# 
   329   000FD2                     LVDCON          equ	4050	;# 
   330   000FD3                     OSCCON          equ	4051	;# 
   331   000FD5                     T0CON           equ	4053	;# 
   332   000FD6                     TMR0            equ	4054	;# 
   333   000FD6                     TMR0L           equ	4054	;# 
   334   000FD7                     TMR0H           equ	4055	;# 
   335   000FD8                     STATUS          equ	4056	;# 
   336   000FD9                     FSR2            equ	4057	;# 
   337   000FD9                     FSR2L           equ	4057	;# 
   338   000FDA                     FSR2H           equ	4058	;# 
   339   000FDB                     PLUSW2          equ	4059	;# 
   340   000FDC                     PREINC2         equ	4060	;# 
   341   000FDD                     POSTDEC2        equ	4061	;# 
   342   000FDE                     POSTINC2        equ	4062	;# 
   343   000FDF                     INDF2           equ	4063	;# 
   344   000FE0                     BSR             equ	4064	;# 
   345   000FE1                     FSR1            equ	4065	;# 
   346   000FE1                     FSR1L           equ	4065	;# 
   347   000FE2                     FSR1H           equ	4066	;# 
   348   000FE3                     PLUSW1          equ	4067	;# 
   349   000FE4                     PREINC1         equ	4068	;# 
   350   000FE5                     POSTDEC1        equ	4069	;# 
   351   000FE6                     POSTINC1        equ	4070	;# 
   352   000FE7                     INDF1           equ	4071	;# 
   353   000FE8                     WREG            equ	4072	;# 
   354   000FE9                     FSR0            equ	4073	;# 
   355   000FE9                     FSR0L           equ	4073	;# 
   356   000FEA                     FSR0H           equ	4074	;# 
   357   000FEB                     PLUSW0          equ	4075	;# 
   358   000FEC                     PREINC0         equ	4076	;# 
   359   000FED                     POSTDEC0        equ	4077	;# 
   360   000FEE                     POSTINC0        equ	4078	;# 
   361   000FEF                     INDF0           equ	4079	;# 
   362   000FF0                     INTCON3         equ	4080	;# 
   363   000FF1                     INTCON2         equ	4081	;# 
   364   000FF2                     INTCON          equ	4082	;# 
   365   000FF3                     PROD            equ	4083	;# 
   366   000FF3                     PRODL           equ	4083	;# 
   367   000FF4                     PRODH           equ	4084	;# 
   368   000FF5                     TABLAT          equ	4085	;# 
   369   000FF6                     TBLPTR          equ	4086	;# 
   370   000FF6                     TBLPTRL         equ	4086	;# 
   371   000FF7                     TBLPTRH         equ	4087	;# 
   372   000FF8                     TBLPTRU         equ	4088	;# 
   373   000FF9                     PCLAT           equ	4089	;# 
   374   000FF9                     PC              equ	4089	;# 
   375   000FF9                     PCL             equ	4089	;# 
   376   000FFA                     PCLATH          equ	4090	;# 
   377   000FFB                     PCLATU          equ	4091	;# 
   378   000FFC                     STKPTR          equ	4092	;# 
   379   000FFD                     TOS             equ	4093	;# 
   380   000FFD                     TOSL            equ	4093	;# 
   381   000FFE                     TOSH            equ	4094	;# 
   382   000FFF                     TOSU            equ	4095	;# 
   383   000F80                     PORTA           equ	3968	;# 
   384   000F81                     PORTB           equ	3969	;# 
   385   000F82                     PORTC           equ	3970	;# 
   386   000F83                     PORTD           equ	3971	;# 
   387   000F84                     PORTE           equ	3972	;# 
   388   000F89                     LATA            equ	3977	;# 
   389   000F8A                     LATB            equ	3978	;# 
   390   000F8B                     LATC            equ	3979	;# 
   391   000F8C                     LATD            equ	3980	;# 
   392   000F8D                     LATE            equ	3981	;# 
   393   000F92                     TRISA           equ	3986	;# 
   394   000F92                     DDRA            equ	3986	;# 
   395   000F93                     TRISB           equ	3987	;# 
   396   000F93                     DDRB            equ	3987	;# 
   397   000F94                     TRISC           equ	3988	;# 
   398   000F94                     DDRC            equ	3988	;# 
   399   000F95                     TRISD           equ	3989	;# 
   400   000F95                     DDRD            equ	3989	;# 
   401   000F96                     TRISE           equ	3990	;# 
   402   000F96                     DDRE            equ	3990	;# 
   403   000F9B                     OSCTUNE         equ	3995	;# 
   404   000F9D                     PIE1            equ	3997	;# 
   405   000F9E                     PIR1            equ	3998	;# 
   406   000F9F                     IPR1            equ	3999	;# 
   407   000FA0                     PIE2            equ	4000	;# 
   408   000FA1                     PIR2            equ	4001	;# 
   409   000FA2                     IPR2            equ	4002	;# 
   410   000FA6                     EECON1          equ	4006	;# 
   411   000FA7                     EECON2          equ	4007	;# 
   412   000FA8                     EEDATA          equ	4008	;# 
   413   000FA9                     EEADR           equ	4009	;# 
   414   000FAB                     RCSTA           equ	4011	;# 
   415   000FAB                     RCSTA1          equ	4011	;# 
   416   000FAC                     TXSTA           equ	4012	;# 
   417   000FAC                     TXSTA1          equ	4012	;# 
   418   000FAD                     TXREG           equ	4013	;# 
   419   000FAD                     TXREG1          equ	4013	;# 
   420   000FAE                     RCREG           equ	4014	;# 
   421   000FAE                     RCREG1          equ	4014	;# 
   422   000FAF                     SPBRG           equ	4015	;# 
   423   000FAF                     SPBRG1          equ	4015	;# 
   424   000FB0                     SPBRGH          equ	4016	;# 
   425   000FB1                     T3CON           equ	4017	;# 
   426   000FB2                     TMR3            equ	4018	;# 
   427   000FB2                     TMR3L           equ	4018	;# 
   428   000FB3                     TMR3H           equ	4019	;# 
   429   000FB4                     CMCON           equ	4020	;# 
   430   000FB5                     CVRCON          equ	4021	;# 
   431   000FB6                     ECCP1AS         equ	4022	;# 
   432   000FB6                     ECCPAS          equ	4022	;# 
   433   000FB7                     PWM1CON         equ	4023	;# 
   434   000FB7                     ECCP1DEL        equ	4023	;# 
   435   000FB8                     BAUDCON         equ	4024	;# 
   436   000FB8                     BAUDCTL         equ	4024	;# 
   437   000FBA                     CCP2CON         equ	4026	;# 
   438   000FBB                     CCPR2           equ	4027	;# 
   439   000FBB                     CCPR2L          equ	4027	;# 
   440   000FBC                     CCPR2H          equ	4028	;# 
   441   000FBD                     CCP1CON         equ	4029	;# 
   442   000FBE                     CCPR1           equ	4030	;# 
   443   000FBE                     CCPR1L          equ	4030	;# 
   444   000FBF                     CCPR1H          equ	4031	;# 
   445   000FC0                     ADCON2          equ	4032	;# 
   446   000FC1                     ADCON1          equ	4033	;# 
   447   000FC2                     ADCON0          equ	4034	;# 
   448   000FC3                     ADRES           equ	4035	;# 
   449   000FC3                     ADRESL          equ	4035	;# 
   450   000FC4                     ADRESH          equ	4036	;# 
   451   000FC5                     SSPCON2         equ	4037	;# 
   452   000FC6                     SSPCON1         equ	4038	;# 
   453   000FC7                     SSPSTAT         equ	4039	;# 
   454   000FC8                     SSPADD          equ	4040	;# 
   455   000FC9                     SSPBUF          equ	4041	;# 
   456   000FCA                     T2CON           equ	4042	;# 
   457   000FCB                     PR2             equ	4043	;# 
   458   000FCB                     MEMCON          equ	4043	;# 
   459   000FCC                     TMR2            equ	4044	;# 
   460   000FCD                     T1CON           equ	4045	;# 
   461   000FCE                     TMR1            equ	4046	;# 
   462   000FCE                     TMR1L           equ	4046	;# 
   463   000FCF                     TMR1H           equ	4047	;# 
   464   000FD0                     RCON            equ	4048	;# 
   465   000FD1                     WDTCON          equ	4049	;# 
   466   000FD2                     HLVDCON         equ	4050	;# 
   467   000FD2                     LVDCON          equ	4050	;# 
   468   000FD3                     OSCCON          equ	4051	;# 
   469   000FD5                     T0CON           equ	4053	;# 
   470   000FD6                     TMR0            equ	4054	;# 
   471   000FD6                     TMR0L           equ	4054	;# 
   472   000FD7                     TMR0H           equ	4055	;# 
   473   000FD8                     STATUS          equ	4056	;# 
   474   000FD9                     FSR2            equ	4057	;# 
   475   000FD9                     FSR2L           equ	4057	;# 
   476   000FDA                     FSR2H           equ	4058	;# 
   477   000FDB                     PLUSW2          equ	4059	;# 
   478   000FDC                     PREINC2         equ	4060	;# 
   479   000FDD                     POSTDEC2        equ	4061	;# 
   480   000FDE                     POSTINC2        equ	4062	;# 
   481   000FDF                     INDF2           equ	4063	;# 
   482   000FE0                     BSR             equ	4064	;# 
   483   000FE1                     FSR1            equ	4065	;# 
   484   000FE1                     FSR1L           equ	4065	;# 
   485   000FE2                     FSR1H           equ	4066	;# 
   486   000FE3                     PLUSW1          equ	4067	;# 
   487   000FE4                     PREINC1         equ	4068	;# 
   488   000FE5                     POSTDEC1        equ	4069	;# 
   489   000FE6                     POSTINC1        equ	4070	;# 
   490   000FE7                     INDF1           equ	4071	;# 
   491   000FE8                     WREG            equ	4072	;# 
   492   000FE9                     FSR0            equ	4073	;# 
   493   000FE9                     FSR0L           equ	4073	;# 
   494   000FEA                     FSR0H           equ	4074	;# 
   495   000FEB                     PLUSW0          equ	4075	;# 
   496   000FEC                     PREINC0         equ	4076	;# 
   497   000FED                     POSTDEC0        equ	4077	;# 
   498   000FEE                     POSTINC0        equ	4078	;# 
   499   000FEF                     INDF0           equ	4079	;# 
   500   000FF0                     INTCON3         equ	4080	;# 
   501   000FF1                     INTCON2         equ	4081	;# 
   502   000FF2                     INTCON          equ	4082	;# 
   503   000FF3                     PROD            equ	4083	;# 
   504   000FF3                     PRODL           equ	4083	;# 
   505   000FF4                     PRODH           equ	4084	;# 
   506   000FF5                     TABLAT          equ	4085	;# 
   507   000FF6                     TBLPTR          equ	4086	;# 
   508   000FF6                     TBLPTRL         equ	4086	;# 
   509   000FF7                     TBLPTRH         equ	4087	;# 
   510   000FF8                     TBLPTRU         equ	4088	;# 
   511   000FF9                     PCLAT           equ	4089	;# 
   512   000FF9                     PC              equ	4089	;# 
   513   000FF9                     PCL             equ	4089	;# 
   514   000FFA                     PCLATH          equ	4090	;# 
   515   000FFB                     PCLATU          equ	4091	;# 
   516   000FFC                     STKPTR          equ	4092	;# 
   517   000FFD                     TOS             equ	4093	;# 
   518   000FFD                     TOSL            equ	4093	;# 
   519   000FFE                     TOSH            equ	4094	;# 
   520   000FFF                     TOSU            equ	4095	;# 
   521   000F80                     PORTA           equ	3968	;# 
   522   000F81                     PORTB           equ	3969	;# 
   523   000F82                     PORTC           equ	3970	;# 
   524   000F83                     PORTD           equ	3971	;# 
   525   000F84                     PORTE           equ	3972	;# 
   526   000F89                     LATA            equ	3977	;# 
   527   000F8A                     LATB            equ	3978	;# 
   528   000F8B                     LATC            equ	3979	;# 
   529   000F8C                     LATD            equ	3980	;# 
   530   000F8D                     LATE            equ	3981	;# 
   531   000F92                     TRISA           equ	3986	;# 
   532   000F92                     DDRA            equ	3986	;# 
   533   000F93                     TRISB           equ	3987	;# 
   534   000F93                     DDRB            equ	3987	;# 
   535   000F94                     TRISC           equ	3988	;# 
   536   000F94                     DDRC            equ	3988	;# 
   537   000F95                     TRISD           equ	3989	;# 
   538   000F95                     DDRD            equ	3989	;# 
   539   000F96                     TRISE           equ	3990	;# 
   540   000F96                     DDRE            equ	3990	;# 
   541   000F9B                     OSCTUNE         equ	3995	;# 
   542   000F9D                     PIE1            equ	3997	;# 
   543   000F9E                     PIR1            equ	3998	;# 
   544   000F9F                     IPR1            equ	3999	;# 
   545   000FA0                     PIE2            equ	4000	;# 
   546   000FA1                     PIR2            equ	4001	;# 
   547   000FA2                     IPR2            equ	4002	;# 
   548   000FA6                     EECON1          equ	4006	;# 
   549   000FA7                     EECON2          equ	4007	;# 
   550   000FA8                     EEDATA          equ	4008	;# 
   551   000FA9                     EEADR           equ	4009	;# 
   552   000FAB                     RCSTA           equ	4011	;# 
   553   000FAB                     RCSTA1          equ	4011	;# 
   554   000FAC                     TXSTA           equ	4012	;# 
   555   000FAC                     TXSTA1          equ	4012	;# 
   556   000FAD                     TXREG           equ	4013	;# 
   557   000FAD                     TXREG1          equ	4013	;# 
   558   000FAE                     RCREG           equ	4014	;# 
   559   000FAE                     RCREG1          equ	4014	;# 
   560   000FAF                     SPBRG           equ	4015	;# 
   561   000FAF                     SPBRG1          equ	4015	;# 
   562   000FB0                     SPBRGH          equ	4016	;# 
   563   000FB1                     T3CON           equ	4017	;# 
   564   000FB2                     TMR3            equ	4018	;# 
   565   000FB2                     TMR3L           equ	4018	;# 
   566   000FB3                     TMR3H           equ	4019	;# 
   567   000FB4                     CMCON           equ	4020	;# 
   568   000FB5                     CVRCON          equ	4021	;# 
   569   000FB6                     ECCP1AS         equ	4022	;# 
   570   000FB6                     ECCPAS          equ	4022	;# 
   571   000FB7                     PWM1CON         equ	4023	;# 
   572   000FB7                     ECCP1DEL        equ	4023	;# 
   573   000FB8                     BAUDCON         equ	4024	;# 
   574   000FB8                     BAUDCTL         equ	4024	;# 
   575   000FBA                     CCP2CON         equ	4026	;# 
   576   000FBB                     CCPR2           equ	4027	;# 
   577   000FBB                     CCPR2L          equ	4027	;# 
   578   000FBC                     CCPR2H          equ	4028	;# 
   579   000FBD                     CCP1CON         equ	4029	;# 
   580   000FBE                     CCPR1           equ	4030	;# 
   581   000FBE                     CCPR1L          equ	4030	;# 
   582   000FBF                     CCPR1H          equ	4031	;# 
   583   000FC0                     ADCON2          equ	4032	;# 
   584   000FC1                     ADCON1          equ	4033	;# 
   585   000FC2                     ADCON0          equ	4034	;# 
   586   000FC3                     ADRES           equ	4035	;# 
   587   000FC3                     ADRESL          equ	4035	;# 
   588   000FC4                     ADRESH          equ	4036	;# 
   589   000FC5                     SSPCON2         equ	4037	;# 
   590   000FC6                     SSPCON1         equ	4038	;# 
   591   000FC7                     SSPSTAT         equ	4039	;# 
   592   000FC8                     SSPADD          equ	4040	;# 
   593   000FC9                     SSPBUF          equ	4041	;# 
   594   000FCA                     T2CON           equ	4042	;# 
   595   000FCB                     PR2             equ	4043	;# 
   596   000FCB                     MEMCON          equ	4043	;# 
   597   000FCC                     TMR2            equ	4044	;# 
   598   000FCD                     T1CON           equ	4045	;# 
   599   000FCE                     TMR1            equ	4046	;# 
   600   000FCE                     TMR1L           equ	4046	;# 
   601   000FCF                     TMR1H           equ	4047	;# 
   602   000FD0                     RCON            equ	4048	;# 
   603   000FD1                     WDTCON          equ	4049	;# 
   604   000FD2                     HLVDCON         equ	4050	;# 
   605   000FD2                     LVDCON          equ	4050	;# 
   606   000FD3                     OSCCON          equ	4051	;# 
   607   000FD5                     T0CON           equ	4053	;# 
   608   000FD6                     TMR0            equ	4054	;# 
   609   000FD6                     TMR0L           equ	4054	;# 
   610   000FD7                     TMR0H           equ	4055	;# 
   611   000FD8                     STATUS          equ	4056	;# 
   612   000FD9                     FSR2            equ	4057	;# 
   613   000FD9                     FSR2L           equ	4057	;# 
   614   000FDA                     FSR2H           equ	4058	;# 
   615   000FDB                     PLUSW2          equ	4059	;# 
   616   000FDC                     PREINC2         equ	4060	;# 
   617   000FDD                     POSTDEC2        equ	4061	;# 
   618   000FDE                     POSTINC2        equ	4062	;# 
   619   000FDF                     INDF2           equ	4063	;# 
   620   000FE0                     BSR             equ	4064	;# 
   621   000FE1                     FSR1            equ	4065	;# 
   622   000FE1                     FSR1L           equ	4065	;# 
   623   000FE2                     FSR1H           equ	4066	;# 
   624   000FE3                     PLUSW1          equ	4067	;# 
   625   000FE4                     PREINC1         equ	4068	;# 
   626   000FE5                     POSTDEC1        equ	4069	;# 
   627   000FE6                     POSTINC1        equ	4070	;# 
   628   000FE7                     INDF1           equ	4071	;# 
   629   000FE8                     WREG            equ	4072	;# 
   630   000FE9                     FSR0            equ	4073	;# 
   631   000FE9                     FSR0L           equ	4073	;# 
   632   000FEA                     FSR0H           equ	4074	;# 
   633   000FEB                     PLUSW0          equ	4075	;# 
   634   000FEC                     PREINC0         equ	4076	;# 
   635   000FED                     POSTDEC0        equ	4077	;# 
   636   000FEE                     POSTINC0        equ	4078	;# 
   637   000FEF                     INDF0           equ	4079	;# 
   638   000FF0                     INTCON3         equ	4080	;# 
   639   000FF1                     INTCON2         equ	4081	;# 
   640   000FF2                     INTCON          equ	4082	;# 
   641   000FF3                     PROD            equ	4083	;# 
   642   000FF3                     PRODL           equ	4083	;# 
   643   000FF4                     PRODH           equ	4084	;# 
   644   000FF5                     TABLAT          equ	4085	;# 
   645   000FF6                     TBLPTR          equ	4086	;# 
   646   000FF6                     TBLPTRL         equ	4086	;# 
   647   000FF7                     TBLPTRH         equ	4087	;# 
   648   000FF8                     TBLPTRU         equ	4088	;# 
   649   000FF9                     PCLAT           equ	4089	;# 
   650   000FF9                     PC              equ	4089	;# 
   651   000FF9                     PCL             equ	4089	;# 
   652   000FFA                     PCLATH          equ	4090	;# 
   653   000FFB                     PCLATU          equ	4091	;# 
   654   000FFC                     STKPTR          equ	4092	;# 
   655   000FFD                     TOS             equ	4093	;# 
   656   000FFD                     TOSL            equ	4093	;# 
   657   000FFE                     TOSH            equ	4094	;# 
   658   000FFF                     TOSU            equ	4095	;# 
   659   000F80                     PORTA           equ	3968	;# 
   660   000F81                     PORTB           equ	3969	;# 
   661   000F82                     PORTC           equ	3970	;# 
   662   000F83                     PORTD           equ	3971	;# 
   663   000F84                     PORTE           equ	3972	;# 
   664   000F89                     LATA            equ	3977	;# 
   665   000F8A                     LATB            equ	3978	;# 
   666   000F8B                     LATC            equ	3979	;# 
   667   000F8C                     LATD            equ	3980	;# 
   668   000F8D                     LATE            equ	3981	;# 
   669   000F92                     TRISA           equ	3986	;# 
   670   000F92                     DDRA            equ	3986	;# 
   671   000F93                     TRISB           equ	3987	;# 
   672   000F93                     DDRB            equ	3987	;# 
   673   000F94                     TRISC           equ	3988	;# 
   674   000F94                     DDRC            equ	3988	;# 
   675   000F95                     TRISD           equ	3989	;# 
   676   000F95                     DDRD            equ	3989	;# 
   677   000F96                     TRISE           equ	3990	;# 
   678   000F96                     DDRE            equ	3990	;# 
   679   000F9B                     OSCTUNE         equ	3995	;# 
   680   000F9D                     PIE1            equ	3997	;# 
   681   000F9E                     PIR1            equ	3998	;# 
   682   000F9F                     IPR1            equ	3999	;# 
   683   000FA0                     PIE2            equ	4000	;# 
   684   000FA1                     PIR2            equ	4001	;# 
   685   000FA2                     IPR2            equ	4002	;# 
   686   000FA6                     EECON1          equ	4006	;# 
   687   000FA7                     EECON2          equ	4007	;# 
   688   000FA8                     EEDATA          equ	4008	;# 
   689   000FA9                     EEADR           equ	4009	;# 
   690   000FAB                     RCSTA           equ	4011	;# 
   691   000FAB                     RCSTA1          equ	4011	;# 
   692   000FAC                     TXSTA           equ	4012	;# 
   693   000FAC                     TXSTA1          equ	4012	;# 
   694   000FAD                     TXREG           equ	4013	;# 
   695   000FAD                     TXREG1          equ	4013	;# 
   696   000FAE                     RCREG           equ	4014	;# 
   697   000FAE                     RCREG1          equ	4014	;# 
   698   000FAF                     SPBRG           equ	4015	;# 
   699   000FAF                     SPBRG1          equ	4015	;# 
   700   000FB0                     SPBRGH          equ	4016	;# 
   701   000FB1                     T3CON           equ	4017	;# 
   702   000FB2                     TMR3            equ	4018	;# 
   703   000FB2                     TMR3L           equ	4018	;# 
   704   000FB3                     TMR3H           equ	4019	;# 
   705   000FB4                     CMCON           equ	4020	;# 
   706   000FB5                     CVRCON          equ	4021	;# 
   707   000FB6                     ECCP1AS         equ	4022	;# 
   708   000FB6                     ECCPAS          equ	4022	;# 
   709   000FB7                     PWM1CON         equ	4023	;# 
   710   000FB7                     ECCP1DEL        equ	4023	;# 
   711   000FB8                     BAUDCON         equ	4024	;# 
   712   000FB8                     BAUDCTL         equ	4024	;# 
   713   000FBA                     CCP2CON         equ	4026	;# 
   714   000FBB                     CCPR2           equ	4027	;# 
   715   000FBB                     CCPR2L          equ	4027	;# 
   716   000FBC                     CCPR2H          equ	4028	;# 
   717   000FBD                     CCP1CON         equ	4029	;# 
   718   000FBE                     CCPR1           equ	4030	;# 
   719   000FBE                     CCPR1L          equ	4030	;# 
   720   000FBF                     CCPR1H          equ	4031	;# 
   721   000FC0                     ADCON2          equ	4032	;# 
   722   000FC1                     ADCON1          equ	4033	;# 
   723   000FC2                     ADCON0          equ	4034	;# 
   724   000FC3                     ADRES           equ	4035	;# 
   725   000FC3                     ADRESL          equ	4035	;# 
   726   000FC4                     ADRESH          equ	4036	;# 
   727   000FC5                     SSPCON2         equ	4037	;# 
   728   000FC6                     SSPCON1         equ	4038	;# 
   729   000FC7                     SSPSTAT         equ	4039	;# 
   730   000FC8                     SSPADD          equ	4040	;# 
   731   000FC9                     SSPBUF          equ	4041	;# 
   732   000FCA                     T2CON           equ	4042	;# 
   733   000FCB                     PR2             equ	4043	;# 
   734   000FCB                     MEMCON          equ	4043	;# 
   735   000FCC                     TMR2            equ	4044	;# 
   736   000FCD                     T1CON           equ	4045	;# 
   737   000FCE                     TMR1            equ	4046	;# 
   738   000FCE                     TMR1L           equ	4046	;# 
   739   000FCF                     TMR1H           equ	4047	;# 
   740   000FD0                     RCON            equ	4048	;# 
   741   000FD1                     WDTCON          equ	4049	;# 
   742   000FD2                     HLVDCON         equ	4050	;# 
   743   000FD2                     LVDCON          equ	4050	;# 
   744   000FD3                     OSCCON          equ	4051	;# 
   745   000FD5                     T0CON           equ	4053	;# 
   746   000FD6                     TMR0            equ	4054	;# 
   747   000FD6                     TMR0L           equ	4054	;# 
   748   000FD7                     TMR0H           equ	4055	;# 
   749   000FD8                     STATUS          equ	4056	;# 
   750   000FD9                     FSR2            equ	4057	;# 
   751   000FD9                     FSR2L           equ	4057	;# 
   752   000FDA                     FSR2H           equ	4058	;# 
   753   000FDB                     PLUSW2          equ	4059	;# 
   754   000FDC                     PREINC2         equ	4060	;# 
   755   000FDD                     POSTDEC2        equ	4061	;# 
   756   000FDE                     POSTINC2        equ	4062	;# 
   757   000FDF                     INDF2           equ	4063	;# 
   758   000FE0                     BSR             equ	4064	;# 
   759   000FE1                     FSR1            equ	4065	;# 
   760   000FE1                     FSR1L           equ	4065	;# 
   761   000FE2                     FSR1H           equ	4066	;# 
   762   000FE3                     PLUSW1          equ	4067	;# 
   763   000FE4                     PREINC1         equ	4068	;# 
   764   000FE5                     POSTDEC1        equ	4069	;# 
   765   000FE6                     POSTINC1        equ	4070	;# 
   766   000FE7                     INDF1           equ	4071	;# 
   767   000FE8                     WREG            equ	4072	;# 
   768   000FE9                     FSR0            equ	4073	;# 
   769   000FE9                     FSR0L           equ	4073	;# 
   770   000FEA                     FSR0H           equ	4074	;# 
   771   000FEB                     PLUSW0          equ	4075	;# 
   772   000FEC                     PREINC0         equ	4076	;# 
   773   000FED                     POSTDEC0        equ	4077	;# 
   774   000FEE                     POSTINC0        equ	4078	;# 
   775   000FEF                     INDF0           equ	4079	;# 
   776   000FF0                     INTCON3         equ	4080	;# 
   777   000FF1                     INTCON2         equ	4081	;# 
   778   000FF2                     INTCON          equ	4082	;# 
   779   000FF3                     PROD            equ	4083	;# 
   780   000FF3                     PRODL           equ	4083	;# 
   781   000FF4                     PRODH           equ	4084	;# 
   782   000FF5                     TABLAT          equ	4085	;# 
   783   000FF6                     TBLPTR          equ	4086	;# 
   784   000FF6                     TBLPTRL         equ	4086	;# 
   785   000FF7                     TBLPTRH         equ	4087	;# 
   786   000FF8                     TBLPTRU         equ	4088	;# 
   787   000FF9                     PCLAT           equ	4089	;# 
   788   000FF9                     PC              equ	4089	;# 
   789   000FF9                     PCL             equ	4089	;# 
   790   000FFA                     PCLATH          equ	4090	;# 
   791   000FFB                     PCLATU          equ	4091	;# 
   792   000FFC                     STKPTR          equ	4092	;# 
   793   000FFD                     TOS             equ	4093	;# 
   794   000FFD                     TOSL            equ	4093	;# 
   795   000FFE                     TOSH            equ	4094	;# 
   796   000FFF                     TOSU            equ	4095	;# 
   797   000F80                     PORTA           equ	3968	;# 
   798   000F81                     PORTB           equ	3969	;# 
   799   000F82                     PORTC           equ	3970	;# 
   800   000F83                     PORTD           equ	3971	;# 
   801   000F84                     PORTE           equ	3972	;# 
   802   000F89                     LATA            equ	3977	;# 
   803   000F8A                     LATB            equ	3978	;# 
   804   000F8B                     LATC            equ	3979	;# 
   805   000F8C                     LATD            equ	3980	;# 
   806   000F8D                     LATE            equ	3981	;# 
   807   000F92                     TRISA           equ	3986	;# 
   808   000F92                     DDRA            equ	3986	;# 
   809   000F93                     TRISB           equ	3987	;# 
   810   000F93                     DDRB            equ	3987	;# 
   811   000F94                     TRISC           equ	3988	;# 
   812   000F94                     DDRC            equ	3988	;# 
   813   000F95                     TRISD           equ	3989	;# 
   814   000F95                     DDRD            equ	3989	;# 
   815   000F96                     TRISE           equ	3990	;# 
   816   000F96                     DDRE            equ	3990	;# 
   817   000F9B                     OSCTUNE         equ	3995	;# 
   818   000F9D                     PIE1            equ	3997	;# 
   819   000F9E                     PIR1            equ	3998	;# 
   820   000F9F                     IPR1            equ	3999	;# 
   821   000FA0                     PIE2            equ	4000	;# 
   822   000FA1                     PIR2            equ	4001	;# 
   823   000FA2                     IPR2            equ	4002	;# 
   824   000FA6                     EECON1          equ	4006	;# 
   825   000FA7                     EECON2          equ	4007	;# 
   826   000FA8                     EEDATA          equ	4008	;# 
   827   000FA9                     EEADR           equ	4009	;# 
   828   000FAB                     RCSTA           equ	4011	;# 
   829   000FAB                     RCSTA1          equ	4011	;# 
   830   000FAC                     TXSTA           equ	4012	;# 
   831   000FAC                     TXSTA1          equ	4012	;# 
   832   000FAD                     TXREG           equ	4013	;# 
   833   000FAD                     TXREG1          equ	4013	;# 
   834   000FAE                     RCREG           equ	4014	;# 
   835   000FAE                     RCREG1          equ	4014	;# 
   836   000FAF                     SPBRG           equ	4015	;# 
   837   000FAF                     SPBRG1          equ	4015	;# 
   838   000FB0                     SPBRGH          equ	4016	;# 
   839   000FB1                     T3CON           equ	4017	;# 
   840   000FB2                     TMR3            equ	4018	;# 
   841   000FB2                     TMR3L           equ	4018	;# 
   842   000FB3                     TMR3H           equ	4019	;# 
   843   000FB4                     CMCON           equ	4020	;# 
   844   000FB5                     CVRCON          equ	4021	;# 
   845   000FB6                     ECCP1AS         equ	4022	;# 
   846   000FB6                     ECCPAS          equ	4022	;# 
   847   000FB7                     PWM1CON         equ	4023	;# 
   848   000FB7                     ECCP1DEL        equ	4023	;# 
   849   000FB8                     BAUDCON         equ	4024	;# 
   850   000FB8                     BAUDCTL         equ	4024	;# 
   851   000FBA                     CCP2CON         equ	4026	;# 
   852   000FBB                     CCPR2           equ	4027	;# 
   853   000FBB                     CCPR2L          equ	4027	;# 
   854   000FBC                     CCPR2H          equ	4028	;# 
   855   000FBD                     CCP1CON         equ	4029	;# 
   856   000FBE                     CCPR1           equ	4030	;# 
   857   000FBE                     CCPR1L          equ	4030	;# 
   858   000FBF                     CCPR1H          equ	4031	;# 
   859   000FC0                     ADCON2          equ	4032	;# 
   860   000FC1                     ADCON1          equ	4033	;# 
   861   000FC2                     ADCON0          equ	4034	;# 
   862   000FC3                     ADRES           equ	4035	;# 
   863   000FC3                     ADRESL          equ	4035	;# 
   864   000FC4                     ADRESH          equ	4036	;# 
   865   000FC5                     SSPCON2         equ	4037	;# 
   866   000FC6                     SSPCON1         equ	4038	;# 
   867   000FC7                     SSPSTAT         equ	4039	;# 
   868   000FC8                     SSPADD          equ	4040	;# 
   869   000FC9                     SSPBUF          equ	4041	;# 
   870   000FCA                     T2CON           equ	4042	;# 
   871   000FCB                     PR2             equ	4043	;# 
   872   000FCB                     MEMCON          equ	4043	;# 
   873   000FCC                     TMR2            equ	4044	;# 
   874   000FCD                     T1CON           equ	4045	;# 
   875   000FCE                     TMR1            equ	4046	;# 
   876   000FCE                     TMR1L           equ	4046	;# 
   877   000FCF                     TMR1H           equ	4047	;# 
   878   000FD0                     RCON            equ	4048	;# 
   879   000FD1                     WDTCON          equ	4049	;# 
   880   000FD2                     HLVDCON         equ	4050	;# 
   881   000FD2                     LVDCON          equ	4050	;# 
   882   000FD3                     OSCCON          equ	4051	;# 
   883   000FD5                     T0CON           equ	4053	;# 
   884   000FD6                     TMR0            equ	4054	;# 
   885   000FD6                     TMR0L           equ	4054	;# 
   886   000FD7                     TMR0H           equ	4055	;# 
   887   000FD8                     STATUS          equ	4056	;# 
   888   000FD9                     FSR2            equ	4057	;# 
   889   000FD9                     FSR2L           equ	4057	;# 
   890   000FDA                     FSR2H           equ	4058	;# 
   891   000FDB                     PLUSW2          equ	4059	;# 
   892   000FDC                     PREINC2         equ	4060	;# 
   893   000FDD                     POSTDEC2        equ	4061	;# 
   894   000FDE                     POSTINC2        equ	4062	;# 
   895   000FDF                     INDF2           equ	4063	;# 
   896   000FE0                     BSR             equ	4064	;# 
   897   000FE1                     FSR1            equ	4065	;# 
   898   000FE1                     FSR1L           equ	4065	;# 
   899   000FE2                     FSR1H           equ	4066	;# 
   900   000FE3                     PLUSW1          equ	4067	;# 
   901   000FE4                     PREINC1         equ	4068	;# 
   902   000FE5                     POSTDEC1        equ	4069	;# 
   903   000FE6                     POSTINC1        equ	4070	;# 
   904   000FE7                     INDF1           equ	4071	;# 
   905   000FE8                     WREG            equ	4072	;# 
   906   000FE9                     FSR0            equ	4073	;# 
   907   000FE9                     FSR0L           equ	4073	;# 
   908   000FEA                     FSR0H           equ	4074	;# 
   909   000FEB                     PLUSW0          equ	4075	;# 
   910   000FEC                     PREINC0         equ	4076	;# 
   911   000FED                     POSTDEC0        equ	4077	;# 
   912   000FEE                     POSTINC0        equ	4078	;# 
   913   000FEF                     INDF0           equ	4079	;# 
   914   000FF0                     INTCON3         equ	4080	;# 
   915   000FF1                     INTCON2         equ	4081	;# 
   916   000FF2                     INTCON          equ	4082	;# 
   917   000FF3                     PROD            equ	4083	;# 
   918   000FF3                     PRODL           equ	4083	;# 
   919   000FF4                     PRODH           equ	4084	;# 
   920   000FF5                     TABLAT          equ	4085	;# 
   921   000FF6                     TBLPTR          equ	4086	;# 
   922   000FF6                     TBLPTRL         equ	4086	;# 
   923   000FF7                     TBLPTRH         equ	4087	;# 
   924   000FF8                     TBLPTRU         equ	4088	;# 
   925   000FF9                     PCLAT           equ	4089	;# 
   926   000FF9                     PC              equ	4089	;# 
   927   000FF9                     PCL             equ	4089	;# 
   928   000FFA                     PCLATH          equ	4090	;# 
   929   000FFB                     PCLATU          equ	4091	;# 
   930   000FFC                     STKPTR          equ	4092	;# 
   931   000FFD                     TOS             equ	4093	;# 
   932   000FFD                     TOSL            equ	4093	;# 
   933   000FFE                     TOSH            equ	4094	;# 
   934   000FFF                     TOSU            equ	4095	;# 
   935   007D5C                     _CREN           set	32092
   936   007CF5                     _RCIF           set	31989
   937   007E9C                     _IRCF0          set	32412
   938   007E9D                     _IRCF1          set	32413
   939   007E9E                     _IRCF2          set	32414
   940   007E07                     _ADFM           set	32263
   941   000F93                     _TRISBbits      set	3987
   942   000F94                     _TRISCbits      set	3988
   943   000F92                     _TRISA          set	3986
   944   000F89                     _LATA           set	3977
   945   000FAE                     _RCREG          set	4014
   946   000FAD                     _TXREG          set	4013
   947   000F9D                     _PIE1bits       set	3997
   948   000FAB                     _RCSTAbits      set	4011
   949   000FAF                     _SPBRG          set	4015
   950   000FB8                     _BAUDCONbits    set	4024
   951   000FAC                     _TXSTAbits      set	4012
   952   000FD0                     _RCONbits       set	4048
   953   000F9F                     _IPR1bits       set	3999
   954   000F9E                     _PIR1bits       set	3998
   955   000FBD                     _CCP1CON        set	4029
   956   000FC2                     _ADCON0bits     set	4034
   957   000FC3                     _ADRESL         set	4035
   958   000FC4                     _ADRESH         set	4036
   959   000FC0                     _ADCON2bits     set	4032
   960   000FC1                     _ADCON1         set	4033
   961   000FF2                     _INTCONbits     set	4082
   962                           
   963                           ; #config settings
   964                           
   965                           	psect	cinit
   966   0008D8                     __pcinit:
   967                           	callstack 0
   968   0008D8                     start_initialization:
   969                           	callstack 0
   970   0008D8                     __initialization:
   971                           	callstack 0
   972                           
   973                           ; Clear objects allocated to COMRAM (46 bytes)
   974   0008D8  EE00  F001         	lfsr	0,__pbssCOMRAM
   975   0008DC  0E2E               	movlw	46
   976   0008DE                     clear_0:
   977   0008DE  6AEE               	clrf	postinc0,c
   978   0008E0  06E8               	decf	wreg,f,c
   979   0008E2  E1FD               	bnz	clear_0
   980   0008E4                     end_of_initialization:
   981                           	callstack 0
   982   0008E4                     __end_of__initialization:
   983                           	callstack 0
   984   0008E4  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   985   0008E6  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   986   0008E8  0100               	movlb	0
   987   0008EA  EF82  F003         	goto	_main	;jump to C main() function
   988                           
   989                           	psect	bssCOMRAM
   990   000001                     __pbssCOMRAM:
   991                           	callstack 0
   992   000001                     _lenStr:
   993                           	callstack 0
   994   000001                     	ds	2
   995   000003                     _cont:
   996                           	callstack 0
   997   000003                     	ds	2
   998   000005                     _interrupted:
   999                           	callstack 0
  1000   000005                     	ds	2
  1001   000007                     _mystring:
  1002                           	callstack 0
  1003   000007                     	ds	20
  1004   00001B                     _str:
  1005                           	callstack 0
  1006   00001B                     	ds	20
  1007                           
  1008                           	psect	cstackCOMRAM
  1009   00002F                     __pcstackCOMRAM:
  1010                           	callstack 0
  1011   00002F                     UART_Write@data:
  1012                           	callstack 0
  1013   00002F                     
  1014                           ; 1 bytes @ 0x0
  1015   00002F                     	ds	1
  1016   000030                     MyusartRead@data:
  1017                           	callstack 0
  1018   000030                     
  1019                           ; 1 bytes @ 0x1
  1020   000030                     	ds	1
  1021   000031                     ??_Lo_ISR:
  1022                           
  1023                           ; 1 bytes @ 0x2
  1024   000031                     	ds	5
  1025   000036                     ClearBuffer@i:
  1026                           	callstack 0
  1027   000036                     
  1028                           ; 1 bytes @ 0x7
  1029   000036                     	ds	2
  1030   000038                     strcpy@dest:
  1031                           	callstack 0
  1032   000038                     
  1033                           ; 1 bytes @ 0x9
  1034   000038                     	ds	1
  1035   000039                     strcpy@src:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0xA
  1039   000039                     	ds	1
  1040   00003A                     strcpy@d:
  1041                           	callstack 0
  1042   00003A                     
  1043                           ; 1 bytes @ 0xB
  1044   00003A                     	ds	1
  1045   00003B                     Mode1@cur:
  1046                           	callstack 0
  1047   00003B                     ??_Mode2:
  1048                           
  1049                           ; 1 bytes @ 0xC
  1050   00003B                     	ds	2
  1051   00003D                     Mode2@limit:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0xE
  1055   00003D                     	ds	2
  1056   00003F                     Mode2@i:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x10
  1060   00003F                     	ds	2
  1061   000041                     Mode2@cur:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x12
  1065   000041                     	ds	2
  1066   000043                     
  1067                           ; 1 bytes @ 0x14
  1068 ;;
  1069 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1070 ;;
  1071 ;; *************** function _main *****************
  1072 ;; Defined at:
  1073 ;;		line 48 in file "main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1087 ;;      Params:         0       0       0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0
  1090 ;;      Totals:         0       0       0       0       0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels required when called: 6
  1093 ;; This function calls:
  1094 ;;		_ClearBuffer
  1095 ;;		_GetString
  1096 ;;		_Mode1
  1097 ;;		_Mode2
  1098 ;;		_SYSTEM_Initialize
  1099 ;;		_strcpy
  1100 ;; This function is called by:
  1101 ;;		Startup code after reset
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text0
  1106   000704                     __ptext0:
  1107                           	callstack 0
  1108   000704                     _main:
  1109                           	callstack 25
  1110   000704                     
  1111                           ;main.c: 51:     SYSTEM_Initialize() ;
  1112   000704  EC47  F004         	call	_SYSTEM_Initialize	;wreg free
  1113   000708                     l1134:
  1114                           
  1115                           ;main.c: 54:         strcpy(str, GetString());
  1116   000708  0E1B               	movlw	low _str
  1117   00070A  6E38               	movwf	strcpy@dest^0,c
  1118   00070C  ECA2  F004         	call	_GetString	;wreg free
  1119   000710  6E39               	movwf	strcpy@src^0,c
  1120   000712  EC32  F004         	call	_strcpy	;wreg free
  1121   000716                     
  1122                           ;main.c: 55:         if(str[0]=='m' && str[1]=='1'){
  1123   000716  0E6D               	movlw	109
  1124   000718  181B               	xorwf	_str^0,w,c
  1125   00071A  A4D8               	btfss	status,2,c
  1126   00071C  EF92  F003         	goto	u291
  1127   000720  EF94  F003         	goto	u290
  1128   000724                     u291:
  1129   000724  EFA3  F003         	goto	l1144
  1130   000728                     u290:
  1131   000728  0E31               	movlw	49
  1132   00072A  181C               	xorwf	(_str+1)^0,w,c
  1133   00072C  A4D8               	btfss	status,2,c
  1134   00072E  EF9B  F003         	goto	u301
  1135   000732  EF9D  F003         	goto	u300
  1136   000736                     u301:
  1137   000736  EFA3  F003         	goto	l1144
  1138   00073A                     u300:
  1139   00073A                     
  1140                           ;main.c: 56:             Mode1();
  1141   00073A  ECBB  F003         	call	_Mode1	;wreg free
  1142   00073E                     l1142:
  1143                           
  1144                           ;main.c: 57:             ClearBuffer();
  1145   00073E  EC14  F004         	call	_ClearBuffer	;wreg free
  1146                           
  1147                           ;main.c: 58:         }
  1148   000742  EF84  F003         	goto	l1134
  1149   000746                     l1144:
  1150   000746  0E6D               	movlw	109
  1151   000748  181B               	xorwf	_str^0,w,c
  1152   00074A  A4D8               	btfss	status,2,c
  1153   00074C  EFAA  F003         	goto	u311
  1154   000750  EFAC  F003         	goto	u310
  1155   000754                     u311:
  1156   000754  EF84  F003         	goto	l1134
  1157   000758                     u310:
  1158   000758  0E32               	movlw	50
  1159   00075A  181C               	xorwf	(_str+1)^0,w,c
  1160   00075C  A4D8               	btfss	status,2,c
  1161   00075E  EFB3  F003         	goto	u321
  1162   000762  EFB5  F003         	goto	u320
  1163   000766                     u321:
  1164   000766  EF84  F003         	goto	l1134
  1165   00076A                     u320:
  1166   00076A                     
  1167                           ;main.c: 60:             Mode2();
  1168   00076A  EC01  F003         	call	_Mode2	;wreg free
  1169   00076E  EF9F  F003         	goto	l1142
  1170   000772  EF36  F000         	goto	start
  1171   000776                     __end_of_main:
  1172                           	callstack 0
  1173                           
  1174 ;; *************** function _SYSTEM_Initialize *****************
  1175 ;; Defined at:
  1176 ;;		line 60 in file "setting_hardaware/setting.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1190 ;;      Params:         0       0       0       0       0       0       0
  1191 ;;      Locals:         0       0       0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0
  1193 ;;      Totals:         0       0       0       0       0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 5
  1197 ;; This function calls:
  1198 ;;		_ADC_Initialize
  1199 ;;		_CCP1_Initialize
  1200 ;;		_INTERRUPT_Initialize
  1201 ;;		_OSCILLATOR_Initialize
  1202 ;;		_UART_Initialize
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text1
  1209   00088E                     __ptext1:
  1210                           	callstack 0
  1211   00088E                     _SYSTEM_Initialize:
  1212                           	callstack 25
  1213   00088E                     
  1214                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1215   00088E  EC9A  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1216                           
  1217                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1218   000892  EC9E  F004         	call	_INTERRUPT_Initialize	;wreg free
  1219   000896                     
  1220                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1221   000896  EC5B  F004         	call	_UART_Initialize	;wreg free
  1222   00089A                     
  1223                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
  1224   00089A  EC94  F004         	call	_CCP1_Initialize	;wreg free
  1225   00089E                     
  1226                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  1227   00089E  EC82  F004         	call	_ADC_Initialize	;wreg free
  1228   0008A2                     
  1229                           ;setting_hardaware/setting.c: 71:     INTCONbits.INT0IF = 0;
  1230   0008A2  92F2               	bcf	242,1,c	;volatile
  1231   0008A4                     
  1232                           ;setting_hardaware/setting.c: 72:     INTCONbits.GIE = 1;
  1233   0008A4  8EF2               	bsf	242,7,c	;volatile
  1234   0008A6                     
  1235                           ;setting_hardaware/setting.c: 73:     INTCONbits.INT0IE = 1;
  1236   0008A6  88F2               	bsf	242,4,c	;volatile
  1237                           
  1238                           ;setting_hardaware/setting.c: 74:     TRISA = 0b11110000;
  1239   0008A8  0EF0               	movlw	240
  1240   0008AA  6E92               	movwf	146,c	;volatile
  1241   0008AC                     
  1242                           ;setting_hardaware/setting.c: 75:     TRISBbits.RB0 = 1;
  1243   0008AC  8093               	bsf	147,0,c	;volatile
  1244   0008AE                     
  1245                           ;setting_hardaware/setting.c: 76:     LATA = 0;
  1246   0008AE  6A89               	clrf	137,c	;volatile
  1247                           
  1248                           ;setting_hardaware/setting.c: 77:     ADCON1 = 0x0F;
  1249   0008B0  0E0F               	movlw	15
  1250   0008B2  6EC1               	movwf	193,c	;volatile
  1251   0008B4  0012               	return		;funcret
  1252   0008B6                     __end_of_SYSTEM_Initialize:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _UART_Initialize *****************
  1256 ;; Defined at:
  1257 ;;		line 7 in file "setting_hardaware/uart.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1271 ;;      Params:         0       0       0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; Hardware stack levels required when called: 4
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_SYSTEM_Initialize
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text2
  1286   0008B6                     __ptext2:
  1287                           	callstack 0
  1288   0008B6                     _UART_Initialize:
  1289                           	callstack 25
  1290   0008B6                     
  1291                           ;setting_hardaware/uart.c: 17:     TRISCbits.TRISC6 = 1;
  1292   0008B6  8C94               	bsf	148,6,c	;volatile
  1293                           
  1294                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC7 = 1;
  1295   0008B8  8E94               	bsf	148,7,c	;volatile
  1296                           
  1297                           ;setting_hardaware/uart.c: 21:     TXSTAbits.SYNC = 0;
  1298   0008BA  98AC               	bcf	172,4,c	;volatile
  1299                           
  1300                           ;setting_hardaware/uart.c: 22:     BAUDCONbits.BRG16 = 0;
  1301   0008BC  96B8               	bcf	184,3,c	;volatile
  1302                           
  1303                           ;setting_hardaware/uart.c: 23:     TXSTAbits.BRGH = 0;
  1304   0008BE  94AC               	bcf	172,2,c	;volatile
  1305   0008C0                     
  1306                           ;setting_hardaware/uart.c: 24:     SPBRG = 51;
  1307   0008C0  0E33               	movlw	51
  1308   0008C2  6EAF               	movwf	175,c	;volatile
  1309   0008C4                     
  1310                           ;setting_hardaware/uart.c: 27:     RCSTAbits.SPEN = 1;
  1311   0008C4  8EAB               	bsf	171,7,c	;volatile
  1312   0008C6                     
  1313                           ;setting_hardaware/uart.c: 28:     PIR1bits.TXIF = 0;
  1314   0008C6  989E               	bcf	158,4,c	;volatile
  1315   0008C8                     
  1316                           ;setting_hardaware/uart.c: 29:     PIR1bits.RCIF = 0;
  1317   0008C8  9A9E               	bcf	158,5,c	;volatile
  1318   0008CA                     
  1319                           ;setting_hardaware/uart.c: 30:     TXSTAbits.TXEN = 1;
  1320   0008CA  8AAC               	bsf	172,5,c	;volatile
  1321   0008CC                     
  1322                           ;setting_hardaware/uart.c: 31:     RCSTAbits.CREN = 1;
  1323   0008CC  88AB               	bsf	171,4,c	;volatile
  1324   0008CE                     
  1325                           ;setting_hardaware/uart.c: 32:     PIE1bits.TXIE = 0;
  1326   0008CE  989D               	bcf	157,4,c	;volatile
  1327   0008D0                     
  1328                           ;setting_hardaware/uart.c: 33:     IPR1bits.TXIP = 0;
  1329   0008D0  989F               	bcf	159,4,c	;volatile
  1330   0008D2                     
  1331                           ;setting_hardaware/uart.c: 34:     PIE1bits.RCIE = 1;
  1332   0008D2  8A9D               	bsf	157,5,c	;volatile
  1333   0008D4                     
  1334                           ;setting_hardaware/uart.c: 35:     IPR1bits.RCIP = 0;
  1335   0008D4  9A9F               	bcf	159,5,c	;volatile
  1336   0008D6  0012               	return		;funcret
  1337   0008D8                     __end_of_UART_Initialize:
  1338                           	callstack 0
  1339                           
  1340 ;; *************** function _OSCILLATOR_Initialize *****************
  1341 ;; Defined at:
  1342 ;;		line 80 in file "setting_hardaware/setting.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		None
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1356 ;;      Params:         0       0       0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0
  1359 ;;      Totals:         0       0       0       0       0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 4
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_SYSTEM_Initialize
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text3
  1371   000934                     __ptext3:
  1372                           	callstack 0
  1373   000934                     _OSCILLATOR_Initialize:
  1374                           	callstack 25
  1375   000934                     
  1376                           ;setting_hardaware/setting.c: 82:     IRCF2 = 1;
  1377   000934  8CD3               	bsf	4051,6,c	;volatile
  1378                           
  1379                           ;setting_hardaware/setting.c: 83:     IRCF1 = 1;
  1380   000936  8AD3               	bsf	4051,5,c	;volatile
  1381                           
  1382                           ;setting_hardaware/setting.c: 84:     IRCF0 = 0;
  1383   000938  98D3               	bcf	4051,4,c	;volatile
  1384   00093A  0012               	return		;funcret
  1385   00093C                     __end_of_OSCILLATOR_Initialize:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _INTERRUPT_Initialize *****************
  1389 ;; Defined at:
  1390 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		None
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1404 ;;      Params:         0       0       0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 4
  1411 ;; This function calls:
  1412 ;;		Nothing
  1413 ;; This function is called by:
  1414 ;;		_SYSTEM_Initialize
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text4
  1419   00093C                     __ptext4:
  1420                           	callstack 0
  1421   00093C                     _INTERRUPT_Initialize:
  1422                           	callstack 25
  1423   00093C                     
  1424                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1425   00093C  8ED0               	bsf	208,7,c	;volatile
  1426                           
  1427                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  1428   00093E  8EF2               	bsf	242,7,c	;volatile
  1429                           
  1430                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1431   000940  8CF2               	bsf	242,6,c	;volatile
  1432   000942  0012               	return		;funcret
  1433   000944                     __end_of_INTERRUPT_Initialize:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _CCP1_Initialize *****************
  1437 ;; Defined at:
  1438 ;;		line 3 in file "setting_hardaware/ccp1.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1452 ;;      Params:         0       0       0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 4
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_SYSTEM_Initialize
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text5
  1467   000928                     __ptext5:
  1468                           	callstack 0
  1469   000928                     _CCP1_Initialize:
  1470                           	callstack 25
  1471   000928                     
  1472                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
  1473   000928  9494               	bcf	148,2,c	;volatile
  1474   00092A                     
  1475                           ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
  1476   00092A  0E09               	movlw	9
  1477   00092C  6EBD               	movwf	189,c	;volatile
  1478   00092E                     
  1479                           ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
  1480   00092E  949E               	bcf	158,2,c	;volatile
  1481   000930                     
  1482                           ;setting_hardaware/ccp1.c: 7:     IPR1bits.CCP1IP = 1;
  1483   000930  849F               	bsf	159,2,c	;volatile
  1484   000932  0012               	return		;funcret
  1485   000934                     __end_of_CCP1_Initialize:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function _ADC_Initialize *****************
  1489 ;; Defined at:
  1490 ;;		line 3 in file "setting_hardaware/adc.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1504 ;;      Params:         0       0       0       0       0       0       0
  1505 ;;      Locals:         0       0       0       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0
  1507 ;;      Totals:         0       0       0       0       0       0       0
  1508 ;;Total ram usage:        0 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; Hardware stack levels required when called: 4
  1511 ;; This function calls:
  1512 ;;		Nothing
  1513 ;; This function is called by:
  1514 ;;		_SYSTEM_Initialize
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text6
  1519   000904                     __ptext6:
  1520                           	callstack 0
  1521   000904                     _ADC_Initialize:
  1522                           	callstack 25
  1523   000904                     
  1524                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  1525   000904  6892               	setf	146,c	;volatile
  1526   000906                     
  1527                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  1528   000906  0E0E               	movlw	14
  1529   000908  6EC1               	movwf	193,c	;volatile
  1530   00090A                     
  1531                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  1532   00090A  8EC0               	bsf	4032,7,c	;volatile
  1533                           
  1534                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  1535   00090C  0E07               	movlw	7
  1536   00090E  12C0               	iorwf	192,f,c	;volatile
  1537   000910                     
  1538                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  1539   000910  6AC4               	clrf	196,c	;volatile
  1540   000912                     
  1541                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  1542   000912  6AC3               	clrf	195,c	;volatile
  1543   000914  0012               	return		;funcret
  1544   000916                     __end_of_ADC_Initialize:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _Mode2 *****************
  1548 ;; Defined at:
  1549 ;;		line 21 in file "main.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  i               2   16[COMRAM] int 
  1554 ;;  limit           2   14[COMRAM] int 
  1555 ;;  cur             2   18[COMRAM] int 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1565 ;;      Params:         0       0       0       0       0       0       0
  1566 ;;      Locals:         6       0       0       0       0       0       0
  1567 ;;      Temps:          2       0       0       0       0       0       0
  1568 ;;      Totals:         8       0       0       0       0       0       0
  1569 ;;Total ram usage:        8 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 5
  1572 ;; This function calls:
  1573 ;;		_GetString
  1574 ;;		_strcpy
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text7
  1581   000602                     __ptext7:
  1582                           	callstack 0
  1583   000602                     _Mode2:
  1584                           	callstack 25
  1585   000602                     
  1586                           ;main.c: 22:     int cur=2;
  1587   000602  0E00               	movlw	0
  1588   000604  6E42               	movwf	(Mode2@cur+1)^0,c
  1589   000606  0E02               	movlw	2
  1590   000608  6E41               	movwf	Mode2@cur^0,c
  1591                           
  1592                           ;main.c: 23:     while(cur<20)
  1593   00060A  EF73  F003         	goto	l1130
  1594   00060E                     l1102:
  1595                           
  1596                           ;main.c: 24:     {;main.c: 25:         strcpy(str, GetString());
  1597   00060E  0E1B               	movlw	low _str
  1598   000610  6E38               	movwf	strcpy@dest^0,c
  1599   000612  ECA2  F004         	call	_GetString	;wreg free
  1600   000616  6E39               	movwf	strcpy@src^0,c
  1601   000618  EC32  F004         	call	_strcpy	;wreg free
  1602   00061C                     
  1603                           ;main.c: 26:         if(str[cur]!='\0'){
  1604   00061C  5041               	movf	Mode2@cur^0,w,c
  1605   00061E  0F1B               	addlw	low _str
  1606   000620  6ED9               	movwf	fsr2l,c
  1607   000622  6ADA               	clrf	fsr2h,c
  1608   000624  50DF               	movf	indf2,w,c
  1609   000626  B4D8               	btfsc	status,2,c
  1610   000628  EF18  F003         	goto	u241
  1611   00062C  EF1A  F003         	goto	u240
  1612   000630                     u241:
  1613   000630  EF73  F003         	goto	l1130
  1614   000634                     u240:
  1615   000634                     
  1616                           ;main.c: 27:             int limit = (int)str[cur++] - 48;
  1617   000634  5041               	movf	Mode2@cur^0,w,c
  1618   000636  0F1B               	addlw	low _str
  1619   000638  6ED9               	movwf	fsr2l,c
  1620   00063A  6ADA               	clrf	fsr2h,c
  1621   00063C  50DF               	movf	indf2,w,c
  1622   00063E  6E3B               	movwf	??_Mode2^0,c
  1623   000640  0ED0               	movlw	208
  1624   000642  243B               	addwf	??_Mode2^0,w,c
  1625   000644  6E3D               	movwf	Mode2@limit^0,c
  1626   000646  6A3E               	clrf	(Mode2@limit+1)^0,c
  1627   000648  0EFF               	movlw	255
  1628   00064A  223E               	addwfc	(Mode2@limit+1)^0,f,c
  1629   00064C  4A41               	infsnz	Mode2@cur^0,f,c
  1630   00064E  2A42               	incf	(Mode2@cur+1)^0,f,c
  1631   000650                     l1110:
  1632                           
  1633                           ;main.c: 28:             int i=0;
  1634   000650  0E00               	movlw	0
  1635   000652  6E40               	movwf	(Mode2@i+1)^0,c
  1636   000654  0E00               	movlw	0
  1637   000656  6E3F               	movwf	Mode2@i^0,c
  1638   000658                     l1112:
  1639                           
  1640                           ;main.c: 30:                 strcpy(str, GetString());
  1641   000658  0E1B               	movlw	low _str
  1642   00065A  6E38               	movwf	strcpy@dest^0,c
  1643   00065C  ECA2  F004         	call	_GetString	;wreg free
  1644   000660  6E39               	movwf	strcpy@src^0,c
  1645   000662  EC32  F004         	call	_strcpy	;wreg free
  1646   000666                     
  1647                           ;main.c: 31:                 if(str[cur]!='\0') break;
  1648   000666  5041               	movf	Mode2@cur^0,w,c
  1649   000668  0F1B               	addlw	low _str
  1650   00066A  6ED9               	movwf	fsr2l,c
  1651   00066C  6ADA               	clrf	fsr2h,c
  1652   00066E  50DF               	movf	indf2,w,c
  1653   000670  B4D8               	btfsc	status,2,c
  1654   000672  EF3D  F003         	goto	u251
  1655   000676  EF3F  F003         	goto	u250
  1656   00067A                     u251:
  1657   00067A  EF41  F003         	goto	l1118
  1658   00067E                     u250:
  1659   00067E  EF6F  F003         	goto	l1128
  1660   000682                     l1118:
  1661                           
  1662                           ;main.c: 32:                 if(interrupted)
  1663   000682  5005               	movf	_interrupted^0,w,c
  1664   000684  1006               	iorwf	(_interrupted+1)^0,w,c
  1665   000686  B4D8               	btfsc	status,2,c
  1666   000688  EF48  F003         	goto	u261
  1667   00068C  EF4A  F003         	goto	u260
  1668   000690                     u261:
  1669   000690  EF4C  F003         	goto	l36
  1670   000694                     u260:
  1671   000694  EF6F  F003         	goto	l1128
  1672   000698                     l36:
  1673                           
  1674                           ;main.c: 36:                 LATA = i++;
  1675   000698  C03F  FF89         	movff	Mode2@i,3977	;volatile
  1676   00069C  4A3F               	infsnz	Mode2@i^0,f,c
  1677   00069E  2A40               	incf	(Mode2@i+1)^0,f,c
  1678   0006A0                     
  1679                           ;main.c: 37:                 _delay((unsigned long)((500)*(4000000/4000.0)));
  1680   0006A0  0E03               	movlw	3
  1681   0006A2  6E3C               	movwf	(??_Mode2+1)^0,c
  1682   0006A4  0E8A               	movlw	138
  1683   0006A6  6E3B               	movwf	??_Mode2^0,c
  1684   0006A8  0E56               	movlw	86
  1685   0006AA                     u337:
  1686   0006AA  2EE8               	decfsz	wreg,f,c
  1687   0006AC  D7FE               	bra	u337
  1688   0006AE  2E3B               	decfsz	??_Mode2^0,f,c
  1689   0006B0  D7FC               	bra	u337
  1690   0006B2  2E3C               	decfsz	(??_Mode2+1)^0,f,c
  1691   0006B4  D7FA               	bra	u337
  1692                           
  1693                           ;main.c: 38:                 if(i == limit+1)
  1694   0006B6  0E01               	movlw	1
  1695   0006B8  243D               	addwf	Mode2@limit^0,w,c
  1696   0006BA  6E3B               	movwf	??_Mode2^0,c
  1697   0006BC  0E00               	movlw	0
  1698   0006BE  203E               	addwfc	(Mode2@limit+1)^0,w,c
  1699   0006C0  6E3C               	movwf	(??_Mode2+1)^0,c
  1700   0006C2  503F               	movf	Mode2@i^0,w,c
  1701   0006C4  183B               	xorwf	??_Mode2^0,w,c
  1702   0006C6  E107               	bnz	u271
  1703   0006C8  5040               	movf	(Mode2@i+1)^0,w,c
  1704   0006CA  183C               	xorwf	(??_Mode2+1)^0,w,c
  1705   0006CC  A4D8               	btfss	status,2,c
  1706   0006CE  EF6B  F003         	goto	u271
  1707   0006D2  EF6D  F003         	goto	u270
  1708   0006D6                     u271:
  1709   0006D6  EF2C  F003         	goto	l1112
  1710   0006DA                     u270:
  1711   0006DA  EF28  F003         	goto	l1110
  1712   0006DE                     l1128:
  1713                           
  1714                           ;main.c: 43:             interrupted = 0;
  1715   0006DE  0E00               	movlw	0
  1716   0006E0  6E06               	movwf	(_interrupted+1)^0,c
  1717   0006E2  0E00               	movlw	0
  1718   0006E4  6E05               	movwf	_interrupted^0,c
  1719   0006E6                     l1130:
  1720                           
  1721                           ;main.c: 23:     while(cur<20)
  1722   0006E6  BE42               	btfsc	(Mode2@cur+1)^0,7,c
  1723   0006E8  EF7F  F003         	goto	u281
  1724   0006EC  5042               	movf	(Mode2@cur+1)^0,w,c
  1725   0006EE  E109               	bnz	u280
  1726   0006F0  0E14               	movlw	20
  1727   0006F2  5C41               	subwf	Mode2@cur^0,w,c
  1728   0006F4  A0D8               	btfss	status,0,c
  1729   0006F6  EF7F  F003         	goto	u281
  1730   0006FA  EF81  F003         	goto	u280
  1731   0006FE                     u281:
  1732   0006FE  EF07  F003         	goto	l1102
  1733   000702                     u280:
  1734   000702  0012               	return		;funcret
  1735   000704                     __end_of_Mode2:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _Mode1 *****************
  1739 ;; Defined at:
  1740 ;;		line 11 in file "main.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  cur             2   12[COMRAM] int 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1754 ;;      Params:         0       0       0       0       0       0       0
  1755 ;;      Locals:         2       0       0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0
  1757 ;;      Totals:         2       0       0       0       0       0       0
  1758 ;;Total ram usage:        2 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 5
  1761 ;; This function calls:
  1762 ;;		_GetString
  1763 ;;		_strcpy
  1764 ;; This function is called by:
  1765 ;;		_main
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text8
  1770   000776                     __ptext8:
  1771                           	callstack 0
  1772   000776                     _Mode1:
  1773                           	callstack 25
  1774   000776                     
  1775                           ;main.c: 12:     int cur=2;
  1776   000776  0E00               	movlw	0
  1777   000778  6E3C               	movwf	(Mode1@cur+1)^0,c
  1778   00077A  0E02               	movlw	2
  1779   00077C  6E3B               	movwf	Mode1@cur^0,c
  1780                           
  1781                           ;main.c: 13:     while(cur<20){
  1782   00077E  EFDD  F003         	goto	l1098
  1783   000782                     l1090:
  1784                           
  1785                           ;main.c: 14:         strcpy(str, GetString());
  1786   000782  0E1B               	movlw	low _str
  1787   000784  6E38               	movwf	strcpy@dest^0,c
  1788   000786  ECA2  F004         	call	_GetString	;wreg free
  1789   00078A  6E39               	movwf	strcpy@src^0,c
  1790   00078C  EC32  F004         	call	_strcpy	;wreg free
  1791   000790                     
  1792                           ;main.c: 15:         if(str[cur]!='\0'){
  1793   000790  503B               	movf	Mode1@cur^0,w,c
  1794   000792  0F1B               	addlw	low _str
  1795   000794  6ED9               	movwf	fsr2l,c
  1796   000796  6ADA               	clrf	fsr2h,c
  1797   000798  50DF               	movf	indf2,w,c
  1798   00079A  B4D8               	btfsc	status,2,c
  1799   00079C  EFD2  F003         	goto	u221
  1800   0007A0  EFD4  F003         	goto	u220
  1801   0007A4                     u221:
  1802   0007A4  EFDD  F003         	goto	l1098
  1803   0007A8                     u220:
  1804   0007A8                     
  1805                           ;main.c: 16:             LATA = (int)str[cur++] - 48;
  1806   0007A8  503B               	movf	Mode1@cur^0,w,c
  1807   0007AA  0F1B               	addlw	low _str
  1808   0007AC  6ED9               	movwf	fsr2l,c
  1809   0007AE  6ADA               	clrf	fsr2h,c
  1810   0007B0  50DF               	movf	indf2,w,c
  1811   0007B2  0FD0               	addlw	208
  1812   0007B4  6E89               	movwf	137,c	;volatile
  1813   0007B6  4A3B               	infsnz	Mode1@cur^0,f,c
  1814   0007B8  2A3C               	incf	(Mode1@cur+1)^0,f,c
  1815   0007BA                     l1098:
  1816                           
  1817                           ;main.c: 13:     while(cur<20){
  1818   0007BA  BE3C               	btfsc	(Mode1@cur+1)^0,7,c
  1819   0007BC  EFE9  F003         	goto	u231
  1820   0007C0  503C               	movf	(Mode1@cur+1)^0,w,c
  1821   0007C2  E109               	bnz	u230
  1822   0007C4  0E14               	movlw	20
  1823   0007C6  5C3B               	subwf	Mode1@cur^0,w,c
  1824   0007C8  A0D8               	btfss	status,0,c
  1825   0007CA  EFE9  F003         	goto	u231
  1826   0007CE  EFEB  F003         	goto	u230
  1827   0007D2                     u231:
  1828   0007D2  EFC1  F003         	goto	l1090
  1829   0007D6                     u230:
  1830   0007D6  0012               	return		;funcret
  1831   0007D8                     __end_of_Mode1:
  1832                           	callstack 0
  1833                           
  1834 ;; *************** function _strcpy *****************
  1835 ;; Defined at:
  1836 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  dest            1    9[COMRAM] PTR unsigned char 
  1839 ;;		 -> str(20), 
  1840 ;;  src             1   10[COMRAM] PTR const unsigned char 
  1841 ;;		 -> mystring(20), 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  d               1   11[COMRAM] PTR unsigned char 
  1844 ;;		 -> str(20), 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    9[COMRAM] PTR unsigned char 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1854 ;;      Params:         2       0       0       0       0       0       0
  1855 ;;      Locals:         1       0       0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0
  1857 ;;      Totals:         3       0       0       0       0       0       0
  1858 ;;Total ram usage:        3 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 4
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_Mode1
  1865 ;;		_Mode2
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text9
  1871   000864                     __ptext9:
  1872                           	callstack 0
  1873   000864                     _strcpy:
  1874                           	callstack 26
  1875   000864  C038  F03A         	movff	strcpy@dest,strcpy@d
  1876   000868                     l1086:
  1877   000868  2A39               	incf	strcpy@src^0,f,c
  1878   00086A  0439               	decf	strcpy@src^0,w,c
  1879   00086C  6ED9               	movwf	fsr2l,c
  1880   00086E  6ADA               	clrf	fsr2h,c
  1881   000870  2A3A               	incf	strcpy@d^0,f,c
  1882   000872  043A               	decf	strcpy@d^0,w,c
  1883   000874  6EE1               	movwf	fsr1l,c
  1884   000876  6AE2               	clrf	fsr1h,c
  1885   000878  CFDF FFE7          	movff	indf2,indf1
  1886   00087C  50E7               	movf	indf1,w,c
  1887   00087E  A4D8               	btfss	status,2,c
  1888   000880  EF44  F004         	goto	u211
  1889   000884  EF46  F004         	goto	u210
  1890   000888                     u211:
  1891   000888  EF34  F004         	goto	l1086
  1892   00088C                     u210:
  1893   00088C  0012               	return		;funcret
  1894   00088E                     __end_of_strcpy:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _GetString *****************
  1898 ;; Defined at:
  1899 ;;		line 73 in file "setting_hardaware/uart.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    7[COMRAM] PTR unsigned char 
  1906 ;; Registers used:
  1907 ;;		wreg
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1913 ;;      Params:         2       0       0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0
  1916 ;;      Totals:         2       0       0       0       0       0       0
  1917 ;;Total ram usage:        2 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 4
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_Mode1
  1924 ;;		_Mode2
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text10
  1930   000944                     __ptext10:
  1931                           	callstack 0
  1932   000944                     _GetString:
  1933                           	callstack 25
  1934   000944                     
  1935                           ;setting_hardaware/uart.c: 74:     return mystring;
  1936   000944  0E07               	movlw	_mystring& (0+255)
  1937   000946  0012               	return		;funcret
  1938   000948                     __end_of_GetString:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _ClearBuffer *****************
  1942 ;; Defined at:
  1943 ;;		line 51 in file "setting_hardaware/uart.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  i               2    7[COMRAM] int 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1957 ;;      Params:         0       0       0       0       0       0       0
  1958 ;;      Locals:         2       0       0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0
  1960 ;;      Totals:         2       0       0       0       0       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 4
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_main
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text11
  1972   000828                     __ptext11:
  1973                           	callstack 0
  1974   000828                     _ClearBuffer:
  1975                           	callstack 26
  1976   000828                     
  1977                           ;setting_hardaware/uart.c: 52:     for(int i = 0; i < 10 ; i++)
  1978   000828  0E00               	movlw	0
  1979   00082A  6E37               	movwf	(ClearBuffer@i+1)^0,c
  1980   00082C  0E00               	movlw	0
  1981   00082E  6E36               	movwf	ClearBuffer@i^0,c
  1982   000830                     l1000:
  1983                           
  1984                           ;setting_hardaware/uart.c: 53:         mystring[i] = '\0';
  1985   000830  5036               	movf	ClearBuffer@i^0,w,c
  1986   000832  0F07               	addlw	low _mystring
  1987   000834  6ED9               	movwf	fsr2l,c
  1988   000836  6ADA               	clrf	fsr2h,c
  1989   000838  6ADF               	clrf	indf2,c
  1990   00083A  4A36               	infsnz	ClearBuffer@i^0,f,c
  1991   00083C  2A37               	incf	(ClearBuffer@i+1)^0,f,c
  1992   00083E  BE37               	btfsc	(ClearBuffer@i+1)^0,7,c
  1993   000840  EF2B  F004         	goto	u101
  1994   000844  5037               	movf	(ClearBuffer@i+1)^0,w,c
  1995   000846  E109               	bnz	u100
  1996   000848  0E0A               	movlw	10
  1997   00084A  5C36               	subwf	ClearBuffer@i^0,w,c
  1998   00084C  A0D8               	btfss	status,0,c
  1999   00084E  EF2B  F004         	goto	u101
  2000   000852  EF2D  F004         	goto	u100
  2001   000856                     u101:
  2002   000856  EF18  F004         	goto	l1000
  2003   00085A                     u100:
  2004   00085A                     
  2005                           ;setting_hardaware/uart.c: 54:     lenStr = 0;
  2006   00085A  0E00               	movlw	0
  2007   00085C  6E02               	movwf	(_lenStr+1)^0,c
  2008   00085E  0E00               	movlw	0
  2009   000860  6E01               	movwf	_lenStr^0,c
  2010   000862  0012               	return		;funcret
  2011   000864                     __end_of_ClearBuffer:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function _Lo_ISR *****************
  2015 ;; Defined at:
  2016 ;;		line 79 in file "setting_hardaware/uart.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2030 ;;      Params:         0       0       0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0
  2032 ;;      Temps:          5       0       0       0       0       0       0
  2033 ;;      Totals:         5       0       0       0       0       0       0
  2034 ;;Total ram usage:        5 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 3
  2037 ;; This function calls:
  2038 ;;		_MyusartRead
  2039 ;; This function is called by:
  2040 ;;		Interrupt level 1
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	intcodelo
  2045   000018                     __pintcodelo:
  2046                           	callstack 0
  2047   000018                     _Lo_ISR:
  2048                           	callstack 25
  2049                           
  2050                           ;incstack = 0
  2051   000018  8043               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2052   00001A  CFD8 F031          	movff	status,??_Lo_ISR
  2053   00001E  CFE8 F032          	movff	wreg,??_Lo_ISR+1
  2054   000022  CFE0 F033          	movff	bsr,??_Lo_ISR+2
  2055   000026  CFD9 F034          	movff	fsr2l,??_Lo_ISR+3
  2056   00002A  CFDA F035          	movff	fsr2h,??_Lo_ISR+4
  2057   00002E                     
  2058                           ;setting_hardaware/uart.c: 81:     if(RCIF)
  2059   00002E  AA9E               	btfss	3998,5,c	;volatile
  2060   000030  EF1C  F000         	goto	i1u19_21
  2061   000034  EF1E  F000         	goto	i1u19_20
  2062   000038                     i1u19_21:
  2063   000038  EF2A  F000         	goto	i1l194
  2064   00003C                     i1u19_20:
  2065   00003C                     
  2066                           ;setting_hardaware/uart.c: 82:     {;setting_hardaware/uart.c: 83:         if(RCSTAbits.
      +                          OERR)
  2067   00003C  A2AB               	btfss	171,1,c	;volatile
  2068   00003E  EF23  F000         	goto	i1u20_21
  2069   000042  EF25  F000         	goto	i1u20_20
  2070   000046                     i1u20_21:
  2071   000046  EF28  F000         	goto	i1l1076
  2072   00004A                     i1u20_20:
  2073   00004A                     
  2074                           ;setting_hardaware/uart.c: 84:         {;setting_hardaware/uart.c: 85:             CREN 
      +                          = 0;
  2075   00004A  98AB               	bcf	4011,4,c	;volatile
  2076                           
  2077                           ;setting_hardaware/uart.c: 86:             __nop();
  2078   00004C  0000               	nop	
  2079                           
  2080                           ;setting_hardaware/uart.c: 87:             CREN = 1;
  2081   00004E  88AB               	bsf	4011,4,c	;volatile
  2082   000050                     i1l1076:
  2083                           
  2084                           ;setting_hardaware/uart.c: 89:         MyusartRead();
  2085   000050  ECEC  F003         	call	_MyusartRead	;wreg free
  2086   000054                     i1l194:
  2087   000054  C035  FFDA         	movff	??_Lo_ISR+4,fsr2h
  2088   000058  C034  FFD9         	movff	??_Lo_ISR+3,fsr2l
  2089   00005C  C033  FFE0         	movff	??_Lo_ISR+2,bsr
  2090   000060  C032  FFE8         	movff	??_Lo_ISR+1,wreg
  2091   000064  C031  FFD8         	movff	??_Lo_ISR,status
  2092   000068  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2093   00006A  0010               	retfie	
  2094   00006C                     __end_of_Lo_ISR:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _MyusartRead *****************
  2098 ;; Defined at:
  2099 ;;		line 57 in file "setting_hardaware/uart.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  data            1    1[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2113 ;;      Params:         0       0       0       0       0       0       0
  2114 ;;      Locals:         1       0       0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0
  2116 ;;      Totals:         1       0       0       0       0       0       0
  2117 ;;Total ram usage:        1 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 2
  2120 ;; This function calls:
  2121 ;;		_UART_Write
  2122 ;; This function is called by:
  2123 ;;		_Lo_ISR
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text13
  2128   0007D8                     __ptext13:
  2129                           	callstack 0
  2130   0007D8                     _MyusartRead:
  2131                           	callstack 25
  2132   0007D8                     
  2133                           ;setting_hardaware/uart.c: 60:     char data;;setting_hardaware/uart.c: 61:     data = R
      +                          CREG;
  2134   0007D8  CFAE F030          	movff	4014,MyusartRead@data	;volatile
  2135   0007DC                     
  2136                           ;setting_hardaware/uart.c: 62:     mystring[lenStr++] = RCREG;
  2137   0007DC  5001               	movf	_lenStr^0,w,c
  2138   0007DE  0F07               	addlw	low _mystring
  2139   0007E0  6ED9               	movwf	fsr2l,c
  2140   0007E2  6ADA               	clrf	fsr2h,c
  2141   0007E4  CFAE FFDF          	movff	4014,indf2	;volatile
  2142   0007E8  4A01               	infsnz	_lenStr^0,f,c
  2143   0007EA  2A02               	incf	(_lenStr+1)^0,f,c
  2144   0007EC                     
  2145                           ;setting_hardaware/uart.c: 63:     if(data == '\r')
  2146   0007EC  0E0D               	movlw	13
  2147   0007EE  1830               	xorwf	MyusartRead@data^0,w,c
  2148   0007F0  A4D8               	btfss	status,2,c
  2149   0007F2  EFFD  F003         	goto	i1u11_21
  2150   0007F6  EFFF  F003         	goto	i1u11_20
  2151   0007FA                     i1u11_21:
  2152   0007FA  EF02  F004         	goto	i1l1018
  2153   0007FE                     i1u11_20:
  2154   0007FE                     
  2155                           ;setting_hardaware/uart.c: 64:         UART_Write('\n');
  2156   0007FE  0E0A               	movlw	10
  2157   000800  EC77  F004         	call	_UART_Write
  2158   000804                     i1l1018:
  2159                           
  2160                           ;setting_hardaware/uart.c: 65:     UART_Write(data);
  2161   000804  5030               	movf	MyusartRead@data^0,w,c
  2162   000806  EC77  F004         	call	_UART_Write
  2163   00080A                     
  2164                           ;setting_hardaware/uart.c: 66:     if(lenStr == 9)
  2165   00080A  0E09               	movlw	9
  2166   00080C  1801               	xorwf	_lenStr^0,w,c
  2167   00080E  1002               	iorwf	(_lenStr+1)^0,w,c
  2168   000810  A4D8               	btfss	status,2,c
  2169   000812  EF0D  F004         	goto	i1u12_21
  2170   000816  EF0F  F004         	goto	i1u12_20
  2171   00081A                     i1u12_21:
  2172   00081A  EF13  F004         	goto	i1l184
  2173   00081E                     i1u12_20:
  2174   00081E                     
  2175                           ;setting_hardaware/uart.c: 67:     {;setting_hardaware/uart.c: 68:         lenStr = 0;
  2176   00081E  0E00               	movlw	0
  2177   000820  6E02               	movwf	(_lenStr+1)^0,c
  2178   000822  0E00               	movlw	0
  2179   000824  6E01               	movwf	_lenStr^0,c
  2180   000826                     i1l184:
  2181   000826  0012               	return		;funcret
  2182   000828                     __end_of_MyusartRead:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _UART_Write *****************
  2186 ;; Defined at:
  2187 ;;		line 39 in file "setting_hardaware/uart.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  data            1    wreg     unsigned char 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  data            1    0[COMRAM] unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2201 ;;      Params:         0       0       0       0       0       0       0
  2202 ;;      Locals:         1       0       0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0
  2204 ;;      Totals:         1       0       0       0       0       0       0
  2205 ;;Total ram usage:        1 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 1
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_MyusartRead
  2212 ;;		_UART_Write_Text
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text14
  2217   0008EE                     __ptext14:
  2218                           	callstack 0
  2219   0008EE                     _UART_Write:
  2220                           	callstack 25
  2221                           
  2222                           ;incstack = 0
  2223                           ;UART_Write@data stored from wreg
  2224   0008EE  6E2F               	movwf	UART_Write@data^0,c
  2225   0008F0                     i1l165:
  2226   0008F0  A2AC               	btfss	172,1,c	;volatile
  2227   0008F2  EF7D  F004         	goto	i1u2_21
  2228   0008F6  EF7F  F004         	goto	i1u2_20
  2229   0008FA                     i1u2_21:
  2230   0008FA  EF78  F004         	goto	i1l165
  2231   0008FE                     i1u2_20:
  2232   0008FE                     
  2233                           ;setting_hardaware/uart.c: 42:     TXREG = data;
  2234   0008FE  C02F  FFAD         	movff	UART_Write@data,4013	;volatile
  2235   000902  0012               	return		;funcret
  2236   000904                     __end_of_UART_Write:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _Hi_ISR *****************
  2240 ;; Defined at:
  2241 ;;		line 67 in file "main.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2255 ;;      Params:         0       0       0       0       0       0       0
  2256 ;;      Locals:         0       0       0       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0       0       0
  2258 ;;      Totals:         0       0       0       0       0       0       0
  2259 ;;Total ram usage:        0 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		Interrupt level 2
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	intcode
  2269   000008                     __pintcode:
  2270                           	callstack 0
  2271   000008                     _Hi_ISR:
  2272                           	callstack 25
  2273                           
  2274                           ;incstack = 0
  2275   000008  8243               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2276   00000A  ED8B  F004         	call	int_func,f	;refresh shadow registers
  2277                           
  2278                           	psect	intcode_body
  2279   000916                     __pintcode_body:
  2280                           	callstack 25
  2281   000916                     int_func:
  2282                           	callstack 25
  2283   000916  0006               	pop		; remove dummy address from shadow register refresh
  2284   000918                     
  2285                           ;main.c: 69:     LATA = 0;
  2286   000918  6A89               	clrf	137,c	;volatile
  2287   00091A                     
  2288                           ;main.c: 70:     interrupted = 1;
  2289   00091A  0E00               	movlw	0
  2290   00091C  6E06               	movwf	(_interrupted+1)^0,c
  2291   00091E  0E01               	movlw	1
  2292   000920  6E05               	movwf	_interrupted^0,c
  2293   000922                     
  2294                           ;main.c: 71:     INTCONbits.INT0IF = 0;
  2295   000922  92F2               	bcf	242,1,c	;volatile
  2296   000924  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2297   000926  0011               	retfie		f
  2298   000928                     __end_of_Hi_ISR:
  2299                           	callstack 0
  2300                           
  2301                           	psect	smallconst
  2302   000600                     __psmallconst:
  2303                           	callstack 0
  2304   000600  00                 	db	0
  2305   000601  00                 	db	0	; dummy byte at the end
  2306   000000                     __activetblptr  equ	0
  2307                           
  2308                           	psect	rparam
  2309   000001                     ___rparam_used  equ	1
  2310   000000                     ___param_bank   equ	0
  2311   000000                     __Lparam        equ	__Lrparam
  2312   000000                     __Hparam        equ	__Hrparam
  2313                           
  2314                           	psect	temp
  2315   000043                     btemp:
  2316                           	callstack 0
  2317   000043                     	ds	1
  2318   000043                     int$flags       set	btemp
  2319   000044                     wtemp8          set	btemp+1
  2320   000044                     ttemp5          set	btemp+1
  2321   000047                     ttemp6          set	btemp+4
  2322   00004B                     ttemp7          set	btemp+8
  2323                           
  2324                           	psect	idloc
  2325                           
  2326                           ;Config register IDLOC0 @ 0x200000
  2327                           ;	unspecified, using default values
  2328   200000                     	org	2097152
  2329   200000  FF                 	db	255
  2330                           
  2331                           ;Config register IDLOC1 @ 0x200001
  2332                           ;	unspecified, using default values
  2333   200001                     	org	2097153
  2334   200001  FF                 	db	255
  2335                           
  2336                           ;Config register IDLOC2 @ 0x200002
  2337                           ;	unspecified, using default values
  2338   200002                     	org	2097154
  2339   200002  FF                 	db	255
  2340                           
  2341                           ;Config register IDLOC3 @ 0x200003
  2342                           ;	unspecified, using default values
  2343   200003                     	org	2097155
  2344   200003  FF                 	db	255
  2345                           
  2346                           ;Config register IDLOC4 @ 0x200004
  2347                           ;	unspecified, using default values
  2348   200004                     	org	2097156
  2349   200004  FF                 	db	255
  2350                           
  2351                           ;Config register IDLOC5 @ 0x200005
  2352                           ;	unspecified, using default values
  2353   200005                     	org	2097157
  2354   200005  FF                 	db	255
  2355                           
  2356                           ;Config register IDLOC6 @ 0x200006
  2357                           ;	unspecified, using default values
  2358   200006                     	org	2097158
  2359   200006  FF                 	db	255
  2360                           
  2361                           ;Config register IDLOC7 @ 0x200007
  2362                           ;	unspecified, using default values
  2363   200007                     	org	2097159
  2364   200007  FF                 	db	255
  2365                           
  2366                           	psect	config
  2367                           
  2368                           ; Padding undefined space
  2369   300000                     	org	3145728
  2370   300000  FF                 	db	255
  2371                           
  2372                           ;Config register CONFIG1H @ 0x300001
  2373                           ;	Oscillator Selection bits
  2374                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2375                           ;	Fail-Safe Clock Monitor Enable bit
  2376                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2377                           ;	Internal/External Oscillator Switchover bit
  2378                           ;	IESO = ON, Oscillator Switchover mode enabled
  2379   300001                     	org	3145729
  2380   300001  88                 	db	136
  2381                           
  2382                           ;Config register CONFIG2L @ 0x300002
  2383                           ;	Power-up Timer Enable bit
  2384                           ;	PWRT = OFF, PWRT disabled
  2385                           ;	Brown-out Reset Enable bits
  2386                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2387                           ;	Brown Out Reset Voltage bits
  2388                           ;	BORV = 3, Minimum setting
  2389   300002                     	org	3145730
  2390   300002  1F                 	db	31
  2391                           
  2392                           ;Config register CONFIG2H @ 0x300003
  2393                           ;	Watchdog Timer Enable bit
  2394                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2395                           ;	Watchdog Timer Postscale Select bits
  2396                           ;	WDTPS = 1, 1:1
  2397   300003                     	org	3145731
  2398   300003  00                 	db	0
  2399                           
  2400                           ; Padding undefined space
  2401   300004                     	org	3145732
  2402   300004  FF                 	db	255
  2403                           
  2404                           ;Config register CONFIG3H @ 0x300005
  2405                           ;	CCP2 MUX bit
  2406                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2407                           ;	PORTB A/D Enable bit
  2408                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2409                           ;	Low-Power Timer1 Oscillator Enable bit
  2410                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2411                           ;	MCLR Pin Enable bit
  2412                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2413   300005                     	org	3145733
  2414   300005  83                 	db	131
  2415                           
  2416                           ;Config register CONFIG4L @ 0x300006
  2417                           ;	Stack Full/Underflow Reset Enable bit
  2418                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2419                           ;	Single-Supply ICSP Enable bit
  2420                           ;	LVP = OFF, Single-Supply ICSP disabled
  2421                           ;	Extended Instruction Set Enable bit
  2422                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2423                           ;	Background Debugger Enable bit
  2424                           ;	DEBUG = 0x1, unprogrammed default
  2425   300006                     	org	3145734
  2426   300006  81                 	db	129
  2427                           
  2428                           ; Padding undefined space
  2429   300007                     	org	3145735
  2430   300007  FF                 	db	255
  2431                           
  2432                           ;Config register CONFIG5L @ 0x300008
  2433                           ;	Code Protection bit
  2434                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2435                           ;	Code Protection bit
  2436                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2437                           ;	Code Protection bit
  2438                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2439                           ;	Code Protection bit
  2440                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2441   300008                     	org	3145736
  2442   300008  0F                 	db	15
  2443                           
  2444                           ;Config register CONFIG5H @ 0x300009
  2445                           ;	Boot Block Code Protection bit
  2446                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2447                           ;	Data EEPROM Code Protection bit
  2448                           ;	CPD = OFF, Data EEPROM not code-protected
  2449   300009                     	org	3145737
  2450   300009  C0                 	db	192
  2451                           
  2452                           ;Config register CONFIG6L @ 0x30000A
  2453                           ;	Write Protection bit
  2454                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2455                           ;	Write Protection bit
  2456                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2457                           ;	Write Protection bit
  2458                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2459                           ;	Write Protection bit
  2460                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2461   30000A                     	org	3145738
  2462   30000A  0F                 	db	15
  2463                           
  2464                           ;Config register CONFIG6H @ 0x30000B
  2465                           ;	Configuration Register Write Protection bit
  2466                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2467                           ;	Boot Block Write Protection bit
  2468                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2469                           ;	Data EEPROM Write Protection bit
  2470                           ;	WRTD = OFF, Data EEPROM not write-protected
  2471   30000B                     	org	3145739
  2472   30000B  E0                 	db	224
  2473                           
  2474                           ;Config register CONFIG7L @ 0x30000C
  2475                           ;	Table Read Protection bit
  2476                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2477                           ;	Table Read Protection bit
  2478                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2479                           ;	Table Read Protection bit
  2480                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2481                           ;	Table Read Protection bit
  2482                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2483   30000C                     	org	3145740
  2484   30000C  0F                 	db	15
  2485                           
  2486                           ;Config register CONFIG7H @ 0x30000D
  2487                           ;	Boot Block Table Read Protection bit
  2488                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2489   30000D                     	org	3145741
  2490   30000D  40                 	db	64
  2491                           tosu	equ	0xFFF
  2492                           tosh	equ	0xFFE
  2493                           tosl	equ	0xFFD
  2494                           stkptr	equ	0xFFC
  2495                           pclatu	equ	0xFFB
  2496                           pclath	equ	0xFFA
  2497                           pcl	equ	0xFF9
  2498                           tblptru	equ	0xFF8
  2499                           tblptrh	equ	0xFF7
  2500                           tblptrl	equ	0xFF6
  2501                           tablat	equ	0xFF5
  2502                           prodh	equ	0xFF4
  2503                           prodl	equ	0xFF3
  2504                           indf0	equ	0xFEF
  2505                           postinc0	equ	0xFEE
  2506                           postdec0	equ	0xFED
  2507                           preinc0	equ	0xFEC
  2508                           plusw0	equ	0xFEB
  2509                           fsr0h	equ	0xFEA
  2510                           fsr0l	equ	0xFE9
  2511                           wreg	equ	0xFE8
  2512                           indf1	equ	0xFE7
  2513                           postinc1	equ	0xFE6
  2514                           postdec1	equ	0xFE5
  2515                           preinc1	equ	0xFE4
  2516                           plusw1	equ	0xFE3
  2517                           fsr1h	equ	0xFE2
  2518                           fsr1l	equ	0xFE1
  2519                           bsr	equ	0xFE0
  2520                           indf2	equ	0xFDF
  2521                           postinc2	equ	0xFDE
  2522                           postdec2	equ	0xFDD
  2523                           preinc2	equ	0xFDC
  2524                           plusw2	equ	0xFDB
  2525                           fsr2h	equ	0xFDA
  2526                           fsr2l	equ	0xFD9
  2527                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20      66
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_Mode2
    _Mode2->_strcpy
    _Mode1->_strcpy
    _strcpy->_GetString

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     516
                        _ClearBuffer
                          _GetString
                              _Mode1
                              _Mode2
                  _SYSTEM_Initialize
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode2                                                8     8      0     241
                                             12 COMRAM     8     8      0
                          _GetString
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _Mode1                                                2     2      0     149
                                             12 COMRAM     2     2      0
                          _GetString
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               3     1      2      81
                                              9 COMRAM     3     1      2
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (2) _GetString                                            2     0      2       0
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearBuffer                                          2     2      0      45
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0      45
                                              2 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0      45
                                              1 COMRAM     1     1      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _Mode1
     _GetString
     _strcpy
       _GetString (ARG)
   _Mode2
     _GetString
     _strcpy
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _strcpy

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write

 _Hi_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1523      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           244      0       0      0.0%
BANK5              244      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     20      66     52.4%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFRlh         10      0       0      0.0%
BITBIGSFRll          9      0       0      0.0%
BITBIGSFRh           7      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      66      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Dec 19 12:03:28 2024

                           l40 0702                             l27 07D6                             l36 0698  
                           l73 0914                             l90 0932                             l97 0942  
                           bsr 0FE0        __end_of_CCP1_Initialize 0934                            l126 08B4  
                          l129 093A                            l162 08D6                            l179 0862  
                          l187 0946                            l900 0930                            l902 093C  
                          l910 08C4                            l904 0934                            l920 08CE  
                          l912 08C6                            l922 08D0                            l914 08C8  
                          l906 08B6                            l924 08D2                            l916 08CA  
                          l908 08C0                            l926 08D4                            l918 08CC  
                          l874 088C                            l890 0910                            l892 0912  
                          l884 0904                            l980 089A                            l886 0906  
                          l894 0928                            l990 08AC                            l982 089E  
                          l888 090A                            l896 092A                            l992 08AE  
                          l984 08A2                            l976 088E                            l994 0828  
                          l898 092E                            l986 08A4                            l978 0896  
                          l988 08A6                            u100 085A                            u101 0856  
                          u210 088C                            u211 0888                            u220 07A8  
                          u300 073A                            u221 07A4                            u301 0736  
                          u230 07D6                            u310 0758                            u231 07D2  
                          u311 0754                            u240 0634                            u320 076A  
                          u241 0630                            u321 0766                            u250 067E  
                          u251 067A                            u260 0694                            u261 0690  
                          u270 06DA                            u271 06D6                            u280 0702  
                          u281 06FE                            u337 06AA                            u290 0728  
                          u291 0724                     Mode2@limit 003D                            _str 001B  
                          wreg 0FE8                           l1000 0830                           l1002 083A  
                         l1004 083E                           l1100 0602                           l1006 085A  
                         l1110 0650                           l1102 060E                           l1112 0658  
                         l1104 061C                           l1122 069C                           l1114 0666  
                         l1106 0634                           l1130 06E6                           l1124 06A0  
                         l1108 064C                           l1140 073A                           l1132 0704  
                         l1118 0682                           l1142 073E                           l1134 0708  
                         l1080 0944                           l1128 06DE                           l1144 0746  
                         l1136 0716                           l1090 0782                           l1146 0758  
                         l1138 0728                           l1084 0864                           l1092 0790  
                         l1148 076A                           l1086 0868                           l1094 07A8  
                         l1096 07B6                           l1088 0776                           l1098 07BA  
                         _ADFM 7E07                           _CREN 7D5C                           _LATA 0F89  
                         _RCIF 7CF5                           i2l56 0924                           _cont 0003  
                         _main 0704                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 0043                           start 006C  
              MyusartRead@data 0030                   ___param_bank 0000               ?_UART_Initialize 002F  
__end_of_OSCILLATOR_Initialize 093C                          ?_main 002F                          _IRCF0 7E9C  
                        _IRCF1 7E9D                          _IRCF2 7E9E                          i1l165 08F0  
                        i1l168 0902                          i1l184 0826                          i1l194 0054  
                        i1l930 08FE                          i1l928 08F0                          _RCREG 0FAE  
                        _SPBRG 0FAF                          _TRISA 0F92                          _TXREG 0FAD  
                        _Mode1 0776                          _Mode2 0602                    ?_UART_Write 002F  
                  _ClearBuffer 0828                          ttemp5 0044                          ttemp6 0047  
                        ttemp7 004B                          status 0FD8                          wtemp8 0044  
              __initialization 08D8                   __end_of_main 0776                         ??_main 0043  
             ?_CCP1_Initialize 002F                  __activetblptr 0000                         ?_Mode1 002F  
                       ?_Mode2 002F                         _ADCON1 0FC1                         _ADRESH 0FC4  
                       _ADRESL 0FC3                         i1l1010 07DC                         i1l1020 080A  
                       i1l1012 07E8                         i1l1022 081E                         i1l1014 07EC  
                       i1l1016 07FE                         i1l1008 07D8                         i1l1018 0804  
                       i1l1070 002E                         i1l1072 003C                         i1l1074 004A  
                       i1l1076 0050                         i2l1050 0922                         i2l1046 0918  
                       i2l1048 091A                         i1u2_20 08FE                         i1u2_21 08FA  
                       Mode2@i 003F                         _Hi_ISR 0008                         _Lo_ISR 0018  
                       _lenStr 0001                         clear_0 08DE                         isa$std 0001  
                       _strcpy 0864                   __mediumconst 0000              _SYSTEM_Initialize 088E  
                   __accesstop 0080        __end_of__initialization 08E4             ?_SYSTEM_Initialize 002F  
                ___rparam_used 0001              __end_of_GetString 0948                  __end_of_Mode1 07D8  
                __end_of_Mode2 0704                 __pcstackCOMRAM 002F            ??_SYSTEM_Initialize 0036  
                ??_MyusartRead 0030                        ??_Mode1 003B                        ??_Mode2 003B  
    __end_of_SYSTEM_Initialize 08B6                        ?_Hi_ISR 002F                        ?_Lo_ISR 002F  
                      _CCP1CON 0FBD                        ?_strcpy 0038                        i1u11_20 07FE  
                      i1u11_21 07FA                        i1u12_20 081E                        i1u20_20 004A  
                      i1u12_21 081A                        i1u20_21 0046                   ??_UART_Write 002F  
                      i1u19_20 003C                        i1u19_21 0038                   ?_ClearBuffer 002F  
          __end_of_MyusartRead 0828                        __Hparam 0000                        __Lparam 0000  
           __end_of_UART_Write 0904                   __psmallconst 0600                        __pcinit 08D8  
                      __ramtop 0600                        __ptext0 0704                        __ptext1 088E  
                      __ptext2 08B6                        __ptext3 0934                        __ptext4 093C  
                      __ptext5 0928                        __ptext6 0904                        __ptext7 0602  
                      __ptext8 0776                        __ptext9 0864          _OSCILLATOR_Initialize 0934  
               __pintcode_body 0916           end_of_initialization 08E4                        int_func 0916  
                    _RCSTAbits 0FAB                        postinc0 0FEE                        strcpy@d 003A  
               UART_Write@data 002F                      _TRISBbits 0F93                      _TRISCbits 0F94  
                  _MyusartRead 07D8                      _TXSTAbits 0FAC                 __end_of_Hi_ISR 0928  
               __end_of_Lo_ISR 006C   __end_of_INTERRUPT_Initialize 0944                      _GetString 0944  
                  _BAUDCONbits 0FB8                 _ADC_Initialize 0904         ?_OSCILLATOR_Initialize 002F  
               __end_of_strcpy 088E            start_initialization 08D8                   ClearBuffer@i 0036  
            ??_UART_Initialize 0036                       ??_Hi_ISR 002F                       ??_Lo_ISR 0031  
       __end_of_ADC_Initialize 0916                     ?_GetString 0036                       ??_strcpy 003A  
                  __pbssCOMRAM 0001              ??_CCP1_Initialize 0036                      __pintcode 0008  
              ?_ADC_Initialize 002F                    __pintcodelo 0018                    __smallconst 0600  
         _INTERRUPT_Initialize 093C                       _IPR1bits 0F9F                       _PIE1bits 0F9D  
                     _PIR1bits 0F9E                       _RCONbits 0FD0                    ??_GetString 0038  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0                       Mode1@cur 003B  
                     Mode2@cur 0041                   ?_MyusartRead 002F          ?_INTERRUPT_Initialize 002F  
                     __Hrparam 0000                       __Lrparam 0000        ??_OSCILLATOR_Initialize 0036  
              _UART_Initialize 08B6                       __ptext10 0944                       __ptext11 0828  
                     __ptext13 07D8                       __ptext14 08EE                     strcpy@dest 0038  
                     isa$xinst 0000                    _interrupted 0005                       int$flags 0043  
                     _mystring 0007                     _INTCONbits 0FF2                _CCP1_Initialize 0928  
       ??_INTERRUPT_Initialize 0036                  ??_ClearBuffer 0036                       intlevel1 0000  
                     intlevel2 0000                      strcpy@src 0039               ??_ADC_Initialize 0036  
      __end_of_UART_Initialize 08D8                     _UART_Write 08EE            __end_of_ClearBuffer 0864  
